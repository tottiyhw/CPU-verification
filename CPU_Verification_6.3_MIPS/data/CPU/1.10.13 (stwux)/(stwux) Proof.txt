
------------------------------------- Proof -------------------------------------

/IF	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[NIA]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rS,rA,rB,366}                      Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= GPRegs[rB]=b                                            Premise(F4)
	S5= GPRegs[rS]={B1,B2,B3,B4}                                Premise(F5)

IF	S6= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S7= PC.NIA=addr                                             PC-Out(S1)
	S8= PC.NIA=>Mux40.1                                         Premise(F3930)
	S9= Mux40.1=addr                                            Path(S7,S8)
	S10= Mux40.Out=>IMem.Addr                                   Premise(F3931)
	S11= PIDReg.Out=>Mux41.1                                    Premise(F4214)
	S12= Mux41.1=pid                                            Path(S6,S11)
	S13= Mux41.Out=>IMem.PID                                    Premise(F4215)
	S14= IMem.RData=>Mux44.1                                    Premise(F4546)
	S15= Mux44.Out=>IR.In                                       Premise(F4547)
	S16= CtrlPIDReg=0                                           Premise(F5510)
	S17= [PIDReg]=pid                                           PIDReg-Hold(S0,S16)
	S18= CtrlPC=0                                               Premise(F5511)
	S19= CtrlPCInc=1                                            Premise(F5512)
	S20= PC[NIA]=addr+4                                         PC-Write(S1,S18,S19)
	S21= CtrlGPRegs=0                                           Premise(F5514)
	S22= GPRegs[rA]=a                                           GPRegs-Hold(S3,S21)
	S23= GPRegs[rB]=b                                           GPRegs-Hold(S4,S21)
	S24= GPRegs[rS]={B1,B2,B3,B4}                               GPRegs-Hold(S5,S21)
	S25= CtrlIR=1                                               Premise(F5525)
	S26= CtrlMux40.1=1                                          Premise(F5595)
	S27= Mux40.Out=addr                                         Mux(S9,S26)
	S28= IMem.Addr=addr                                         Path(S27,S10)
	S29= CtrlMux41.1=1                                          Premise(F5596)
	S30= Mux41.Out=pid                                          Mux(S12,S29)
	S31= IMem.PID=pid                                           Path(S30,S13)
	S32= IMem.RData={31,rS,rA,rB,366}                           IMem-Read(S2,S31,S28)
	S33= Mux44.1={31,rS,rA,rB,366}                              Path(S32,S14)
	S34= CtrlMux44.1=1                                          Premise(F5599)
	S35= Mux44.Out={31,rS,rA,rB,366}                            Mux(S33,S34)
	S36= IR.In={31,rS,rA,rB,366}                                Path(S35,S15)
	S37= [IR]={31,rS,rA,rB,366}                                 IR-Write(S36,S25)

ID	S38= IR.Out11_15=rA                                         IR-Out(S37)
	S39= IR.Out16_20=rB                                         IR-Out(S37)
	S40= Mux1.Out=>A.In                                         Premise(F5627)
	S41= GPRegs.RData1=>Mux1.3                                  Premise(F5680)
	S42= Mux10.Out=>B.In                                        Premise(F6937)
	S43= GPRegs.RData2=>Mux10.5                                 Premise(F6984)
	S44= IR.Out11_15=>Mux33.1                                   Premise(F8576)
	S45= Mux33.1=rA                                             Path(S38,S44)
	S46= Mux33.Out=>GPRegs.RReg1                                Premise(F8577)
	S47= IR.Out16_20=>Mux34.1                                   Premise(F8838)
	S48= Mux34.1=rB                                             Path(S39,S47)
	S49= Mux34.Out=>GPRegs.RReg2                                Premise(F8839)
	S50= CtrlPIDReg=0                                           Premise(F11130)
	S51= [PIDReg]=pid                                           PIDReg-Hold(S17,S50)
	S52= CtrlPC=0                                               Premise(F11131)
	S53= CtrlPCInc=0                                            Premise(F11132)
	S54= PC[NIA]=addr+4                                         PC-Hold(S20,S52,S53)
	S55= CtrlGPRegs=0                                           Premise(F11134)
	S56= GPRegs[rS]={B1,B2,B3,B4}                               GPRegs-Hold(S24,S55)
	S57= CtrlA=1                                                Premise(F11136)
	S58= CtrlB=1                                                Premise(F11138)
	S59= CtrlIR=0                                               Premise(F11145)
	S60= [IR]={31,rS,rA,rB,366}                                 IR-Hold(S37,S59)
	S61= CtrlMux1.1=0                                           Premise(F11150)
	S62= CtrlMux1.2=0                                           Premise(F11151)
	S63= CtrlMux1.3=1                                           Premise(F11152)
	S64= CtrlMux1.4=0                                           Premise(F11153)
	S65= CtrlMux10.1=0                                          Premise(F11166)
	S66= CtrlMux10.2=0                                          Premise(F11167)
	S67= CtrlMux10.3=0                                          Premise(F11168)
	S68= CtrlMux10.4=0                                          Premise(F11169)
	S69= CtrlMux10.5=1                                          Premise(F11170)
	S70= CtrlMux10.6=0                                          Premise(F11171)
	S71= CtrlMux10.7=0                                          Premise(F11172)
	S72= CtrlMux10.8=0                                          Premise(F11173)
	S73= CtrlMux33.1=1                                          Premise(F11204)
	S74= Mux33.Out=rA                                           Mux(S45,S73)
	S75= GPRegs.RReg1=rA                                        Path(S74,S46)
	S76= GPRegs.RData1=a                                        GPRegs-Read(S22,S75)
	S77= Mux1.3=a                                               Path(S76,S41)
	S78= Mux1.Out=a                                             Mux(S77,S61,S62,S63,S64)
	S79= A.In=a                                                 Path(S78,S40)
	S80= [A]=a                                                  A-Write(S79,S57)
	S81= CtrlMux34.1=1                                          Premise(F11205)
	S82= CtrlMux34.2=0                                          Premise(F11206)
	S83= Mux34.Out=rB                                           Mux(S48,S81,S82)
	S84= GPRegs.RReg2=rB                                        Path(S83,S49)
	S85= GPRegs.RData2=b                                        GPRegs-Read(S23,S84)
	S86= Mux10.5=b                                              Path(S85,S43)
	S87= Mux10.Out=b                                            Mux(S86,S65,S66,S67,S68,S69,S70,S71,S72)
	S88= B.In=b                                                 Path(S87,S42)
	S89= [B]=b                                                  B-Write(S88,S58)

EX	S90= IR.Out0_5=31                                           IR-Out(S60)
	S91= IR.Out6_10=rS                                          IR-Out(S60)
	S92= IR.Out21_31=366                                        IR-Out(S60)
	S93= A.Out=a                                                A-Out(S80)
	S94= B.Out=b                                                B-Out(S89)
	S95= A.Out=>Mux5.1                                          Premise(F11614)
	S96= Mux5.1=a                                               Path(S93,S95)
	S97= Mux5.Out=>ALU.A                                        Premise(F11615)
	S98= B.Out=>Mux6.1                                          Premise(F11836)
	S99= Mux6.1=b                                               Path(S94,S98)
	S100= Mux6.Out=>ALU.B                                       Premise(F11837)
	S101= CU.Func=>Mux8.1                                       Premise(F12096)
	S102= Mux8.Out=>ALU.Func                                    Premise(F12097)
	S103= ALU.Out=>Mux9.1                                       Premise(F12318)
	S104= Mux9.Out=>ALUOut.In                                   Premise(F12319)
	S105= IR.Out21_31=>Mux21.1                                  Premise(F13090)
	S106= Mux21.1=366                                           Path(S92,S105)
	S107= Mux21.Out=>CU.IRFunc                                  Premise(F13091)
	S108= IR.Out0_5=>Mux23.1                                    Premise(F13318)
	S109= Mux23.1=31                                            Path(S90,S108)
	S110= Mux23.Out=>CU.Op                                      Premise(F13319)
	S111= Mux30.Out=>DR.In                                      Premise(F13971)
	S112= MemDataSel.Out=>Mux30.2                               Premise(F14006)
	S113= IR.Out6_10=>Mux35.1                                   Premise(F14634)
	S114= Mux35.1=rS                                            Path(S91,S113)
	S115= Mux35.Out=>GPRegs.RReg3                               Premise(F14635)
	S116= Mux51.Out=>MemDataSel.Data                            Premise(F16219)
	S117= GPRegs.RData3=>Mux51.3                                Premise(F16266)
	S118= CU.MemDataSelFunc=>Mux52.1                            Premise(F16282)
	S119= Mux52.Out=>MemDataSel.Func                            Premise(F16283)
	S120= CtrlPIDReg=0                                          Premise(F16750)
	S121= [PIDReg]=pid                                          PIDReg-Hold(S51,S120)
	S122= CtrlPC=0                                              Premise(F16751)
	S123= CtrlPCInc=0                                           Premise(F16752)
	S124= PC[NIA]=addr+4                                        PC-Hold(S54,S122,S123)
	S125= CtrlALUOut=1                                          Premise(F16757)
	S126= CtrlDR=1                                              Premise(F16762)
	S127= CtrlIR=0                                              Premise(F16765)
	S128= [IR]={31,rS,rA,rB,366}                                IR-Hold(S60,S127)
	S129= CtrlMux5.1=1                                          Premise(F16777)
	S130= Mux5.Out=a                                            Mux(S96,S129)
	S131= ALU.A=a                                               Path(S130,S97)
	S132= CtrlMux6.1=1                                          Premise(F16778)
	S133= Mux6.Out=b                                            Mux(S99,S132)
	S134= ALU.B=b                                               Path(S133,S100)
	S135= CtrlMux8.1=1                                          Premise(F16783)
	S136= CtrlMux9.1=1                                          Premise(F16784)
	S137= CtrlMux9.2=0                                          Premise(F16785)
	S138= CtrlMux21.1=1                                         Premise(F16807)
	S139= Mux21.Out=366                                         Mux(S106,S138)
	S140= CU.IRFunc=366                                         Path(S139,S107)
	S141= CtrlMux23.1=1                                         Premise(F16809)
	S142= Mux23.Out=31                                          Mux(S109,S141)
	S143= CU.Op=31                                              Path(S142,S110)
	S144= CU.Func=alu_add                                       CU(S143,S140)
	S145= Mux8.1=alu_add                                        Path(S144,S101)
	S146= Mux8.Out=alu_add                                      Mux(S145,S135)
	S147= ALU.Func=alu_add                                      Path(S146,S102)
	S148= ALU.Out=a+b                                           ALU(S131,S134,S147)
	S149= Mux9.1=a+b                                            Path(S148,S103)
	S150= Mux9.Out=a+b                                          Mux(S149,S136,S137)
	S151= ALUOut.In=a+b                                         Path(S150,S104)
	S152= [ALUOut]=a+b                                          ALUOut-Write(S151,S125)
	S153= CU.MemDataSelFunc=mds_stw                             CU(S143,S140)
	S154= Mux52.1=mds_stw                                       Path(S153,S118)
	S155= CtrlMux30.1=0                                         Premise(F16820)
	S156= CtrlMux30.2=1                                         Premise(F16821)
	S157= CtrlMux35.1=1                                         Premise(F16827)
	S158= Mux35.Out=rS                                          Mux(S114,S157)
	S159= GPRegs.RReg3=rS                                       Path(S158,S115)
	S160= GPRegs.RData3={B1,B2,B3,B4}                           GPRegs-Read(S56,S159)
	S161= Mux51.3={B1,B2,B3,B4}                                 Path(S160,S117)
	S162= CtrlMux51.1=0                                         Premise(F16848)
	S163= CtrlMux51.2=0                                         Premise(F16849)
	S164= CtrlMux51.3=1                                         Premise(F16850)
	S165= Mux51.Out={B1,B2,B3,B4}                               Mux(S161,S162,S163,S164)
	S166= MemDataSel.Data={B1,B2,B3,B4}                         Path(S165,S116)
	S167= CtrlMux52.1=1                                         Premise(F16851)
	S168= Mux52.Out=mds_stw                                     Mux(S154,S167)
	S169= MemDataSel.Func=mds_stw                               Path(S168,S119)
	S170= MemDataSel.Out={B1,B2,B3,B4}                          MemDataSel(S166,S169)
	S171= Mux30.2={B1,B2,B3,B4}                                 Path(S170,S112)
	S172= Mux30.Out={B1,B2,B3,B4}                               Mux(S171,S155,S156)
	S173= DR.In={B1,B2,B3,B4}                                   Path(S172,S111)
	S174= [DR]={B1,B2,B3,B4}                                    DR-Write(S173,S126)

MEM	S175= PIDReg.Out=pid                                        PIDReg-Out(S121)
	S176= ALUOut.Out=a+b                                        ALUOut-Out(S152)
	S177= DR.Out={B1,B2,B3,B4}                                  DR-Out(S174)
	S178= PIDReg.Out=>Mux27.1                                   Premise(F19470)
	S179= Mux27.1=pid                                           Path(S175,S178)
	S180= Mux27.Out=>DMem.PID                                   Premise(F19471)
	S181= ALUOut.Out=>Mux28.1                                   Premise(F19534)
	S182= Mux28.1=a+b                                           Path(S176,S181)
	S183= Mux28.Out=>DMem.WAddr                                 Premise(F19535)
	S184= DR.Out=>Mux29.1                                       Premise(F19562)
	S185= Mux29.1={B1,B2,B3,B4}                                 Path(S177,S184)
	S186= Mux29.Out=>DMem.WData                                 Premise(F19563)
	S187= CtrlPC=0                                              Premise(F22371)
	S188= CtrlPCInc=0                                           Premise(F22372)
	S189= PC[NIA]=addr+4                                        PC-Hold(S124,S187,S188)
	S190= CtrlDMem=1                                            Premise(F22375)
	S191= CtrlALUOut=0                                          Premise(F22377)
	S192= [ALUOut]=a+b                                          ALUOut-Hold(S152,S191)
	S193= CtrlIR=0                                              Premise(F22385)
	S194= [IR]={31,rS,rA,rB,366}                                IR-Hold(S128,S193)
	S195= CtrlMux27.1=1                                         Premise(F22437)
	S196= Mux27.Out=pid                                         Mux(S179,S195)
	S197= DMem.PID=pid                                          Path(S196,S180)
	S198= CtrlMux28.1=1                                         Premise(F22438)
	S199= Mux28.Out=a+b                                         Mux(S182,S198)
	S200= DMem.WAddr=a+b                                        Path(S199,S183)
	S201= CtrlMux29.1=1                                         Premise(F22439)
	S202= Mux29.Out={B1,B2,B3,B4}                               Mux(S185,S201)
	S203= DMem.WData={B1,B2,B3,B4}                              Path(S202,S186)
	S204= DMem[{pid,a+b}]={B1,B2,B3,B4}                         DMem-Write(S197,S200,S203,S190)

WB	S205= ALUOut.Out=a+b                                        ALUOut-Out(S192)
	S206= IR.Out11_15=rA                                        IR-Out(S194)
	S207= ALUOut.Out=>Mux38.1                                   Premise(F25922)
	S208= Mux38.1=a+b                                           Path(S205,S207)
	S209= Mux38.Out=>GPRegs.WData                               Premise(F25923)
	S210= IR.Out11_15=>Mux39.1                                  Premise(F26166)
	S211= Mux39.1=rA                                            Path(S206,S210)
	S212= Mux39.Out=>GPRegs.WReg                                Premise(F26167)
	S213= CtrlPC=0                                              Premise(F27991)
	S214= CtrlPCInc=0                                           Premise(F27992)
	S215= PC[NIA]=addr+4                                        PC-Hold(S189,S213,S214)
	S216= CtrlGPRegs=1                                          Premise(F27994)
	S217= CtrlDMem=0                                            Premise(F27995)
	S218= DMem[{pid,a+b}]={B1,B2,B3,B4}                         DMem-Hold(S204,S217)
	S219= CtrlMux38.1=1                                         Premise(F28070)
	S220= CtrlMux38.2=0                                         Premise(F28071)
	S221= CtrlMux38.3=0                                         Premise(F28072)
	S222= Mux38.Out=a+b                                         Mux(S208,S219,S220,S221)
	S223= GPRegs.WData=a+b                                      Path(S222,S209)
	S224= CtrlMux39.1=1                                         Premise(F28073)
	S225= CtrlMux39.2=0                                         Premise(F28074)
	S226= Mux39.Out=rA                                          Mux(S211,S224,S225)
	S227= GPRegs.WReg=rA                                        Path(S226,S212)
	S228= GPRegs[rA]=a+b                                        GPRegs-Write(S227,S223,S216)

WB/	S215= PC[NIA]=addr+4                                        PC-Hold(S189,S213,S214)
	S218= DMem[{pid,a+b}]={B1,B2,B3,B4}                         DMem-Hold(S204,S217)
	S228= GPRegs[rA]=a+b                                        GPRegs-Write(S227,S223,S216)

