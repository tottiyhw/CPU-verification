
------------------------------------- Proof -------------------------------------

/IF	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[NIA]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={19,crbD,crbA,crbB,578}                Premise(F2)
	S3= CRRegs[crbA]=a                                          Premise(F3)
	S4= CRRegs[crbB]=b                                          Premise(F4)

IF	S5= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S6= PC.NIA=addr                                             PC-Out(S1)
	S7= PC.NIA=>Mux40.1                                         Premise(F3929)
	S8= Mux40.1=addr                                            Path(S6,S7)
	S9= Mux40.Out=>IMem.Addr                                    Premise(F3930)
	S10= PIDReg.Out=>Mux41.1                                    Premise(F4213)
	S11= Mux41.1=pid                                            Path(S5,S10)
	S12= Mux41.Out=>IMem.PID                                    Premise(F4214)
	S13= IMem.RData=>Mux44.1                                    Premise(F4545)
	S14= Mux44.Out=>IR.In                                       Premise(F4546)
	S15= CtrlPC=0                                               Premise(F5510)
	S16= CtrlPCInc=1                                            Premise(F5511)
	S17= PC[NIA]=addr+4                                         PC-Write(S1,S15,S16)
	S18= CtrlCRRegs=0                                           Premise(F5513)
	S19= CRRegs[crbA]=a                                         CRRegs-Hold(S3,S18)
	S20= CRRegs[crbB]=b                                         CRRegs-Hold(S4,S18)
	S21= CtrlIR=1                                               Premise(F5524)
	S22= CtrlMux40.1=1                                          Premise(F5594)
	S23= Mux40.Out=addr                                         Mux(S8,S22)
	S24= IMem.Addr=addr                                         Path(S23,S9)
	S25= CtrlMux41.1=1                                          Premise(F5595)
	S26= Mux41.Out=pid                                          Mux(S11,S25)
	S27= IMem.PID=pid                                           Path(S26,S12)
	S28= IMem.RData={19,crbD,crbA,crbB,578}                     IMem-Read(S2,S27,S24)
	S29= Mux44.1={19,crbD,crbA,crbB,578}                        Path(S28,S13)
	S30= CtrlMux44.1=1                                          Premise(F5598)
	S31= Mux44.Out={19,crbD,crbA,crbB,578}                      Mux(S29,S30)
	S32= IR.In={19,crbD,crbA,crbB,578}                          Path(S31,S14)
	S33= [IR]={19,crbD,crbA,crbB,578}                           IR-Write(S32,S21)

ID	S34= IR.Out11_15=crbA                                       IR-Out(S33)
	S35= IR.Out16_20=crbB                                       IR-Out(S33)
	S36= Mux1.Out=>A.In                                         Premise(F5626)
	S37= CRRegs.RData1=>Mux1.2                                  Premise(F5665)
	S38= Mux10.Out=>B.In                                        Premise(F6936)
	S39= CRRegs.RData2=>Mux10.4                                 Premise(F6969)
	S40= IR.Out11_15=>Mux16.1                                   Premise(F7389)
	S41= Mux16.1=crbA                                           Path(S34,S40)
	S42= Mux16.Out=>CRRegs.RReg1                                Premise(F7390)
	S43= IR.Out16_20=>Mux17.1                                   Premise(F7403)
	S44= Mux17.1=crbB                                           Path(S35,S43)
	S45= Mux17.Out=>CRRegs.RReg2                                Premise(F7404)
	S46= CtrlPC=0                                               Premise(F11130)
	S47= CtrlPCInc=0                                            Premise(F11131)
	S48= PC[NIA]=addr+4                                         PC-Hold(S17,S46,S47)
	S49= CtrlA=1                                                Premise(F11135)
	S50= CtrlB=1                                                Premise(F11137)
	S51= CtrlIR=0                                               Premise(F11144)
	S52= [IR]={19,crbD,crbA,crbB,578}                           IR-Hold(S33,S51)
	S53= CtrlMux1.1=0                                           Premise(F11149)
	S54= CtrlMux1.2=1                                           Premise(F11150)
	S55= CtrlMux1.3=0                                           Premise(F11151)
	S56= CtrlMux1.4=0                                           Premise(F11152)
	S57= CtrlMux10.1=0                                          Premise(F11165)
	S58= CtrlMux10.2=0                                          Premise(F11166)
	S59= CtrlMux10.3=0                                          Premise(F11167)
	S60= CtrlMux10.4=1                                          Premise(F11168)
	S61= CtrlMux10.5=0                                          Premise(F11169)
	S62= CtrlMux10.6=0                                          Premise(F11170)
	S63= CtrlMux10.7=0                                          Premise(F11171)
	S64= CtrlMux10.8=0                                          Premise(F11172)
	S65= CtrlMux16.1=1                                          Premise(F11179)
	S66= Mux16.Out=crbA                                         Mux(S41,S65)
	S67= CRRegs.RReg1=crbA                                      Path(S66,S42)
	S68= CRRegs.RData1=a                                        CRRegs-Read(S19,S67)
	S69= Mux1.2=a                                               Path(S68,S37)
	S70= Mux1.Out=a                                             Mux(S69,S53,S54,S55,S56)
	S71= A.In=a                                                 Path(S70,S36)
	S72= [A]=a                                                  A-Write(S71,S49)
	S73= CtrlMux17.1=1                                          Premise(F11180)
	S74= Mux17.Out=crbB                                         Mux(S44,S73)
	S75= CRRegs.RReg2=crbB                                      Path(S74,S45)
	S76= CRRegs.RData2=b                                        CRRegs-Read(S20,S75)
	S77= Mux10.4=b                                              Path(S76,S39)
	S78= Mux10.Out=b                                            Mux(S77,S57,S58,S59,S60,S61,S62,S63,S64)
	S79= B.In=b                                                 Path(S78,S38)
	S80= [B]=b                                                  B-Write(S79,S50)

EX	S81= IR.Out0_5=19                                           IR-Out(S52)
	S82= IR.Out21_31=578                                        IR-Out(S52)
	S83= A.Out=a                                                A-Out(S72)
	S84= B.Out=b                                                B-Out(S80)
	S85= A.Out=>Mux5.1                                          Premise(F11613)
	S86= Mux5.1=a                                               Path(S83,S85)
	S87= Mux5.Out=>ALU.A                                        Premise(F11614)
	S88= B.Out=>Mux6.1                                          Premise(F11835)
	S89= Mux6.1=b                                               Path(S84,S88)
	S90= Mux6.Out=>ALU.B                                        Premise(F11836)
	S91= CU.Func=>Mux8.1                                        Premise(F12095)
	S92= Mux8.Out=>ALU.Func                                     Premise(F12096)
	S93= ALU.Out=>Mux9.1                                        Premise(F12317)
	S94= Mux9.Out=>ALUOut.In                                    Premise(F12318)
	S95= IR.Out21_31=>Mux21.1                                   Premise(F13089)
	S96= Mux21.1=578                                            Path(S82,S95)
	S97= Mux21.Out=>CU.IRFunc                                   Premise(F13090)
	S98= IR.Out0_5=>Mux23.1                                     Premise(F13317)
	S99= Mux23.1=19                                             Path(S81,S98)
	S100= Mux23.Out=>CU.Op                                      Premise(F13318)
	S101= CtrlPC=0                                              Premise(F16750)
	S102= CtrlPCInc=0                                           Premise(F16751)
	S103= PC[NIA]=addr+4                                        PC-Hold(S48,S101,S102)
	S104= CtrlALUOut=1                                          Premise(F16756)
	S105= CtrlIR=0                                              Premise(F16764)
	S106= [IR]={19,crbD,crbA,crbB,578}                          IR-Hold(S52,S105)
	S107= CtrlMux5.1=1                                          Premise(F16776)
	S108= Mux5.Out=a                                            Mux(S86,S107)
	S109= ALU.A=a                                               Path(S108,S87)
	S110= CtrlMux6.1=1                                          Premise(F16777)
	S111= Mux6.Out=b                                            Mux(S89,S110)
	S112= ALU.B=b                                               Path(S111,S90)
	S113= CtrlMux8.1=1                                          Premise(F16782)
	S114= CtrlMux9.1=1                                          Premise(F16783)
	S115= CtrlMux9.2=0                                          Premise(F16784)
	S116= CtrlMux21.1=1                                         Premise(F16806)
	S117= Mux21.Out=578                                         Mux(S96,S116)
	S118= CU.IRFunc=578                                         Path(S117,S97)
	S119= CtrlMux23.1=1                                         Premise(F16808)
	S120= Mux23.Out=19                                          Mux(S99,S119)
	S121= CU.Op=19                                              Path(S120,S100)
	S122= CU.Func=alu_eqv                                       CU(S121,S118)
	S123= Mux8.1=alu_eqv                                        Path(S122,S91)
	S124= Mux8.Out=alu_eqv                                      Mux(S123,S113)
	S125= ALU.Func=alu_eqv                                      Path(S124,S92)
	S126= ALU.Out=a《b                                           ALU(S109,S112,S125)
	S127= Mux9.1=a《b                                            Path(S126,S93)
	S128= Mux9.Out=a《b                                          Mux(S127,S114,S115)
	S129= ALUOut.In=a《b                                         Path(S128,S94)
	S130= [ALUOut]=a《b                                          ALUOut-Write(S129,S104)

MEM	S131= CtrlPC=0                                              Premise(F22370)
	S132= CtrlPCInc=0                                           Premise(F22371)
	S133= PC[NIA]=addr+4                                        PC-Hold(S103,S131,S132)
	S134= CtrlALUOut=0                                          Premise(F22376)
	S135= [ALUOut]=a《b                                          ALUOut-Hold(S130,S134)
	S136= CtrlIR=0                                              Premise(F22384)
	S137= [IR]={19,crbD,crbA,crbB,578}                          IR-Hold(S106,S136)

WB	S138= ALUOut.Out=a《b                                        ALUOut-Out(S135)
	S139= IR.Out6_10=crbD                                       IR-Out(S137)
	S140= ALUOut.Out=>Mux18.1                                   Premise(F24277)
	S141= Mux18.1=a《b                                           Path(S138,S140)
	S142= Mux18.Out=>CRRegs.WData                               Premise(F24278)
	S143= IR.Out6_10=>Mux19.1                                   Premise(F24299)
	S144= Mux19.1=crbD                                          Path(S139,S143)
	S145= Mux19.Out=>CRRegs.WReg                                Premise(F24300)
	S146= CtrlPC=0                                              Premise(F27990)
	S147= CtrlPCInc=0                                           Premise(F27991)
	S148= PC[NIA]=addr+4                                        PC-Hold(S133,S146,S147)
	S149= CtrlCRRegs=1                                          Premise(F27993)
	S150= CtrlMux18.1=1                                         Premise(F28041)
	S151= CtrlMux18.2=0                                         Premise(F28042)
	S152= Mux18.Out=a《b                                         Mux(S141,S150,S151)
	S153= CRRegs.WData=a《b                                      Path(S152,S142)
	S154= CtrlMux19.1=1                                         Premise(F28043)
	S155= CtrlMux19.2=0                                         Premise(F28044)
	S156= Mux19.Out=crbD                                        Mux(S144,S154,S155)
	S157= CRRegs.WReg=crbD                                      Path(S156,S145)
	S158= CRRegs[crbD]=a《b                                      CRRegs-Write(S157,S153,S149)

WB/	S148= PC[NIA]=addr+4                                        PC-Hold(S133,S146,S147)
	S158= CRRegs[crbD]=a《b                                      CRRegs-Write(S157,S153,S149)

