
------------------------------------- Proof -------------------------------------

/IF	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[NIA]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rS,rA,rB,824}                      Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= GPRegs[rB]=b                                            Premise(F4)

IF	S5= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S6= PC.NIA=addr                                             PC-Out(S1)
	S7= PC.NIA=>Mux40.1                                         Premise(F3929)
	S8= Mux40.1=addr                                            Path(S6,S7)
	S9= Mux40.Out=>IMem.Addr                                    Premise(F3930)
	S10= PIDReg.Out=>Mux41.1                                    Premise(F4213)
	S11= Mux41.1=pid                                            Path(S5,S10)
	S12= Mux41.Out=>IMem.PID                                    Premise(F4214)
	S13= IMem.RData=>Mux44.1                                    Premise(F4545)
	S14= Mux44.Out=>IR.In                                       Premise(F4546)
	S15= CtrlPC=0                                               Premise(F5510)
	S16= CtrlPCInc=1                                            Premise(F5511)
	S17= PC[NIA]=addr+4                                         PC-Write(S1,S15,S16)
	S18= CtrlGPRegs=0                                           Premise(F5513)
	S19= GPRegs[rA]=a                                           GPRegs-Hold(S3,S18)
	S20= GPRegs[rB]=b                                           GPRegs-Hold(S4,S18)
	S21= CtrlIR=1                                               Premise(F5524)
	S22= CtrlMux40.1=1                                          Premise(F5594)
	S23= Mux40.Out=addr                                         Mux(S8,S22)
	S24= IMem.Addr=addr                                         Path(S23,S9)
	S25= CtrlMux41.1=1                                          Premise(F5595)
	S26= Mux41.Out=pid                                          Mux(S11,S25)
	S27= IMem.PID=pid                                           Path(S26,S12)
	S28= IMem.RData={31,rS,rA,rB,824}                           IMem-Read(S2,S27,S24)
	S29= Mux44.1={31,rS,rA,rB,824}                              Path(S28,S13)
	S30= CtrlMux44.1=1                                          Premise(F5598)
	S31= Mux44.Out={31,rS,rA,rB,824}                            Mux(S29,S30)
	S32= IR.In={31,rS,rA,rB,824}                                Path(S31,S14)
	S33= [IR]={31,rS,rA,rB,824}                                 IR-Write(S32,S21)

ID	S34= IR.Out11_15=rA                                         IR-Out(S33)
	S35= IR.Out16_20=rB                                         IR-Out(S33)
	S36= Mux1.Out=>A.In                                         Premise(F5626)
	S37= GPRegs.RData1=>Mux1.3                                  Premise(F5679)
	S38= Mux10.Out=>B.In                                        Premise(F6936)
	S39= GPRegs.RData2=>Mux10.5                                 Premise(F6983)
	S40= IR.Out11_15=>Mux33.1                                   Premise(F8575)
	S41= Mux33.1=rA                                             Path(S34,S40)
	S42= Mux33.Out=>GPRegs.RReg1                                Premise(F8576)
	S43= IR.Out16_20=>Mux34.1                                   Premise(F8837)
	S44= Mux34.1=rB                                             Path(S35,S43)
	S45= Mux34.Out=>GPRegs.RReg2                                Premise(F8838)
	S46= CtrlPC=0                                               Premise(F11130)
	S47= CtrlPCInc=0                                            Premise(F11131)
	S48= PC[NIA]=addr+4                                         PC-Hold(S17,S46,S47)
	S49= CtrlA=1                                                Premise(F11134)
	S50= CtrlB=1                                                Premise(F11136)
	S51= CtrlIR=0                                               Premise(F11144)
	S52= [IR]={31,rS,rA,rB,824}                                 IR-Hold(S33,S51)
	S53= CtrlMux1.1=0                                           Premise(F11149)
	S54= CtrlMux1.2=0                                           Premise(F11150)
	S55= CtrlMux1.3=1                                           Premise(F11151)
	S56= CtrlMux1.4=0                                           Premise(F11152)
	S57= CtrlMux10.1=0                                          Premise(F11165)
	S58= CtrlMux10.2=0                                          Premise(F11166)
	S59= CtrlMux10.3=0                                          Premise(F11167)
	S60= CtrlMux10.4=0                                          Premise(F11168)
	S61= CtrlMux10.5=1                                          Premise(F11169)
	S62= CtrlMux10.6=0                                          Premise(F11170)
	S63= CtrlMux10.7=0                                          Premise(F11171)
	S64= CtrlMux10.8=0                                          Premise(F11172)
	S65= CtrlMux33.1=1                                          Premise(F11203)
	S66= Mux33.Out=rA                                           Mux(S41,S65)
	S67= GPRegs.RReg1=rA                                        Path(S66,S42)
	S68= GPRegs.RData1=a                                        GPRegs-Read(S19,S67)
	S69= Mux1.3=a                                               Path(S68,S37)
	S70= Mux1.Out=a                                             Mux(S69,S53,S54,S55,S56)
	S71= A.In=a                                                 Path(S70,S36)
	S72= [A]=a                                                  A-Write(S71,S49)
	S73= CtrlMux34.1=1                                          Premise(F11204)
	S74= CtrlMux34.2=0                                          Premise(F11205)
	S75= Mux34.Out=rB                                           Mux(S44,S73,S74)
	S76= GPRegs.RReg2=rB                                        Path(S75,S45)
	S77= GPRegs.RData2=b                                        GPRegs-Read(S20,S76)
	S78= Mux10.5=b                                              Path(S77,S39)
	S79= Mux10.Out=b                                            Mux(S78,S57,S58,S59,S60,S61,S62,S63,S64)
	S80= B.In=b                                                 Path(S79,S38)
	S81= [B]=b                                                  B-Write(S80,S50)

EX	S82= IR.Out0_5=31                                           IR-Out(S52)
	S83= IR.Out21_31=824                                        IR-Out(S52)
	S84= A.Out=a                                                A-Out(S72)
	S85= B.Out=b                                                B-Out(S81)
	S86= A.Out=>Mux5.1                                          Premise(F11613)
	S87= Mux5.1=a                                               Path(S84,S86)
	S88= Mux5.Out=>ALU.A                                        Premise(F11614)
	S89= B.Out=>Mux6.1                                          Premise(F11835)
	S90= Mux6.1=b                                               Path(S85,S89)
	S91= Mux6.Out=>ALU.B                                        Premise(F11836)
	S92= CU.Func=>Mux8.1                                        Premise(F12095)
	S93= Mux8.Out=>ALU.Func                                     Premise(F12096)
	S94= ALU.Out=>Mux9.1                                        Premise(F12317)
	S95= Mux9.Out=>ALUOut.In                                    Premise(F12318)
	S96= IR.Out21_31=>Mux21.1                                   Premise(F13089)
	S97= Mux21.1=824                                            Path(S83,S96)
	S98= Mux21.Out=>CU.IRFunc                                   Premise(F13090)
	S99= IR.Out0_5=>Mux23.1                                     Premise(F13317)
	S100= Mux23.1=31                                            Path(S82,S99)
	S101= Mux23.Out=>CU.Op                                      Premise(F13318)
	S102= CtrlPC=0                                              Premise(F16750)
	S103= CtrlPCInc=0                                           Premise(F16751)
	S104= PC[NIA]=addr+4                                        PC-Hold(S48,S102,S103)
	S105= CtrlALUOut=1                                          Premise(F16755)
	S106= CtrlIR=0                                              Premise(F16764)
	S107= [IR]={31,rS,rA,rB,824}                                IR-Hold(S52,S106)
	S108= CtrlMux5.1=1                                          Premise(F16776)
	S109= Mux5.Out=a                                            Mux(S87,S108)
	S110= ALU.A=a                                               Path(S109,S88)
	S111= CtrlMux6.1=1                                          Premise(F16777)
	S112= Mux6.Out=b                                            Mux(S90,S111)
	S113= ALU.B=b                                               Path(S112,S91)
	S114= CtrlMux8.1=1                                          Premise(F16782)
	S115= CtrlMux9.1=1                                          Premise(F16783)
	S116= CtrlMux9.2=0                                          Premise(F16784)
	S117= CtrlMux21.1=1                                         Premise(F16806)
	S118= Mux21.Out=824                                         Mux(S97,S117)
	S119= CU.IRFunc=824                                         Path(S118,S98)
	S120= CtrlMux23.1=1                                         Premise(F16808)
	S121= Mux23.Out=31                                          Mux(S100,S120)
	S122= CU.Op=31                                              Path(S121,S101)
	S123= CU.Func=alu_orc                                       CU(S122,S119)
	S124= Mux8.1=alu_orc                                        Path(S123,S92)
	S125= Mux8.Out=alu_orc                                      Mux(S124,S114)
	S126= ALU.Func=alu_orc                                      Path(S125,S93)
	S127= ALU.Out=a|~b                                          ALU(S110,S113,S126)
	S128= Mux9.1=a|~b                                           Path(S127,S94)
	S129= Mux9.Out=a|~b                                         Mux(S128,S115,S116)
	S130= ALUOut.In=a|~b                                        Path(S129,S95)
	S131= [ALUOut]=a|~b                                         ALUOut-Write(S130,S105)

MEM	S132= CtrlPC=0                                              Premise(F22370)
	S133= CtrlPCInc=0                                           Premise(F22371)
	S134= PC[NIA]=addr+4                                        PC-Hold(S104,S132,S133)
	S135= CtrlALUOut=0                                          Premise(F22375)
	S136= [ALUOut]=a|~b                                         ALUOut-Hold(S131,S135)
	S137= CtrlIR=0                                              Premise(F22384)
	S138= [IR]={31,rS,rA,rB,824}                                IR-Hold(S107,S137)

WB	S139= ALUOut.Out=a|~b                                       ALUOut-Out(S136)
	S140= IR.Out6_10=rS                                         IR-Out(S138)
	S141= ALUOut.Out=>Mux38.1                                   Premise(F25921)
	S142= Mux38.1=a|~b                                          Path(S139,S141)
	S143= Mux38.Out=>GPRegs.WData                               Premise(F25922)
	S144= Mux39.Out=>GPRegs.WReg                                Premise(F26166)
	S145= IR.Out6_10=>Mux39.2                                   Premise(F26183)
	S146= Mux39.2=rS                                            Path(S140,S145)
	S147= CtrlPC=0                                              Premise(F27990)
	S148= CtrlPCInc=0                                           Premise(F27991)
	S149= PC[NIA]=addr+4                                        PC-Hold(S134,S147,S148)
	S150= CtrlGPRegs=1                                          Premise(F27993)
	S151= CtrlMux38.1=1                                         Premise(F28069)
	S152= CtrlMux38.2=0                                         Premise(F28070)
	S153= CtrlMux38.3=0                                         Premise(F28071)
	S154= Mux38.Out=a|~b                                        Mux(S142,S151,S152,S153)
	S155= GPRegs.WData=a|~b                                     Path(S154,S143)
	S156= CtrlMux39.1=0                                         Premise(F28072)
	S157= CtrlMux39.2=1                                         Premise(F28073)
	S158= Mux39.Out=rS                                          Mux(S146,S156,S157)
	S159= GPRegs.WReg=rS                                        Path(S158,S144)
	S160= GPRegs[rS]=a|~b                                       GPRegs-Write(S159,S155,S150)

WB/	S149= PC[NIA]=addr+4                                        PC-Hold(S134,S147,S148)
	S160= GPRegs[rS]=a|~b                                       GPRegs-Write(S159,S155,S150)

