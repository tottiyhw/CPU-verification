
------------------------------------- Proof -------------------------------------

/IF	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[NIA]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={29,rS,rA,UIMM}                        Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= XER[SO]=so                                              Premise(F4)

IF	S5= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S6= PC.NIA=addr                                             PC-Out(S1)
	S7= PC.NIA=>Mux40.1                                         Premise(F3929)
	S8= Mux40.1=addr                                            Path(S6,S7)
	S9= Mux40.Out=>IMem.Addr                                    Premise(F3930)
	S10= PIDReg.Out=>Mux41.1                                    Premise(F4213)
	S11= Mux41.1=pid                                            Path(S5,S10)
	S12= Mux41.Out=>IMem.PID                                    Premise(F4214)
	S13= IMem.RData=>Mux44.1                                    Premise(F4545)
	S14= Mux44.Out=>IR.In                                       Premise(F4546)
	S15= CtrlPC=0                                               Premise(F5510)
	S16= CtrlPCInc=1                                            Premise(F5511)
	S17= PC[NIA]=addr+4                                         PC-Write(S1,S15,S16)
	S18= CtrlGPRegs=0                                           Premise(F5513)
	S19= GPRegs[rA]=a                                           GPRegs-Hold(S3,S18)
	S20= CtrlXERSO=0                                            Premise(F5514)
	S21= XER[SO]=so                                             XER-SO-Hold(S4,S20)
	S22= CtrlIR=1                                               Premise(F5527)
	S23= CtrlMux40.1=1                                          Premise(F5594)
	S24= Mux40.Out=addr                                         Mux(S8,S23)
	S25= IMem.Addr=addr                                         Path(S24,S9)
	S26= CtrlMux41.1=1                                          Premise(F5595)
	S27= Mux41.Out=pid                                          Mux(S11,S26)
	S28= IMem.PID=pid                                           Path(S27,S12)
	S29= IMem.RData={29,rS,rA,UIMM}                             IMem-Read(S2,S28,S25)
	S30= Mux44.1={29,rS,rA,UIMM}                                Path(S29,S13)
	S31= CtrlMux44.1=1                                          Premise(F5598)
	S32= Mux44.Out={29,rS,rA,UIMM}                              Mux(S30,S31)
	S33= IR.In={29,rS,rA,UIMM}                                  Path(S32,S14)
	S34= [IR]={29,rS,rA,UIMM}                                   IR-Write(S33,S22)

ID	S35= IR.Out11_15=rA                                         IR-Out(S34)
	S36= IR.Out16_31=UIMM                                       IR-Out(S34)
	S37= Mux1.Out=>A.In                                         Premise(F5626)
	S38= GPRegs.RData1=>Mux1.3                                  Premise(F5679)
	S39= Mux10.Out=>B.In                                        Premise(F6936)
	S40= IMMSEXT.Out=>Mux10.7                                   Premise(F7175)
	S41= IR.Out11_15=>Mux33.1                                   Premise(F8575)
	S42= Mux33.1=rA                                             Path(S35,S41)
	S43= Mux33.Out=>GPRegs.RReg1                                Premise(F8576)
	S44= IR.Out16_31=>Mux43.1                                   Premise(F10157)
	S45= Mux43.1=UIMM                                           Path(S36,S44)
	S46= Mux43.Out=>IMMSEXT.In                                  Premise(F10158)
	S47= CtrlPC=0                                               Premise(F11130)
	S48= CtrlPCInc=0                                            Premise(F11131)
	S49= PC[NIA]=addr+4                                         PC-Hold(S17,S47,S48)
	S50= CtrlXERSO=0                                            Premise(F11134)
	S51= XER[SO]=so                                             XER-SO-Hold(S21,S50)
	S52= CtrlA=1                                                Premise(F11139)
	S53= CtrlB=1                                                Premise(F11141)
	S54= CtrlIR=0                                               Premise(F11147)
	S55= [IR]={29,rS,rA,UIMM}                                   IR-Hold(S34,S54)
	S56= CtrlMux1.1=0                                           Premise(F11152)
	S57= CtrlMux1.2=0                                           Premise(F11153)
	S58= CtrlMux1.3=1                                           Premise(F11154)
	S59= CtrlMux1.4=0                                           Premise(F11155)
	S60= CtrlMux10.1=0                                          Premise(F11165)
	S61= CtrlMux10.2=0                                          Premise(F11166)
	S62= CtrlMux10.3=0                                          Premise(F11167)
	S63= CtrlMux10.4=0                                          Premise(F11168)
	S64= CtrlMux10.5=0                                          Premise(F11169)
	S65= CtrlMux10.6=0                                          Premise(F11170)
	S66= CtrlMux10.7=1                                          Premise(F11171)
	S67= CtrlMux10.8=0                                          Premise(F11172)
	S68= CtrlMux33.1=1                                          Premise(F11203)
	S69= Mux33.Out=rA                                           Mux(S42,S68)
	S70= GPRegs.RReg1=rA                                        Path(S69,S43)
	S71= GPRegs.RData1=a                                        GPRegs-Read(S19,S70)
	S72= Mux1.3=a                                               Path(S71,S38)
	S73= Mux1.Out=a                                             Mux(S72,S56,S57,S58,S59)
	S74= A.In=a                                                 Path(S73,S37)
	S75= [A]=a                                                  A-Write(S74,S52)
	S76= CtrlMux43.1=1                                          Premise(F11217)
	S77= Mux43.Out=UIMM                                         Mux(S45,S76)
	S78= IMMSEXT.In=UIMM                                        Path(S77,S46)
	S79= IMMSEXT.Out={UIMM,0}                                   IMMSEXT(S78)
	S80= Mux10.7={UIMM,0}                                       Path(S79,S40)
	S81= Mux10.Out={UIMM,0}                                     Mux(S80,S60,S61,S62,S63,S64,S65,S66,S67)
	S82= B.In={UIMM,0}                                          Path(S81,S39)
	S83= [B]={UIMM,0}                                           B-Write(S82,S53)

EX	S84= XER.SOOut=so                                           XER-SO-Out(S51)
	S85= IR.Out0_5=29                                           IR-Out(S55)
	S86= A.Out=a                                                A-Out(S75)
	S87= B.Out={UIMM,0}                                         B-Out(S83)
	S88= A.Out=>Mux5.1                                          Premise(F11613)
	S89= Mux5.1=a                                               Path(S86,S88)
	S90= Mux5.Out=>ALU.A                                        Premise(F11614)
	S91= B.Out=>Mux6.1                                          Premise(F11835)
	S92= Mux6.1={UIMM,0}                                        Path(S87,S91)
	S93= Mux6.Out=>ALU.B                                        Premise(F11836)
	S94= CU.Func=>Mux8.1                                        Premise(F12095)
	S95= Mux8.Out=>ALU.Func                                     Premise(F12096)
	S96= ALU.Out=>Mux9.1                                        Premise(F12317)
	S97= Mux9.Out=>ALUOut.In                                    Premise(F12318)
	S98= IR.Out0_5=>Mux23.1                                     Premise(F13317)
	S99= Mux23.1=29                                             Path(S85,S98)
	S100= Mux23.Out=>CU.Op                                      Premise(F13318)
	S101= ALU.CMP=>Mux24.1                                      Premise(F13601)
	S102= Mux24.Out=>DataCmb.A                                  Premise(F13602)
	S103= Mux25.Out=>DataCmb.B                                  Premise(F13708)
	S104= XER.SOOut=>Mux25.2                                    Premise(F13735)
	S105= Mux25.2=so                                            Path(S84,S104)
	S106= DataCmb.Out=>Mux32.1                                  Premise(F14089)
	S107= Mux32.Out=>DR4bit.In                                  Premise(F14090)
	S108= CtrlPC=0                                              Premise(F16750)
	S109= CtrlPCInc=0                                           Premise(F16751)
	S110= PC[NIA]=addr+4                                        PC-Hold(S49,S108,S109)
	S111= CtrlALUOut=1                                          Premise(F16760)
	S112= CtrlDR4bit=1                                          Premise(F16766)
	S113= CtrlIR=0                                              Premise(F16767)
	S114= [IR]={29,rS,rA,UIMM}                                  IR-Hold(S55,S113)
	S115= CtrlMux5.1=1                                          Premise(F16779)
	S116= Mux5.Out=a                                            Mux(S89,S115)
	S117= ALU.A=a                                               Path(S116,S90)
	S118= CtrlMux6.1=1                                          Premise(F16780)
	S119= Mux6.Out={UIMM,0}                                     Mux(S92,S118)
	S120= ALU.B={UIMM,0}                                        Path(S119,S93)
	S121= CtrlMux8.1=1                                          Premise(F16782)
	S122= CtrlMux9.1=1                                          Premise(F16783)
	S123= CtrlMux9.2=0                                          Premise(F16784)
	S124= CtrlMux23.1=1                                         Premise(F16808)
	S125= Mux23.Out=29                                          Mux(S99,S124)
	S126= CU.Op=29                                              Path(S125,S100)
	S127= CU.Func=alu_and                                       CU(S126)
	S128= Mux8.1=alu_and                                        Path(S127,S94)
	S129= Mux8.Out=alu_and                                      Mux(S128,S121)
	S130= ALU.Func=alu_and                                      Path(S129,S95)
	S131= ALU.Out=a&{UIMM,0}                                    ALU(S117,S120,S130)
	S132= Mux9.1=a&{UIMM,0}                                     Path(S131,S96)
	S133= Mux9.Out=a&{UIMM,0}                                   Mux(S132,S122,S123)
	S134= ALUOut.In=a&{UIMM,0}                                  Path(S133,S97)
	S135= [ALUOut]=a&{UIMM,0}                                   ALUOut-Write(S134,S111)
	S136= ALU.CMP=Compare0(a&{UIMM,0})                          ALU(S117,S120,S130)
	S137= Mux24.1=Compare0(a&{UIMM,0})                          Path(S136,S101)
	S138= CtrlMux24.1=1                                         Premise(F16809)
	S139= CtrlMux24.2=0                                         Premise(F16810)
	S140= CtrlMux24.3=0                                         Premise(F16811)
	S141= CtrlMux24.4=0                                         Premise(F16812)
	S142= Mux24.Out=Compare0(a&{UIMM,0})                        Mux(S137,S138,S139,S140,S141)
	S143= DataCmb.A=Compare0(a&{UIMM,0})                        Path(S142,S102)
	S144= CtrlMux25.1=0                                         Premise(F16813)
	S145= CtrlMux25.2=1                                         Premise(F16814)
	S146= Mux25.Out=so                                          Mux(S105,S144,S145)
	S147= DataCmb.B=so                                          Path(S146,S103)
	S148= DataCmb.Out={Compare0(a&{UIMM,0}),so}                 DataCmb(S143,S147)
	S149= Mux32.1={Compare0(a&{UIMM,0}),so}                     Path(S148,S106)
	S150= CtrlMux32.1=1                                         Premise(F16822)
	S151= Mux32.Out={Compare0(a&{UIMM,0}),so}                   Mux(S149,S150)
	S152= DR4bit.In={Compare0(a&{UIMM,0}),so}                   Path(S151,S107)
	S153= [DR4bit]={Compare0(a&{UIMM,0}),so}                    DR4bit-Write(S152,S112)

MEM	S154= CtrlPC=0                                              Premise(F22370)
	S155= CtrlPCInc=0                                           Premise(F22371)
	S156= PC[NIA]=addr+4                                        PC-Hold(S110,S154,S155)
	S157= CtrlALUOut=0                                          Premise(F22380)
	S158= [ALUOut]=a&{UIMM,0}                                   ALUOut-Hold(S135,S157)
	S159= CtrlDR4bit=0                                          Premise(F22386)
	S160= [DR4bit]={Compare0(a&{UIMM,0}),so}                    DR4bit-Hold(S153,S159)
	S161= CtrlIR=0                                              Premise(F22387)
	S162= [IR]={29,rS,rA,UIMM}                                  IR-Hold(S114,S161)

WB	S163= ALUOut.Out=a&{UIMM,0}                                 ALUOut-Out(S158)
	S164= DR4bit.Out={Compare0(a&{UIMM,0}),so}                  DR4bit-Out(S160)
	S165= IR.Out6_10=rS                                         IR-Out(S162)
	S166= DR4bit.Out=>Mux15.1                                   Premise(F24151)
	S167= Mux15.1={Compare0(a&{UIMM,0}),so}                     Path(S164,S166)
	S168= Mux15.Out=>CRRegs.CR0In                               Premise(F24152)
	S169= ALUOut.Out=>Mux38.1                                   Premise(F25921)
	S170= Mux38.1=a&{UIMM,0}                                    Path(S163,S169)
	S171= Mux38.Out=>GPRegs.WData                               Premise(F25922)
	S172= Mux39.Out=>GPRegs.WReg                                Premise(F26166)
	S173= IR.Out6_10=>Mux39.2                                   Premise(F26183)
	S174= Mux39.2=rS                                            Path(S165,S173)
	S175= CtrlPC=0                                              Premise(F27990)
	S176= CtrlPCInc=0                                           Premise(F27991)
	S177= PC[NIA]=addr+4                                        PC-Hold(S156,S175,S176)
	S178= CtrlGPRegs=1                                          Premise(F27993)
	S179= CtrlCRRegsCR0=1                                       Premise(F27998)
	S180= CtrlMux15.1=1                                         Premise(F28038)
	S181= Mux15.Out={Compare0(a&{UIMM,0}),so}                   Mux(S167,S180)
	S182= CRRegs.CR0In={Compare0(a&{UIMM,0}),so}                Path(S181,S168)
	S183= CRRegs[CR0]={Compare0(a&{UIMM,0}),so}                 CRRegs-CR0-Write(S182,S179)
	S184= CtrlMux38.1=1                                         Premise(F28069)
	S185= CtrlMux38.2=0                                         Premise(F28070)
	S186= CtrlMux38.3=0                                         Premise(F28071)
	S187= Mux38.Out=a&{UIMM,0}                                  Mux(S170,S184,S185,S186)
	S188= GPRegs.WData=a&{UIMM,0}                               Path(S187,S171)
	S189= CtrlMux39.1=0                                         Premise(F28072)
	S190= CtrlMux39.2=1                                         Premise(F28073)
	S191= Mux39.Out=rS                                          Mux(S174,S189,S190)
	S192= GPRegs.WReg=rS                                        Path(S191,S172)
	S193= GPRegs[rS]=a&{UIMM,0}                                 GPRegs-Write(S192,S188,S178)

WB/	S177= PC[NIA]=addr+4                                        PC-Hold(S156,S175,S176)
	S183= CRRegs[CR0]={Compare0(a&{UIMM,0}),so}                 CRRegs-CR0-Write(S182,S179)
	S193= GPRegs[rS]=a&{UIMM,0}                                 GPRegs-Write(S192,S188,S178)

