
------------------------------------- Proof -------------------------------------

/IF	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[NIA]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rD,rA,rB,1301}                     Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= GPRegs[rB]=b                                            Premise(F4)
	S5= XER[CA]=ca                                              Premise(F5)
	S6= XER[SO]=so                                              Premise(F6)

IF	S7= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S8= PC.NIA=addr                                             PC-Out(S1)
	S9= PC.NIA=>Mux40.1                                         Premise(F3931)
	S10= Mux40.1=addr                                           Path(S8,S9)
	S11= Mux40.Out=>IMem.Addr                                   Premise(F3932)
	S12= PIDReg.Out=>Mux41.1                                    Premise(F4215)
	S13= Mux41.1=pid                                            Path(S7,S12)
	S14= Mux41.Out=>IMem.PID                                    Premise(F4216)
	S15= IMem.RData=>Mux44.1                                    Premise(F4547)
	S16= Mux44.Out=>IR.In                                       Premise(F4548)
	S17= CtrlPC=0                                               Premise(F5512)
	S18= CtrlPCInc=1                                            Premise(F5513)
	S19= PC[NIA]=addr+4                                         PC-Write(S1,S17,S18)
	S20= CtrlGPRegs=0                                           Premise(F5515)
	S21= GPRegs[rA]=a                                           GPRegs-Hold(S3,S20)
	S22= GPRegs[rB]=b                                           GPRegs-Hold(S4,S20)
	S23= CtrlXERSO=0                                            Premise(F5516)
	S24= XER[SO]=so                                             XER-SO-Hold(S6,S23)
	S25= CtrlXERCA=0                                            Premise(F5518)
	S26= XER[CA]=ca                                             XER-CA-Hold(S5,S25)
	S27= CtrlIR=1                                               Premise(F5529)
	S28= CtrlMux40.1=1                                          Premise(F5596)
	S29= Mux40.Out=addr                                         Mux(S10,S28)
	S30= IMem.Addr=addr                                         Path(S29,S11)
	S31= CtrlMux41.1=1                                          Premise(F5597)
	S32= Mux41.Out=pid                                          Mux(S13,S31)
	S33= IMem.PID=pid                                           Path(S32,S14)
	S34= IMem.RData={31,rD,rA,rB,1301}                          IMem-Read(S2,S33,S30)
	S35= Mux44.1={31,rD,rA,rB,1301}                             Path(S34,S15)
	S36= CtrlMux44.1=1                                          Premise(F5600)
	S37= Mux44.Out={31,rD,rA,rB,1301}                           Mux(S35,S36)
	S38= IR.In={31,rD,rA,rB,1301}                               Path(S37,S16)
	S39= [IR]={31,rD,rA,rB,1301}                                IR-Write(S38,S27)

ID	S40= IR.Out11_15=rA                                         IR-Out(S39)
	S41= IR.Out16_20=rB                                         IR-Out(S39)
	S42= Mux1.Out=>A.In                                         Premise(F5628)
	S43= GPRegs.RData1=>Mux1.3                                  Premise(F5681)
	S44= Mux10.Out=>B.In                                        Premise(F6938)
	S45= GPRegs.RData2=>Mux10.5                                 Premise(F6985)
	S46= IR.Out11_15=>Mux33.1                                   Premise(F8577)
	S47= Mux33.1=rA                                             Path(S40,S46)
	S48= Mux33.Out=>GPRegs.RReg1                                Premise(F8578)
	S49= IR.Out16_20=>Mux34.1                                   Premise(F8839)
	S50= Mux34.1=rB                                             Path(S41,S49)
	S51= Mux34.Out=>GPRegs.RReg2                                Premise(F8840)
	S52= CtrlPC=0                                               Premise(F11132)
	S53= CtrlPCInc=0                                            Premise(F11133)
	S54= PC[NIA]=addr+4                                         PC-Hold(S19,S52,S53)
	S55= CtrlXERSO=0                                            Premise(F11136)
	S56= XER[SO]=so                                             XER-SO-Hold(S24,S55)
	S57= CtrlXERCA=0                                            Premise(F11138)
	S58= XER[CA]=ca                                             XER-CA-Hold(S26,S57)
	S59= CtrlA=1                                                Premise(F11141)
	S60= CtrlB=1                                                Premise(F11143)
	S61= CtrlIR=0                                               Premise(F11149)
	S62= [IR]={31,rD,rA,rB,1301}                                IR-Hold(S39,S61)
	S63= CtrlMux1.1=0                                           Premise(F11154)
	S64= CtrlMux1.2=0                                           Premise(F11155)
	S65= CtrlMux1.3=1                                           Premise(F11156)
	S66= CtrlMux1.4=0                                           Premise(F11157)
	S67= CtrlMux10.1=0                                          Premise(F11167)
	S68= CtrlMux10.2=0                                          Premise(F11168)
	S69= CtrlMux10.3=0                                          Premise(F11169)
	S70= CtrlMux10.4=0                                          Premise(F11170)
	S71= CtrlMux10.5=1                                          Premise(F11171)
	S72= CtrlMux10.6=0                                          Premise(F11172)
	S73= CtrlMux10.7=0                                          Premise(F11173)
	S74= CtrlMux10.8=0                                          Premise(F11174)
	S75= CtrlMux33.1=1                                          Premise(F11205)
	S76= Mux33.Out=rA                                           Mux(S47,S75)
	S77= GPRegs.RReg1=rA                                        Path(S76,S48)
	S78= GPRegs.RData1=a                                        GPRegs-Read(S21,S77)
	S79= Mux1.3=a                                               Path(S78,S43)
	S80= Mux1.Out=a                                             Mux(S79,S63,S64,S65,S66)
	S81= A.In=a                                                 Path(S80,S42)
	S82= [A]=a                                                  A-Write(S81,S59)
	S83= CtrlMux34.1=1                                          Premise(F11206)
	S84= CtrlMux34.2=0                                          Premise(F11207)
	S85= Mux34.Out=rB                                           Mux(S50,S83,S84)
	S86= GPRegs.RReg2=rB                                        Path(S85,S51)
	S87= GPRegs.RData2=b                                        GPRegs-Read(S22,S86)
	S88= Mux10.5=b                                              Path(S87,S45)
	S89= Mux10.Out=b                                            Mux(S88,S67,S68,S69,S70,S71,S72,S73,S74)
	S90= B.In=b                                                 Path(S89,S44)
	S91= [B]=b                                                  B-Write(S90,S60)

EX	S92= XER.SOOut=so                                           XER-SO-Out(S56)
	S93= XER.CAOut=ca                                           XER-CA-Out(S58)
	S94= IR.Out0_5=31                                           IR-Out(S62)
	S95= IR.Out21_31=1301                                       IR-Out(S62)
	S96= A.Out=a                                                A-Out(S82)
	S97= B.Out=b                                                B-Out(S91)
	S98= A.Out=>Mux5.1                                          Premise(F11615)
	S99= Mux5.1=a                                               Path(S96,S98)
	S100= Mux5.Out=>ALU.A                                       Premise(F11616)
	S101= B.Out=>Mux6.1                                         Premise(F11837)
	S102= Mux6.1=b                                              Path(S97,S101)
	S103= Mux6.Out=>ALU.B                                       Premise(F11838)
	S104= XER.CAOut=>Mux7.1                                     Premise(F12051)
	S105= Mux7.1=ca                                             Path(S93,S104)
	S106= Mux7.Out=>ALU.CAIn                                    Premise(F12052)
	S107= CU.Func=>Mux8.1                                       Premise(F12097)
	S108= Mux8.Out=>ALU.Func                                    Premise(F12098)
	S109= ALU.Out=>Mux9.1                                       Premise(F12319)
	S110= Mux9.Out=>ALUOut.In                                   Premise(F12320)
	S111= ALU.CA=>Mux11.1                                       Premise(F12813)
	S112= Mux11.Out=>CAReg.In                                   Premise(F12814)
	S113= IR.Out21_31=>Mux21.1                                  Premise(F13091)
	S114= Mux21.1=1301                                          Path(S95,S113)
	S115= Mux21.Out=>CU.IRFunc                                  Premise(F13092)
	S116= IR.Out0_5=>Mux23.1                                    Premise(F13319)
	S117= Mux23.1=31                                            Path(S94,S116)
	S118= Mux23.Out=>CU.Op                                      Premise(F13320)
	S119= ALU.CMP=>Mux24.1                                      Premise(F13603)
	S120= Mux24.Out=>DataCmb.A                                  Premise(F13604)
	S121= ORGate.Out=>Mux25.1                                   Premise(F13709)
	S122= Mux25.Out=>DataCmb.B                                  Premise(F13710)
	S123= ORGate.Out=>Mux31.1                                   Premise(F14035)
	S124= Mux31.Out=>DR1bit.In                                  Premise(F14036)
	S125= DataCmb.Out=>Mux32.1                                  Premise(F14091)
	S126= Mux32.Out=>DR4bit.In                                  Premise(F14092)
	S127= XER.SOOut=>Mux53.1                                    Premise(F16347)
	S128= Mux53.1=so                                            Path(S92,S127)
	S129= Mux53.Out=>ORGate.A                                   Premise(F16348)
	S130= ALU.OV=>Mux54.1                                       Premise(F16403)
	S131= Mux54.Out=>ORGate.B                                   Premise(F16404)
	S132= ALU.OV=>Mux55.1                                       Premise(F16459)
	S133= Mux55.Out=>OVReg.In                                   Premise(F16460)
	S134= CtrlPC=0                                              Premise(F16752)
	S135= CtrlPCInc=0                                           Premise(F16753)
	S136= PC[NIA]=addr+4                                        PC-Hold(S54,S134,S135)
	S137= CtrlALUOut=1                                          Premise(F16762)
	S138= CtrlCAReg=1                                           Premise(F16764)
	S139= CtrlDR1bit=1                                          Premise(F16767)
	S140= CtrlDR4bit=1                                          Premise(F16768)
	S141= CtrlIR=0                                              Premise(F16769)
	S142= [IR]={31,rD,rA,rB,1301}                               IR-Hold(S62,S141)
	S143= CtrlOVReg=1                                           Premise(F16772)
	S144= CtrlMux5.1=1                                          Premise(F16781)
	S145= Mux5.Out=a                                            Mux(S99,S144)
	S146= ALU.A=a                                               Path(S145,S100)
	S147= CtrlMux6.1=1                                          Premise(F16782)
	S148= Mux6.Out=b                                            Mux(S102,S147)
	S149= ALU.B=b                                               Path(S148,S103)
	S150= CtrlMux7.1=1                                          Premise(F16783)
	S151= Mux7.Out=ca                                           Mux(S105,S150)
	S152= ALU.CAIn=ca                                           Path(S151,S106)
	S153= CtrlMux8.1=1                                          Premise(F16784)
	S154= CtrlMux9.1=1                                          Premise(F16785)
	S155= CtrlMux9.2=0                                          Premise(F16786)
	S156= CtrlMux11.1=1                                         Premise(F16795)
	S157= CtrlMux11.2=0                                         Premise(F16796)
	S158= CtrlMux21.1=1                                         Premise(F16808)
	S159= Mux21.Out=1301                                        Mux(S114,S158)
	S160= CU.IRFunc=1301                                        Path(S159,S115)
	S161= CtrlMux23.1=1                                         Premise(F16810)
	S162= Mux23.Out=31                                          Mux(S117,S161)
	S163= CU.Op=31                                              Path(S162,S118)
	S164= CU.Func=alu_adde                                      CU(S163,S160)
	S165= Mux8.1=alu_adde                                       Path(S164,S107)
	S166= Mux8.Out=alu_adde                                     Mux(S165,S153)
	S167= ALU.Func=alu_adde                                     Path(S166,S108)
	S168= ALU.Out=a+b+ca                                        ALU(S146,S149,S152,S167)
	S169= Mux9.1=a+b+ca                                         Path(S168,S109)
	S170= Mux9.Out=a+b+ca                                       Mux(S169,S154,S155)
	S171= ALUOut.In=a+b+ca                                      Path(S170,S110)
	S172= [ALUOut]=a+b+ca                                       ALUOut-Write(S171,S137)
	S173= ALU.CMP=Compare0(a+b+ca)                              ALU(S146,S149,S152,S167)
	S174= Mux24.1=Compare0(a+b+ca)                              Path(S173,S119)
	S175= ALU.OV=OverFlow(a+b+ca)                               ALU(S146,S149,S152,S167)
	S176= Mux54.1=OverFlow(a+b+ca)                              Path(S175,S130)
	S177= Mux55.1=OverFlow(a+b+ca)                              Path(S175,S132)
	S178= ALU.CA=Carry(a+b+ca)                                  ALU(S146,S149,S152,S167)
	S179= Mux11.1=Carry(a+b+ca)                                 Path(S178,S111)
	S180= Mux11.Out=Carry(a+b+ca)                               Mux(S179,S156,S157)
	S181= CAReg.In=Carry(a+b+ca)                                Path(S180,S112)
	S182= [CAReg]=Carry(a+b+ca)                                 CAReg-Write(S181,S138)
	S183= CtrlMux24.1=1                                         Premise(F16811)
	S184= CtrlMux24.2=0                                         Premise(F16812)
	S185= CtrlMux24.3=0                                         Premise(F16813)
	S186= CtrlMux24.4=0                                         Premise(F16814)
	S187= Mux24.Out=Compare0(a+b+ca)                            Mux(S174,S183,S184,S185,S186)
	S188= DataCmb.A=Compare0(a+b+ca)                            Path(S187,S120)
	S189= CtrlMux25.1=1                                         Premise(F16815)
	S190= CtrlMux25.2=0                                         Premise(F16816)
	S191= CtrlMux31.1=1                                         Premise(F16823)
	S192= CtrlMux32.1=1                                         Premise(F16824)
	S193= CtrlMux53.1=1                                         Premise(F16853)
	S194= Mux53.Out=so                                          Mux(S128,S193)
	S195= ORGate.A=so                                           Path(S194,S129)
	S196= CtrlMux54.1=1                                         Premise(F16854)
	S197= CtrlMux54.2=0                                         Premise(F16855)
	S198= Mux54.Out=OverFlow(a+b+ca)                            Mux(S176,S196,S197)
	S199= ORGate.B=OverFlow(a+b+ca)                             Path(S198,S131)
	S200= ORGate.Out=so|OverFlow(a+b+ca)                        ORGate(S195,S199)
	S201= Mux25.1=so|OverFlow(a+b+ca)                           Path(S200,S121)
	S202= Mux25.Out=so|OverFlow(a+b+ca)                         Mux(S201,S189,S190)
	S203= DataCmb.B=so|OverFlow(a+b+ca)                         Path(S202,S122)
	S204= DataCmb.Out={Compare0(a+b+ca),so|OverFlow(a+b+ca)}    DataCmb(S188,S203)
	S205= Mux32.1={Compare0(a+b+ca),so|OverFlow(a+b+ca)}        Path(S204,S125)
	S206= Mux32.Out={Compare0(a+b+ca),so|OverFlow(a+b+ca)}      Mux(S205,S192)
	S207= DR4bit.In={Compare0(a+b+ca),so|OverFlow(a+b+ca)}      Path(S206,S126)
	S208= [DR4bit]={Compare0(a+b+ca),so|OverFlow(a+b+ca)}       DR4bit-Write(S207,S140)
	S209= Mux31.1=so|OverFlow(a+b+ca)                           Path(S200,S123)
	S210= Mux31.Out=so|OverFlow(a+b+ca)                         Mux(S209,S191)
	S211= DR1bit.In=so|OverFlow(a+b+ca)                         Path(S210,S124)
	S212= [DR1bit]=so|OverFlow(a+b+ca)                          DR1bit-Write(S211,S139)
	S213= CtrlMux55.1=1                                         Premise(F16856)
	S214= Mux55.Out=OverFlow(a+b+ca)                            Mux(S177,S213)
	S215= OVReg.In=OverFlow(a+b+ca)                             Path(S214,S133)
	S216= [OVReg]=OverFlow(a+b+ca)                              OVReg-Write(S215,S143)

MEM	S217= CtrlPC=0                                              Premise(F22372)
	S218= CtrlPCInc=0                                           Premise(F22373)
	S219= PC[NIA]=addr+4                                        PC-Hold(S136,S217,S218)
	S220= CtrlALUOut=0                                          Premise(F22382)
	S221= [ALUOut]=a+b+ca                                       ALUOut-Hold(S172,S220)
	S222= CtrlCAReg=0                                           Premise(F22384)
	S223= [CAReg]=Carry(a+b+ca)                                 CAReg-Hold(S182,S222)
	S224= CtrlDR1bit=0                                          Premise(F22387)
	S225= [DR1bit]=so|OverFlow(a+b+ca)                          DR1bit-Hold(S212,S224)
	S226= CtrlDR4bit=0                                          Premise(F22388)
	S227= [DR4bit]={Compare0(a+b+ca),so|OverFlow(a+b+ca)}       DR4bit-Hold(S208,S226)
	S228= CtrlIR=0                                              Premise(F22389)
	S229= [IR]={31,rD,rA,rB,1301}                               IR-Hold(S142,S228)
	S230= CtrlOVReg=0                                           Premise(F22392)
	S231= [OVReg]=OverFlow(a+b+ca)                              OVReg-Hold(S216,S230)

WB	S232= ALUOut.Out=a+b+ca                                     ALUOut-Out(S221)
	S233= CAReg.Out=Carry(a+b+ca)                               CAReg-Out(S223)
	S234= DR1bit.Out=so|OverFlow(a+b+ca)                        DR1bit-Out(S225)
	S235= DR4bit.Out={Compare0(a+b+ca),so|OverFlow(a+b+ca)}     DR4bit-Out(S227)
	S236= IR.Out6_10=rD                                         IR-Out(S229)
	S237= OVReg.Out=OverFlow(a+b+ca)                            OVReg-Out(S231)
	S238= DR4bit.Out=>Mux15.1                                   Premise(F24153)
	S239= Mux15.1={Compare0(a+b+ca),so|OverFlow(a+b+ca)}        Path(S235,S238)
	S240= Mux15.Out=>CRRegs.CR0In                               Premise(F24154)
	S241= ALUOut.Out=>Mux38.1                                   Premise(F25923)
	S242= Mux38.1=a+b+ca                                        Path(S232,S241)
	S243= Mux38.Out=>GPRegs.WData                               Premise(F25924)
	S244= Mux39.Out=>GPRegs.WReg                                Premise(F26168)
	S245= IR.Out6_10=>Mux39.2                                   Premise(F26185)
	S246= Mux39.2=rD                                            Path(S236,S245)
	S247= CAReg.Out=>Mux62.1                                    Premise(F27815)
	S248= Mux62.1=Carry(a+b+ca)                                 Path(S233,S247)
	S249= Mux62.Out=>XER.CAIn                                   Premise(F27816)
	S250= OVReg.Out=>Mux63.1                                    Premise(F27891)
	S251= Mux63.1=OverFlow(a+b+ca)                              Path(S237,S250)
	S252= Mux63.Out=>XER.OVIn                                   Premise(F27892)
	S253= DR1bit.Out=>Mux64.1                                   Premise(F27935)
	S254= Mux64.1=so|OverFlow(a+b+ca)                           Path(S234,S253)
	S255= Mux64.Out=>XER.SOIn                                   Premise(F27936)
	S256= CtrlPC=0                                              Premise(F27992)
	S257= CtrlPCInc=0                                           Premise(F27993)
	S258= PC[NIA]=addr+4                                        PC-Hold(S219,S256,S257)
	S259= CtrlGPRegs=1                                          Premise(F27995)
	S260= CtrlXERSO=1                                           Premise(F27996)
	S261= CtrlXEROV=1                                           Premise(F27997)
	S262= CtrlXERCA=1                                           Premise(F27998)
	S263= CtrlCRRegsCR0=1                                       Premise(F28000)
	S264= CtrlMux15.1=1                                         Premise(F28040)
	S265= Mux15.Out={Compare0(a+b+ca),so|OverFlow(a+b+ca)}      Mux(S239,S264)
	S266= CRRegs.CR0In={Compare0(a+b+ca),so|OverFlow(a+b+ca)}   Path(S265,S240)
	S267= CRRegs[CR0]={Compare0(a+b+ca),so|OverFlow(a+b+ca)}    CRRegs-CR0-Write(S266,S263)
	S268= CtrlMux38.1=1                                         Premise(F28071)
	S269= CtrlMux38.2=0                                         Premise(F28072)
	S270= CtrlMux38.3=0                                         Premise(F28073)
	S271= Mux38.Out=a+b+ca                                      Mux(S242,S268,S269,S270)
	S272= GPRegs.WData=a+b+ca                                   Path(S271,S243)
	S273= CtrlMux39.1=0                                         Premise(F28074)
	S274= CtrlMux39.2=1                                         Premise(F28075)
	S275= Mux39.Out=rD                                          Mux(S246,S273,S274)
	S276= GPRegs.WReg=rD                                        Path(S275,S244)
	S277= GPRegs[rD]=a+b+ca                                     GPRegs-Write(S276,S272,S259)
	S278= CtrlMux62.1=1                                         Premise(F28104)
	S279= Mux62.Out=Carry(a+b+ca)                               Mux(S248,S278)
	S280= XER.CAIn=Carry(a+b+ca)                                Path(S279,S249)
	S281= XER[CA]=Carry(a+b+ca)                                 XER-CA-Write(S280,S262)
	S282= CtrlMux63.1=1                                         Premise(F28105)
	S283= Mux63.Out=OverFlow(a+b+ca)                            Mux(S251,S282)
	S284= XER.OVIn=OverFlow(a+b+ca)                             Path(S283,S252)
	S285= XER[OV]=OverFlow(a+b+ca)                              XER-OV-Write(S284,S261)
	S286= CtrlMux64.1=1                                         Premise(F28106)
	S287= Mux64.Out=so|OverFlow(a+b+ca)                         Mux(S254,S286)
	S288= XER.SOIn=so|OverFlow(a+b+ca)                          Path(S287,S255)
	S289= XER[SO]=so|OverFlow(a+b+ca)                           XER-SO-Write(S288,S260)

WB/	S258= PC[NIA]=addr+4                                        PC-Hold(S219,S256,S257)
	S267= CRRegs[CR0]={Compare0(a+b+ca),so|OverFlow(a+b+ca)}    CRRegs-CR0-Write(S266,S263)
	S277= GPRegs[rD]=a+b+ca                                     GPRegs-Write(S276,S272,S259)
	S281= XER[CA]=Carry(a+b+ca)                                 XER-CA-Write(S280,S262)
	S285= XER[OV]=OverFlow(a+b+ca)                              XER-OV-Write(S284,S261)
	S289= XER[SO]=so|OverFlow(a+b+ca)                           XER-SO-Write(S288,S260)

