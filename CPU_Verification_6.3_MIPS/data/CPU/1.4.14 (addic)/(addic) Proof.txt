
------------------------------------- Proof -------------------------------------

/IF	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[NIA]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={12,rD,rA,SIMM}                        Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)

IF	S4= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S5= PC.NIA=addr                                             PC-Out(S1)
	S6= PC.NIA=>Mux40.1                                         Premise(F3928)
	S7= Mux40.1=addr                                            Path(S5,S6)
	S8= Mux40.Out=>IMem.Addr                                    Premise(F3929)
	S9= PIDReg.Out=>Mux41.1                                     Premise(F4212)
	S10= Mux41.1=pid                                            Path(S4,S9)
	S11= Mux41.Out=>IMem.PID                                    Premise(F4213)
	S12= IMem.RData=>Mux44.1                                    Premise(F4544)
	S13= Mux44.Out=>IR.In                                       Premise(F4545)
	S14= CtrlPC=0                                               Premise(F5509)
	S15= CtrlPCInc=1                                            Premise(F5510)
	S16= PC[NIA]=addr+4                                         PC-Write(S1,S14,S15)
	S17= CtrlGPRegs=0                                           Premise(F5512)
	S18= GPRegs[rA]=a                                           GPRegs-Hold(S3,S17)
	S19= CtrlIR=1                                               Premise(F5526)
	S20= CtrlMux40.1=1                                          Premise(F5593)
	S21= Mux40.Out=addr                                         Mux(S7,S20)
	S22= IMem.Addr=addr                                         Path(S21,S8)
	S23= CtrlMux41.1=1                                          Premise(F5594)
	S24= Mux41.Out=pid                                          Mux(S10,S23)
	S25= IMem.PID=pid                                           Path(S24,S11)
	S26= IMem.RData={12,rD,rA,SIMM}                             IMem-Read(S2,S25,S22)
	S27= Mux44.1={12,rD,rA,SIMM}                                Path(S26,S12)
	S28= CtrlMux44.1=1                                          Premise(F5597)
	S29= Mux44.Out={12,rD,rA,SIMM}                              Mux(S27,S28)
	S30= IR.In={12,rD,rA,SIMM}                                  Path(S29,S13)
	S31= [IR]={12,rD,rA,SIMM}                                   IR-Write(S30,S19)

ID	S32= IR.Out11_15=rA                                         IR-Out(S31)
	S33= IR.Out16_31=SIMM                                       IR-Out(S31)
	S34= Mux1.Out=>A.In                                         Premise(F5625)
	S35= GPRegs.RData1=>Mux1.3                                  Premise(F5678)
	S36= Mux10.Out=>B.In                                        Premise(F6935)
	S37= IMMEXT.Out=>Mux10.6                                    Premise(F7134)
	S38= IR.Out11_15=>Mux33.1                                   Premise(F8574)
	S39= Mux33.1=rA                                             Path(S32,S38)
	S40= Mux33.Out=>GPRegs.RReg1                                Premise(F8575)
	S41= IR.Out16_31=>Mux42.1                                   Premise(F10116)
	S42= Mux42.1=SIMM                                           Path(S33,S41)
	S43= Mux42.Out=>IMMEXT.In                                   Premise(F10117)
	S44= CtrlPC=0                                               Premise(F11129)
	S45= CtrlPCInc=0                                            Premise(F11130)
	S46= PC[NIA]=addr+4                                         PC-Hold(S16,S44,S45)
	S47= CtrlA=1                                                Premise(F11136)
	S48= CtrlB=1                                                Premise(F11138)
	S49= CtrlIR=0                                               Premise(F11146)
	S50= [IR]={12,rD,rA,SIMM}                                   IR-Hold(S31,S49)
	S51= CtrlMux1.1=0                                           Premise(F11151)
	S52= CtrlMux1.2=0                                           Premise(F11152)
	S53= CtrlMux1.3=1                                           Premise(F11153)
	S54= CtrlMux1.4=0                                           Premise(F11154)
	S55= CtrlMux10.1=0                                          Premise(F11164)
	S56= CtrlMux10.2=0                                          Premise(F11165)
	S57= CtrlMux10.3=0                                          Premise(F11166)
	S58= CtrlMux10.4=0                                          Premise(F11167)
	S59= CtrlMux10.5=0                                          Premise(F11168)
	S60= CtrlMux10.6=1                                          Premise(F11169)
	S61= CtrlMux10.7=0                                          Premise(F11170)
	S62= CtrlMux10.8=0                                          Premise(F11171)
	S63= CtrlMux33.1=1                                          Premise(F11202)
	S64= Mux33.Out=rA                                           Mux(S39,S63)
	S65= GPRegs.RReg1=rA                                        Path(S64,S40)
	S66= GPRegs.RData1=a                                        GPRegs-Read(S18,S65)
	S67= Mux1.3=a                                               Path(S66,S35)
	S68= Mux1.Out=a                                             Mux(S67,S51,S52,S53,S54)
	S69= A.In=a                                                 Path(S68,S34)
	S70= [A]=a                                                  A-Write(S69,S47)
	S71= CtrlMux42.1=1                                          Premise(F11215)
	S72= Mux42.Out=SIMM                                         Mux(S42,S71)
	S73= IMMEXT.In=SIMM                                         Path(S72,S43)
	S74= IMMEXT.Out={16{SIMM[15]},SIMM}                         IMMEXT(S73)
	S75= Mux10.6={16{SIMM[15]},SIMM}                            Path(S74,S37)
	S76= Mux10.Out={16{SIMM[15]},SIMM}                          Mux(S75,S55,S56,S57,S58,S59,S60,S61,S62)
	S77= B.In={16{SIMM[15]},SIMM}                               Path(S76,S36)
	S78= [B]={16{SIMM[15]},SIMM}                                B-Write(S77,S48)

EX	S79= IR.Out0_5=12                                           IR-Out(S50)
	S80= A.Out=a                                                A-Out(S70)
	S81= B.Out={16{SIMM[15]},SIMM}                              B-Out(S78)
	S82= A.Out=>Mux5.1                                          Premise(F11612)
	S83= Mux5.1=a                                               Path(S80,S82)
	S84= Mux5.Out=>ALU.A                                        Premise(F11613)
	S85= B.Out=>Mux6.1                                          Premise(F11834)
	S86= Mux6.1={16{SIMM[15]},SIMM}                             Path(S81,S85)
	S87= Mux6.Out=>ALU.B                                        Premise(F11835)
	S88= CU.Func=>Mux8.1                                        Premise(F12094)
	S89= Mux8.Out=>ALU.Func                                     Premise(F12095)
	S90= ALU.Out=>Mux9.1                                        Premise(F12316)
	S91= Mux9.Out=>ALUOut.In                                    Premise(F12317)
	S92= ALU.CA=>Mux11.1                                        Premise(F12810)
	S93= Mux11.Out=>CAReg.In                                    Premise(F12811)
	S94= IR.Out0_5=>Mux23.1                                     Premise(F13316)
	S95= Mux23.1=12                                             Path(S79,S94)
	S96= Mux23.Out=>CU.Op                                       Premise(F13317)
	S97= CtrlPC=0                                               Premise(F16749)
	S98= CtrlPCInc=0                                            Premise(F16750)
	S99= PC[NIA]=addr+4                                         PC-Hold(S46,S97,S98)
	S100= CtrlALUOut=1                                          Premise(F16757)
	S101= CtrlCAReg=1                                           Premise(F16759)
	S102= CtrlIR=0                                              Premise(F16766)
	S103= [IR]={12,rD,rA,SIMM}                                  IR-Hold(S50,S102)
	S104= CtrlMux5.1=1                                          Premise(F16778)
	S105= Mux5.Out=a                                            Mux(S83,S104)
	S106= ALU.A=a                                               Path(S105,S84)
	S107= CtrlMux6.1=1                                          Premise(F16779)
	S108= Mux6.Out={16{SIMM[15]},SIMM}                          Mux(S86,S107)
	S109= ALU.B={16{SIMM[15]},SIMM}                             Path(S108,S87)
	S110= CtrlMux8.1=1                                          Premise(F16781)
	S111= CtrlMux9.1=1                                          Premise(F16782)
	S112= CtrlMux9.2=0                                          Premise(F16783)
	S113= CtrlMux11.1=1                                         Premise(F16792)
	S114= CtrlMux11.2=0                                         Premise(F16793)
	S115= CtrlMux23.1=1                                         Premise(F16807)
	S116= Mux23.Out=12                                          Mux(S95,S115)
	S117= CU.Op=12                                              Path(S116,S96)
	S118= CU.Func=alu_add                                       CU(S117)
	S119= Mux8.1=alu_add                                        Path(S118,S88)
	S120= Mux8.Out=alu_add                                      Mux(S119,S110)
	S121= ALU.Func=alu_add                                      Path(S120,S89)
	S122= ALU.Out=a+{16{SIMM[15]},SIMM}                         ALU(S106,S109,S121)
	S123= Mux9.1=a+{16{SIMM[15]},SIMM}                          Path(S122,S90)
	S124= Mux9.Out=a+{16{SIMM[15]},SIMM}                        Mux(S123,S111,S112)
	S125= ALUOut.In=a+{16{SIMM[15]},SIMM}                       Path(S124,S91)
	S126= [ALUOut]=a+{16{SIMM[15]},SIMM}                        ALUOut-Write(S125,S100)
	S127= ALU.CA=Carry(a+{16{SIMM[15]},SIMM})                   ALU(S106,S109,S121)
	S128= Mux11.1=Carry(a+{16{SIMM[15]},SIMM})                  Path(S127,S92)
	S129= Mux11.Out=Carry(a+{16{SIMM[15]},SIMM})                Mux(S128,S113,S114)
	S130= CAReg.In=Carry(a+{16{SIMM[15]},SIMM})                 Path(S129,S93)
	S131= [CAReg]=Carry(a+{16{SIMM[15]},SIMM})                  CAReg-Write(S130,S101)

MEM	S132= CtrlPC=0                                              Premise(F22369)
	S133= CtrlPCInc=0                                           Premise(F22370)
	S134= PC[NIA]=addr+4                                        PC-Hold(S99,S132,S133)
	S135= CtrlALUOut=0                                          Premise(F22377)
	S136= [ALUOut]=a+{16{SIMM[15]},SIMM}                        ALUOut-Hold(S126,S135)
	S137= CtrlCAReg=0                                           Premise(F22379)
	S138= [CAReg]=Carry(a+{16{SIMM[15]},SIMM})                  CAReg-Hold(S131,S137)
	S139= CtrlIR=0                                              Premise(F22386)
	S140= [IR]={12,rD,rA,SIMM}                                  IR-Hold(S103,S139)

WB	S141= ALUOut.Out=a+{16{SIMM[15]},SIMM}                      ALUOut-Out(S136)
	S142= CAReg.Out=Carry(a+{16{SIMM[15]},SIMM})                CAReg-Out(S138)
	S143= IR.Out6_10=rD                                         IR-Out(S140)
	S144= ALUOut.Out=>Mux38.1                                   Premise(F25920)
	S145= Mux38.1=a+{16{SIMM[15]},SIMM}                         Path(S141,S144)
	S146= Mux38.Out=>GPRegs.WData                               Premise(F25921)
	S147= Mux39.Out=>GPRegs.WReg                                Premise(F26165)
	S148= IR.Out6_10=>Mux39.2                                   Premise(F26182)
	S149= Mux39.2=rD                                            Path(S143,S148)
	S150= CAReg.Out=>Mux62.1                                    Premise(F27812)
	S151= Mux62.1=Carry(a+{16{SIMM[15]},SIMM})                  Path(S142,S150)
	S152= Mux62.Out=>XER.CAIn                                   Premise(F27813)
	S153= CtrlPC=0                                              Premise(F27989)
	S154= CtrlPCInc=0                                           Premise(F27990)
	S155= PC[NIA]=addr+4                                        PC-Hold(S134,S153,S154)
	S156= CtrlGPRegs=1                                          Premise(F27992)
	S157= CtrlXERCA=1                                           Premise(F27995)
	S158= CtrlMux38.1=1                                         Premise(F28068)
	S159= CtrlMux38.2=0                                         Premise(F28069)
	S160= CtrlMux38.3=0                                         Premise(F28070)
	S161= Mux38.Out=a+{16{SIMM[15]},SIMM}                       Mux(S145,S158,S159,S160)
	S162= GPRegs.WData=a+{16{SIMM[15]},SIMM}                    Path(S161,S146)
	S163= CtrlMux39.1=0                                         Premise(F28071)
	S164= CtrlMux39.2=1                                         Premise(F28072)
	S165= Mux39.Out=rD                                          Mux(S149,S163,S164)
	S166= GPRegs.WReg=rD                                        Path(S165,S147)
	S167= GPRegs[rD]=a+{16{SIMM[15]},SIMM}                      GPRegs-Write(S166,S162,S156)
	S168= CtrlMux62.1=1                                         Premise(F28101)
	S169= Mux62.Out=Carry(a+{16{SIMM[15]},SIMM})                Mux(S151,S168)
	S170= XER.CAIn=Carry(a+{16{SIMM[15]},SIMM})                 Path(S169,S152)
	S171= XER[CA]=Carry(a+{16{SIMM[15]},SIMM})                  XER-CA-Write(S170,S157)

WB/	S155= PC[NIA]=addr+4                                        PC-Hold(S134,S153,S154)
	S167= GPRegs[rD]=a+{16{SIMM[15]},SIMM}                      GPRegs-Write(S166,S162,S156)
	S171= XER[CA]=Carry(a+{16{SIMM[15]},SIMM})                  XER-CA-Write(S170,S157)

