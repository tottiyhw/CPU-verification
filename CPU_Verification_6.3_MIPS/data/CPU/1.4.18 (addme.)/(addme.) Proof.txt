
------------------------------------- Proof -------------------------------------

/IF	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[NIA]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rD,rA,0,469}                       Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= XER[SO]=so                                              Premise(F4)
	S5= XER[CA]=ca                                              Premise(F5)

IF	S6= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S7= PC.NIA=addr                                             PC-Out(S1)
	S8= PC.NIA=>Mux40.1                                         Premise(F3930)
	S9= Mux40.1=addr                                            Path(S7,S8)
	S10= Mux40.Out=>IMem.Addr                                   Premise(F3931)
	S11= PIDReg.Out=>Mux41.1                                    Premise(F4214)
	S12= Mux41.1=pid                                            Path(S6,S11)
	S13= Mux41.Out=>IMem.PID                                    Premise(F4215)
	S14= IMem.RData=>Mux44.1                                    Premise(F4546)
	S15= Mux44.Out=>IR.In                                       Premise(F4547)
	S16= CtrlPC=0                                               Premise(F5511)
	S17= CtrlPCInc=1                                            Premise(F5512)
	S18= PC[NIA]=addr+4                                         PC-Write(S1,S16,S17)
	S19= CtrlGPRegs=0                                           Premise(F5514)
	S20= GPRegs[rA]=a                                           GPRegs-Hold(S3,S19)
	S21= CtrlXERSO=0                                            Premise(F5515)
	S22= XER[SO]=so                                             XER-SO-Hold(S4,S21)
	S23= CtrlXERCA=0                                            Premise(F5517)
	S24= XER[CA]=ca                                             XER-CA-Hold(S5,S23)
	S25= CtrlIR=1                                               Premise(F5528)
	S26= CtrlMux40.1=1                                          Premise(F5595)
	S27= Mux40.Out=addr                                         Mux(S9,S26)
	S28= IMem.Addr=addr                                         Path(S27,S10)
	S29= CtrlMux41.1=1                                          Premise(F5596)
	S30= Mux41.Out=pid                                          Mux(S12,S29)
	S31= IMem.PID=pid                                           Path(S30,S13)
	S32= IMem.RData={31,rD,rA,0,469}                            IMem-Read(S2,S31,S28)
	S33= Mux44.1={31,rD,rA,0,469}                               Path(S32,S14)
	S34= CtrlMux44.1=1                                          Premise(F5599)
	S35= Mux44.Out={31,rD,rA,0,469}                             Mux(S33,S34)
	S36= IR.In={31,rD,rA,0,469}                                 Path(S35,S15)
	S37= [IR]={31,rD,rA,0,469}                                  IR-Write(S36,S25)

ID	S38= IR.Out11_15=rA                                         IR-Out(S37)
	S39= Mux1.Out=>A.In                                         Premise(F5627)
	S40= GPRegs.RData1=>Mux1.3                                  Premise(F5680)
	S41= Mux10.Out=>B.In                                        Premise(F6937)
	S42= (-1)=>Mux10.2                                          Premise(F6952)
	S43= Mux10.2=(-1)                                           Const-Path(S42)
	S44= IR.Out11_15=>Mux33.1                                   Premise(F8576)
	S45= Mux33.1=rA                                             Path(S38,S44)
	S46= Mux33.Out=>GPRegs.RReg1                                Premise(F8577)
	S47= CtrlPC=0                                               Premise(F11131)
	S48= CtrlPCInc=0                                            Premise(F11132)
	S49= PC[NIA]=addr+4                                         PC-Hold(S18,S47,S48)
	S50= CtrlXERSO=0                                            Premise(F11135)
	S51= XER[SO]=so                                             XER-SO-Hold(S22,S50)
	S52= CtrlXERCA=0                                            Premise(F11137)
	S53= XER[CA]=ca                                             XER-CA-Hold(S24,S52)
	S54= CtrlA=1                                                Premise(F11140)
	S55= CtrlB=1                                                Premise(F11142)
	S56= CtrlIR=0                                               Premise(F11148)
	S57= [IR]={31,rD,rA,0,469}                                  IR-Hold(S37,S56)
	S58= CtrlMux1.1=0                                           Premise(F11153)
	S59= CtrlMux1.2=0                                           Premise(F11154)
	S60= CtrlMux1.3=1                                           Premise(F11155)
	S61= CtrlMux1.4=0                                           Premise(F11156)
	S62= CtrlMux10.1=0                                          Premise(F11166)
	S63= CtrlMux10.2=1                                          Premise(F11167)
	S64= CtrlMux10.3=0                                          Premise(F11168)
	S65= CtrlMux10.4=0                                          Premise(F11169)
	S66= CtrlMux10.5=0                                          Premise(F11170)
	S67= CtrlMux10.6=0                                          Premise(F11171)
	S68= CtrlMux10.7=0                                          Premise(F11172)
	S69= CtrlMux10.8=0                                          Premise(F11173)
	S70= Mux10.Out=(-1)                                         Mux(S43,S62,S63,S64,S65,S66,S67,S68,S69)
	S71= B.In=(-1)                                              Path(S70,S41)
	S72= [B]=(-1)                                               B-Write(S71,S55)
	S73= CtrlMux33.1=1                                          Premise(F11204)
	S74= Mux33.Out=rA                                           Mux(S45,S73)
	S75= GPRegs.RReg1=rA                                        Path(S74,S46)
	S76= GPRegs.RData1=a                                        GPRegs-Read(S20,S75)
	S77= Mux1.3=a                                               Path(S76,S40)
	S78= Mux1.Out=a                                             Mux(S77,S58,S59,S60,S61)
	S79= A.In=a                                                 Path(S78,S39)
	S80= [A]=a                                                  A-Write(S79,S54)

EX	S81= XER.SOOut=so                                           XER-SO-Out(S51)
	S82= XER.CAOut=ca                                           XER-CA-Out(S53)
	S83= IR.Out0_5=31                                           IR-Out(S57)
	S84= IR.Out21_31=469                                        IR-Out(S57)
	S85= B.Out=(-1)                                             B-Out(S72)
	S86= A.Out=a                                                A-Out(S80)
	S87= A.Out=>Mux5.1                                          Premise(F11614)
	S88= Mux5.1=a                                               Path(S86,S87)
	S89= Mux5.Out=>ALU.A                                        Premise(F11615)
	S90= B.Out=>Mux6.1                                          Premise(F11836)
	S91= Mux6.1=(-1)                                            Path(S85,S90)
	S92= Mux6.Out=>ALU.B                                        Premise(F11837)
	S93= XER.CAOut=>Mux7.1                                      Premise(F12050)
	S94= Mux7.1=ca                                              Path(S82,S93)
	S95= Mux7.Out=>ALU.CAIn                                     Premise(F12051)
	S96= CU.Func=>Mux8.1                                        Premise(F12096)
	S97= Mux8.Out=>ALU.Func                                     Premise(F12097)
	S98= ALU.Out=>Mux9.1                                        Premise(F12318)
	S99= Mux9.Out=>ALUOut.In                                    Premise(F12319)
	S100= ALU.CA=>Mux11.1                                       Premise(F12812)
	S101= Mux11.Out=>CAReg.In                                   Premise(F12813)
	S102= IR.Out21_31=>Mux21.1                                  Premise(F13090)
	S103= Mux21.1=469                                           Path(S84,S102)
	S104= Mux21.Out=>CU.IRFunc                                  Premise(F13091)
	S105= IR.Out0_5=>Mux23.1                                    Premise(F13318)
	S106= Mux23.1=31                                            Path(S83,S105)
	S107= Mux23.Out=>CU.Op                                      Premise(F13319)
	S108= ALU.CMP=>Mux24.1                                      Premise(F13602)
	S109= Mux24.Out=>DataCmb.A                                  Premise(F13603)
	S110= Mux25.Out=>DataCmb.B                                  Premise(F13709)
	S111= XER.SOOut=>Mux25.2                                    Premise(F13736)
	S112= Mux25.2=so                                            Path(S81,S111)
	S113= DataCmb.Out=>Mux32.1                                  Premise(F14090)
	S114= Mux32.Out=>DR4bit.In                                  Premise(F14091)
	S115= CtrlPC=0                                              Premise(F16751)
	S116= CtrlPCInc=0                                           Premise(F16752)
	S117= PC[NIA]=addr+4                                        PC-Hold(S49,S115,S116)
	S118= CtrlALUOut=1                                          Premise(F16761)
	S119= CtrlCAReg=1                                           Premise(F16763)
	S120= CtrlDR4bit=1                                          Premise(F16767)
	S121= CtrlIR=0                                              Premise(F16768)
	S122= [IR]={31,rD,rA,0,469}                                 IR-Hold(S57,S121)
	S123= CtrlMux5.1=1                                          Premise(F16780)
	S124= Mux5.Out=a                                            Mux(S88,S123)
	S125= ALU.A=a                                               Path(S124,S89)
	S126= CtrlMux6.1=1                                          Premise(F16781)
	S127= Mux6.Out=(-1)                                         Mux(S91,S126)
	S128= ALU.B=(-1)                                            Path(S127,S92)
	S129= CtrlMux7.1=1                                          Premise(F16782)
	S130= Mux7.Out=ca                                           Mux(S94,S129)
	S131= ALU.CAIn=ca                                           Path(S130,S95)
	S132= CtrlMux8.1=1                                          Premise(F16783)
	S133= CtrlMux9.1=1                                          Premise(F16784)
	S134= CtrlMux9.2=0                                          Premise(F16785)
	S135= CtrlMux11.1=1                                         Premise(F16794)
	S136= CtrlMux11.2=0                                         Premise(F16795)
	S137= CtrlMux21.1=1                                         Premise(F16807)
	S138= Mux21.Out=469                                         Mux(S103,S137)
	S139= CU.IRFunc=469                                         Path(S138,S104)
	S140= CtrlMux23.1=1                                         Premise(F16809)
	S141= Mux23.Out=31                                          Mux(S106,S140)
	S142= CU.Op=31                                              Path(S141,S107)
	S143= CU.Func=alu_adde                                      CU(S142,S139)
	S144= Mux8.1=alu_adde                                       Path(S143,S96)
	S145= Mux8.Out=alu_adde                                     Mux(S144,S132)
	S146= ALU.Func=alu_adde                                     Path(S145,S97)
	S147= ALU.Out=a+(-1)+ca                                     ALU(S125,S128,S131,S146)
	S148= Mux9.1=a+(-1)+ca                                      Path(S147,S98)
	S149= Mux9.Out=a+(-1)+ca                                    Mux(S148,S133,S134)
	S150= ALUOut.In=a+(-1)+ca                                   Path(S149,S99)
	S151= [ALUOut]=a+(-1)+ca                                    ALUOut-Write(S150,S118)
	S152= ALU.CMP=Compare0(a+(-1)+ca)                           ALU(S125,S128,S131,S146)
	S153= Mux24.1=Compare0(a+(-1)+ca)                           Path(S152,S108)
	S154= ALU.CA=Carry(a+(-1)+ca)                               ALU(S125,S128,S131,S146)
	S155= Mux11.1=Carry(a+(-1)+ca)                              Path(S154,S100)
	S156= Mux11.Out=Carry(a+(-1)+ca)                            Mux(S155,S135,S136)
	S157= CAReg.In=Carry(a+(-1)+ca)                             Path(S156,S101)
	S158= [CAReg]=Carry(a+(-1)+ca)                              CAReg-Write(S157,S119)
	S159= CtrlMux24.1=1                                         Premise(F16810)
	S160= CtrlMux24.2=0                                         Premise(F16811)
	S161= CtrlMux24.3=0                                         Premise(F16812)
	S162= CtrlMux24.4=0                                         Premise(F16813)
	S163= Mux24.Out=Compare0(a+(-1)+ca)                         Mux(S153,S159,S160,S161,S162)
	S164= DataCmb.A=Compare0(a+(-1)+ca)                         Path(S163,S109)
	S165= CtrlMux25.1=0                                         Premise(F16814)
	S166= CtrlMux25.2=1                                         Premise(F16815)
	S167= Mux25.Out=so                                          Mux(S112,S165,S166)
	S168= DataCmb.B=so                                          Path(S167,S110)
	S169= DataCmb.Out={Compare0(a+(-1)+ca),so}                  DataCmb(S164,S168)
	S170= Mux32.1={Compare0(a+(-1)+ca),so}                      Path(S169,S113)
	S171= CtrlMux32.1=1                                         Premise(F16823)
	S172= Mux32.Out={Compare0(a+(-1)+ca),so}                    Mux(S170,S171)
	S173= DR4bit.In={Compare0(a+(-1)+ca),so}                    Path(S172,S114)
	S174= [DR4bit]={Compare0(a+(-1)+ca),so}                     DR4bit-Write(S173,S120)

MEM	S175= CtrlPC=0                                              Premise(F22371)
	S176= CtrlPCInc=0                                           Premise(F22372)
	S177= PC[NIA]=addr+4                                        PC-Hold(S117,S175,S176)
	S178= CtrlALUOut=0                                          Premise(F22381)
	S179= [ALUOut]=a+(-1)+ca                                    ALUOut-Hold(S151,S178)
	S180= CtrlCAReg=0                                           Premise(F22383)
	S181= [CAReg]=Carry(a+(-1)+ca)                              CAReg-Hold(S158,S180)
	S182= CtrlDR4bit=0                                          Premise(F22387)
	S183= [DR4bit]={Compare0(a+(-1)+ca),so}                     DR4bit-Hold(S174,S182)
	S184= CtrlIR=0                                              Premise(F22388)
	S185= [IR]={31,rD,rA,0,469}                                 IR-Hold(S122,S184)

WB	S186= ALUOut.Out=a+(-1)+ca                                  ALUOut-Out(S179)
	S187= CAReg.Out=Carry(a+(-1)+ca)                            CAReg-Out(S181)
	S188= DR4bit.Out={Compare0(a+(-1)+ca),so}                   DR4bit-Out(S183)
	S189= IR.Out6_10=rD                                         IR-Out(S185)
	S190= DR4bit.Out=>Mux15.1                                   Premise(F24152)
	S191= Mux15.1={Compare0(a+(-1)+ca),so}                      Path(S188,S190)
	S192= Mux15.Out=>CRRegs.CR0In                               Premise(F24153)
	S193= ALUOut.Out=>Mux38.1                                   Premise(F25922)
	S194= Mux38.1=a+(-1)+ca                                     Path(S186,S193)
	S195= Mux38.Out=>GPRegs.WData                               Premise(F25923)
	S196= Mux39.Out=>GPRegs.WReg                                Premise(F26167)
	S197= IR.Out6_10=>Mux39.2                                   Premise(F26184)
	S198= Mux39.2=rD                                            Path(S189,S197)
	S199= CAReg.Out=>Mux62.1                                    Premise(F27814)
	S200= Mux62.1=Carry(a+(-1)+ca)                              Path(S187,S199)
	S201= Mux62.Out=>XER.CAIn                                   Premise(F27815)
	S202= CtrlPC=0                                              Premise(F27991)
	S203= CtrlPCInc=0                                           Premise(F27992)
	S204= PC[NIA]=addr+4                                        PC-Hold(S177,S202,S203)
	S205= CtrlGPRegs=1                                          Premise(F27994)
	S206= CtrlXERCA=1                                           Premise(F27997)
	S207= CtrlCRRegsCR0=1                                       Premise(F27999)
	S208= CtrlMux15.1=1                                         Premise(F28039)
	S209= Mux15.Out={Compare0(a+(-1)+ca),so}                    Mux(S191,S208)
	S210= CRRegs.CR0In={Compare0(a+(-1)+ca),so}                 Path(S209,S192)
	S211= CRRegs[CR0]={Compare0(a+(-1)+ca),so}                  CRRegs-CR0-Write(S210,S207)
	S212= CtrlMux38.1=1                                         Premise(F28070)
	S213= CtrlMux38.2=0                                         Premise(F28071)
	S214= CtrlMux38.3=0                                         Premise(F28072)
	S215= Mux38.Out=a+(-1)+ca                                   Mux(S194,S212,S213,S214)
	S216= GPRegs.WData=a+(-1)+ca                                Path(S215,S195)
	S217= CtrlMux39.1=0                                         Premise(F28073)
	S218= CtrlMux39.2=1                                         Premise(F28074)
	S219= Mux39.Out=rD                                          Mux(S198,S217,S218)
	S220= GPRegs.WReg=rD                                        Path(S219,S196)
	S221= GPRegs[rD]=a+(-1)+ca                                  GPRegs-Write(S220,S216,S205)
	S222= CtrlMux62.1=1                                         Premise(F28103)
	S223= Mux62.Out=Carry(a+(-1)+ca)                            Mux(S200,S222)
	S224= XER.CAIn=Carry(a+(-1)+ca)                             Path(S223,S201)
	S225= XER[CA]=Carry(a+(-1)+ca)                              XER-CA-Write(S224,S206)

WB/	S204= PC[NIA]=addr+4                                        PC-Hold(S177,S202,S203)
	S211= CRRegs[CR0]={Compare0(a+(-1)+ca),so}                  CRRegs-CR0-Write(S210,S207)
	S221= GPRegs[rD]=a+(-1)+ca                                  GPRegs-Write(S220,S216,S205)
	S225= XER[CA]=Carry(a+(-1)+ca)                              XER-CA-Write(S224,S206)

