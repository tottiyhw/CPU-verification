
------------------------------------- Proof -------------------------------------

/IF	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[NIA]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rD,rA,0,208}                       Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)

IF	S4= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S5= PC.NIA=addr                                             PC-Out(S1)
	S6= PC.NIA=>Mux40.1                                         Premise(F3928)
	S7= Mux40.1=addr                                            Path(S5,S6)
	S8= Mux40.Out=>IMem.Addr                                    Premise(F3929)
	S9= PIDReg.Out=>Mux41.1                                     Premise(F4212)
	S10= Mux41.1=pid                                            Path(S4,S9)
	S11= Mux41.Out=>IMem.PID                                    Premise(F4213)
	S12= IMem.RData=>Mux44.1                                    Premise(F4544)
	S13= Mux44.Out=>IR.In                                       Premise(F4545)
	S14= CtrlPC=0                                               Premise(F5509)
	S15= CtrlPCInc=1                                            Premise(F5510)
	S16= PC[NIA]=addr+4                                         PC-Write(S1,S14,S15)
	S17= CtrlGPRegs=0                                           Premise(F5512)
	S18= GPRegs[rA]=a                                           GPRegs-Hold(S3,S17)
	S19= CtrlIR=1                                               Premise(F5523)
	S20= CtrlMux40.1=1                                          Premise(F5593)
	S21= Mux40.Out=addr                                         Mux(S7,S20)
	S22= IMem.Addr=addr                                         Path(S21,S8)
	S23= CtrlMux41.1=1                                          Premise(F5594)
	S24= Mux41.Out=pid                                          Mux(S10,S23)
	S25= IMem.PID=pid                                           Path(S24,S11)
	S26= IMem.RData={31,rD,rA,0,208}                            IMem-Read(S2,S25,S22)
	S27= Mux44.1={31,rD,rA,0,208}                               Path(S26,S12)
	S28= CtrlMux44.1=1                                          Premise(F5597)
	S29= Mux44.Out={31,rD,rA,0,208}                             Mux(S27,S28)
	S30= IR.In={31,rD,rA,0,208}                                 Path(S29,S13)
	S31= [IR]={31,rD,rA,0,208}                                  IR-Write(S30,S19)

ID	S32= IR.Out11_15=rA                                         IR-Out(S31)
	S33= Mux1.Out=>A.In                                         Premise(F5625)
	S34= GPRegs.RData1=>Mux1.3                                  Premise(F5678)
	S35= IR.Out11_15=>Mux33.1                                   Premise(F8574)
	S36= Mux33.1=rA                                             Path(S32,S35)
	S37= Mux33.Out=>GPRegs.RReg1                                Premise(F8575)
	S38= CtrlPC=0                                               Premise(F11129)
	S39= CtrlPCInc=0                                            Premise(F11130)
	S40= PC[NIA]=addr+4                                         PC-Hold(S16,S38,S39)
	S41= CtrlA=1                                                Premise(F11133)
	S42= CtrlIR=0                                               Premise(F11143)
	S43= [IR]={31,rD,rA,0,208}                                  IR-Hold(S31,S42)
	S44= CtrlMux1.1=0                                           Premise(F11148)
	S45= CtrlMux1.2=0                                           Premise(F11149)
	S46= CtrlMux1.3=1                                           Premise(F11150)
	S47= CtrlMux1.4=0                                           Premise(F11151)
	S48= CtrlMux33.1=1                                          Premise(F11202)
	S49= Mux33.Out=rA                                           Mux(S36,S48)
	S50= GPRegs.RReg1=rA                                        Path(S49,S37)
	S51= GPRegs.RData1=a                                        GPRegs-Read(S18,S50)
	S52= Mux1.3=a                                               Path(S51,S34)
	S53= Mux1.Out=a                                             Mux(S52,S44,S45,S46,S47)
	S54= A.In=a                                                 Path(S53,S33)
	S55= [A]=a                                                  A-Write(S54,S41)

EX	S56= IR.Out0_5=31                                           IR-Out(S43)
	S57= IR.Out21_31=208                                        IR-Out(S43)
	S58= A.Out=a                                                A-Out(S55)
	S59= A.Out=>Mux5.1                                          Premise(F11612)
	S60= Mux5.1=a                                               Path(S58,S59)
	S61= Mux5.Out=>ALU.A                                        Premise(F11613)
	S62= CU.Func=>Mux8.1                                        Premise(F12094)
	S63= Mux8.Out=>ALU.Func                                     Premise(F12095)
	S64= ALU.Out=>Mux9.1                                        Premise(F12316)
	S65= Mux9.Out=>ALUOut.In                                    Premise(F12317)
	S66= IR.Out21_31=>Mux21.1                                   Premise(F13088)
	S67= Mux21.1=208                                            Path(S57,S66)
	S68= Mux21.Out=>CU.IRFunc                                   Premise(F13089)
	S69= IR.Out0_5=>Mux23.1                                     Premise(F13316)
	S70= Mux23.1=31                                             Path(S56,S69)
	S71= Mux23.Out=>CU.Op                                       Premise(F13317)
	S72= CtrlPC=0                                               Premise(F16749)
	S73= CtrlPCInc=0                                            Premise(F16750)
	S74= PC[NIA]=addr+4                                         PC-Hold(S40,S72,S73)
	S75= CtrlALUOut=1                                           Premise(F16754)
	S76= CtrlIR=0                                               Premise(F16763)
	S77= [IR]={31,rD,rA,0,208}                                  IR-Hold(S43,S76)
	S78= CtrlMux5.1=1                                           Premise(F16775)
	S79= Mux5.Out=a                                             Mux(S60,S78)
	S80= ALU.A=a                                                Path(S79,S61)
	S81= CtrlMux8.1=1                                           Premise(F16781)
	S82= CtrlMux9.1=1                                           Premise(F16782)
	S83= CtrlMux9.2=0                                           Premise(F16783)
	S84= CtrlMux21.1=1                                          Premise(F16805)
	S85= Mux21.Out=208                                          Mux(S67,S84)
	S86= CU.IRFunc=208                                          Path(S85,S68)
	S87= CtrlMux23.1=1                                          Premise(F16807)
	S88= Mux23.Out=31                                           Mux(S70,S87)
	S89= CU.Op=31                                               Path(S88,S71)
	S90= CU.Func=alu_neg                                        CU(S89,S86)
	S91= Mux8.1=alu_neg                                         Path(S90,S62)
	S92= Mux8.Out=alu_neg                                       Mux(S91,S81)
	S93= ALU.Func=alu_neg                                       Path(S92,S63)
	S94= ALU.Out=(-a)                                           ALU(S80,S93)
	S95= Mux9.1=(-a)                                            Path(S94,S64)
	S96= Mux9.Out=(-a)                                          Mux(S95,S82,S83)
	S97= ALUOut.In=(-a)                                         Path(S96,S65)
	S98= [ALUOut]=(-a)                                          ALUOut-Write(S97,S75)

MEM	S99= CtrlPC=0                                               Premise(F22369)
	S100= CtrlPCInc=0                                           Premise(F22370)
	S101= PC[NIA]=addr+4                                        PC-Hold(S74,S99,S100)
	S102= CtrlALUOut=0                                          Premise(F22374)
	S103= [ALUOut]=(-a)                                         ALUOut-Hold(S98,S102)
	S104= CtrlIR=0                                              Premise(F22383)
	S105= [IR]={31,rD,rA,0,208}                                 IR-Hold(S77,S104)

WB	S106= ALUOut.Out=(-a)                                       ALUOut-Out(S103)
	S107= IR.Out6_10=rD                                         IR-Out(S105)
	S108= ALUOut.Out=>Mux38.1                                   Premise(F25920)
	S109= Mux38.1=(-a)                                          Path(S106,S108)
	S110= Mux38.Out=>GPRegs.WData                               Premise(F25921)
	S111= Mux39.Out=>GPRegs.WReg                                Premise(F26165)
	S112= IR.Out6_10=>Mux39.2                                   Premise(F26182)
	S113= Mux39.2=rD                                            Path(S107,S112)
	S114= CtrlPC=0                                              Premise(F27989)
	S115= CtrlPCInc=0                                           Premise(F27990)
	S116= PC[NIA]=addr+4                                        PC-Hold(S101,S114,S115)
	S117= CtrlGPRegs=1                                          Premise(F27992)
	S118= CtrlMux38.1=1                                         Premise(F28068)
	S119= CtrlMux38.2=0                                         Premise(F28069)
	S120= CtrlMux38.3=0                                         Premise(F28070)
	S121= Mux38.Out=(-a)                                        Mux(S109,S118,S119,S120)
	S122= GPRegs.WData=(-a)                                     Path(S121,S110)
	S123= CtrlMux39.1=0                                         Premise(F28071)
	S124= CtrlMux39.2=1                                         Premise(F28072)
	S125= Mux39.Out=rD                                          Mux(S113,S123,S124)
	S126= GPRegs.WReg=rD                                        Path(S125,S111)
	S127= GPRegs[rD]=(-a)                                       GPRegs-Write(S126,S122,S117)

WB/	S116= PC[NIA]=addr+4                                        PC-Hold(S101,S114,S115)
	S127= GPRegs[rD]=(-a)                                       GPRegs-Write(S126,S122,S117)

