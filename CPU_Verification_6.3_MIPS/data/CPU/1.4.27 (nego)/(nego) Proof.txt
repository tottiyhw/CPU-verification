
------------------------------------- Proof -------------------------------------

/IF	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[NIA]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rD,rA,0,1232}                      Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= XER[SO]=so                                              Premise(F4)

IF	S5= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S6= PC.NIA=addr                                             PC-Out(S1)
	S7= PC.NIA=>Mux40.1                                         Premise(F3929)
	S8= Mux40.1=addr                                            Path(S6,S7)
	S9= Mux40.Out=>IMem.Addr                                    Premise(F3930)
	S10= PIDReg.Out=>Mux41.1                                    Premise(F4213)
	S11= Mux41.1=pid                                            Path(S5,S10)
	S12= Mux41.Out=>IMem.PID                                    Premise(F4214)
	S13= IMem.RData=>Mux44.1                                    Premise(F4545)
	S14= Mux44.Out=>IR.In                                       Premise(F4546)
	S15= CtrlPC=0                                               Premise(F5510)
	S16= CtrlPCInc=1                                            Premise(F5511)
	S17= PC[NIA]=addr+4                                         PC-Write(S1,S15,S16)
	S18= CtrlGPRegs=0                                           Premise(F5513)
	S19= GPRegs[rA]=a                                           GPRegs-Hold(S3,S18)
	S20= CtrlXERSO=0                                            Premise(F5514)
	S21= XER[SO]=so                                             XER-SO-Hold(S4,S20)
	S22= CtrlIR=1                                               Premise(F5527)
	S23= CtrlMux40.1=1                                          Premise(F5594)
	S24= Mux40.Out=addr                                         Mux(S8,S23)
	S25= IMem.Addr=addr                                         Path(S24,S9)
	S26= CtrlMux41.1=1                                          Premise(F5595)
	S27= Mux41.Out=pid                                          Mux(S11,S26)
	S28= IMem.PID=pid                                           Path(S27,S12)
	S29= IMem.RData={31,rD,rA,0,1232}                           IMem-Read(S2,S28,S25)
	S30= Mux44.1={31,rD,rA,0,1232}                              Path(S29,S13)
	S31= CtrlMux44.1=1                                          Premise(F5598)
	S32= Mux44.Out={31,rD,rA,0,1232}                            Mux(S30,S31)
	S33= IR.In={31,rD,rA,0,1232}                                Path(S32,S14)
	S34= [IR]={31,rD,rA,0,1232}                                 IR-Write(S33,S22)

ID	S35= IR.Out11_15=rA                                         IR-Out(S34)
	S36= Mux1.Out=>A.In                                         Premise(F5626)
	S37= GPRegs.RData1=>Mux1.3                                  Premise(F5679)
	S38= IR.Out11_15=>Mux33.1                                   Premise(F8575)
	S39= Mux33.1=rA                                             Path(S35,S38)
	S40= Mux33.Out=>GPRegs.RReg1                                Premise(F8576)
	S41= CtrlPC=0                                               Premise(F11130)
	S42= CtrlPCInc=0                                            Premise(F11131)
	S43= PC[NIA]=addr+4                                         PC-Hold(S17,S41,S42)
	S44= CtrlXERSO=0                                            Premise(F11134)
	S45= XER[SO]=so                                             XER-SO-Hold(S21,S44)
	S46= CtrlA=1                                                Premise(F11137)
	S47= CtrlIR=0                                               Premise(F11147)
	S48= [IR]={31,rD,rA,0,1232}                                 IR-Hold(S34,S47)
	S49= CtrlMux1.1=0                                           Premise(F11152)
	S50= CtrlMux1.2=0                                           Premise(F11153)
	S51= CtrlMux1.3=1                                           Premise(F11154)
	S52= CtrlMux1.4=0                                           Premise(F11155)
	S53= CtrlMux33.1=1                                          Premise(F11203)
	S54= Mux33.Out=rA                                           Mux(S39,S53)
	S55= GPRegs.RReg1=rA                                        Path(S54,S40)
	S56= GPRegs.RData1=a                                        GPRegs-Read(S19,S55)
	S57= Mux1.3=a                                               Path(S56,S37)
	S58= Mux1.Out=a                                             Mux(S57,S49,S50,S51,S52)
	S59= A.In=a                                                 Path(S58,S36)
	S60= [A]=a                                                  A-Write(S59,S46)

EX	S61= XER.SOOut=so                                           XER-SO-Out(S45)
	S62= IR.Out0_5=31                                           IR-Out(S48)
	S63= IR.Out21_31=1232                                       IR-Out(S48)
	S64= A.Out=a                                                A-Out(S60)
	S65= A.Out=>Mux5.1                                          Premise(F11613)
	S66= Mux5.1=a                                               Path(S64,S65)
	S67= Mux5.Out=>ALU.A                                        Premise(F11614)
	S68= CU.Func=>Mux8.1                                        Premise(F12095)
	S69= Mux8.Out=>ALU.Func                                     Premise(F12096)
	S70= ALU.Out=>Mux9.1                                        Premise(F12317)
	S71= Mux9.Out=>ALUOut.In                                    Premise(F12318)
	S72= IR.Out21_31=>Mux21.1                                   Premise(F13089)
	S73= Mux21.1=1232                                           Path(S63,S72)
	S74= Mux21.Out=>CU.IRFunc                                   Premise(F13090)
	S75= IR.Out0_5=>Mux23.1                                     Premise(F13317)
	S76= Mux23.1=31                                             Path(S62,S75)
	S77= Mux23.Out=>CU.Op                                       Premise(F13318)
	S78= ORGate.Out=>Mux31.1                                    Premise(F14033)
	S79= Mux31.Out=>DR1bit.In                                   Premise(F14034)
	S80= XER.SOOut=>Mux53.1                                     Premise(F16345)
	S81= Mux53.1=so                                             Path(S61,S80)
	S82= Mux53.Out=>ORGate.A                                    Premise(F16346)
	S83= ALU.OV=>Mux54.1                                        Premise(F16401)
	S84= Mux54.Out=>ORGate.B                                    Premise(F16402)
	S85= ALU.OV=>Mux55.1                                        Premise(F16457)
	S86= Mux55.Out=>OVReg.In                                    Premise(F16458)
	S87= CtrlPC=0                                               Premise(F16750)
	S88= CtrlPCInc=0                                            Premise(F16751)
	S89= PC[NIA]=addr+4                                         PC-Hold(S43,S87,S88)
	S90= CtrlALUOut=1                                           Premise(F16758)
	S91= CtrlDR1bit=1                                           Premise(F16765)
	S92= CtrlIR=0                                               Premise(F16767)
	S93= [IR]={31,rD,rA,0,1232}                                 IR-Hold(S48,S92)
	S94= CtrlOVReg=1                                            Premise(F16770)
	S95= CtrlMux5.1=1                                           Premise(F16779)
	S96= Mux5.Out=a                                             Mux(S66,S95)
	S97= ALU.A=a                                                Path(S96,S67)
	S98= CtrlMux8.1=1                                           Premise(F16782)
	S99= CtrlMux9.1=1                                           Premise(F16783)
	S100= CtrlMux9.2=0                                          Premise(F16784)
	S101= CtrlMux21.1=1                                         Premise(F16806)
	S102= Mux21.Out=1232                                        Mux(S73,S101)
	S103= CU.IRFunc=1232                                        Path(S102,S74)
	S104= CtrlMux23.1=1                                         Premise(F16808)
	S105= Mux23.Out=31                                          Mux(S76,S104)
	S106= CU.Op=31                                              Path(S105,S77)
	S107= CU.Func=alu_neg                                       CU(S106,S103)
	S108= Mux8.1=alu_neg                                        Path(S107,S68)
	S109= Mux8.Out=alu_neg                                      Mux(S108,S98)
	S110= ALU.Func=alu_neg                                      Path(S109,S69)
	S111= ALU.Out=(-a)                                          ALU(S97,S110)
	S112= Mux9.1=(-a)                                           Path(S111,S70)
	S113= Mux9.Out=(-a)                                         Mux(S112,S99,S100)
	S114= ALUOut.In=(-a)                                        Path(S113,S71)
	S115= [ALUOut]=(-a)                                         ALUOut-Write(S114,S90)
	S116= ALU.OV=OverFlow((-a))                                 ALU(S97,S110)
	S117= Mux54.1=OverFlow((-a))                                Path(S116,S83)
	S118= Mux55.1=OverFlow((-a))                                Path(S116,S85)
	S119= CtrlMux31.1=1                                         Premise(F16821)
	S120= CtrlMux53.1=1                                         Premise(F16851)
	S121= Mux53.Out=so                                          Mux(S81,S120)
	S122= ORGate.A=so                                           Path(S121,S82)
	S123= CtrlMux54.1=1                                         Premise(F16852)
	S124= CtrlMux54.2=0                                         Premise(F16853)
	S125= Mux54.Out=OverFlow((-a))                              Mux(S117,S123,S124)
	S126= ORGate.B=OverFlow((-a))                               Path(S125,S84)
	S127= ORGate.Out=so|OverFlow((-a))                          ORGate(S122,S126)
	S128= Mux31.1=so|OverFlow((-a))                             Path(S127,S78)
	S129= Mux31.Out=so|OverFlow((-a))                           Mux(S128,S119)
	S130= DR1bit.In=so|OverFlow((-a))                           Path(S129,S79)
	S131= [DR1bit]=so|OverFlow((-a))                            DR1bit-Write(S130,S91)
	S132= CtrlMux55.1=1                                         Premise(F16854)
	S133= Mux55.Out=OverFlow((-a))                              Mux(S118,S132)
	S134= OVReg.In=OverFlow((-a))                               Path(S133,S86)
	S135= [OVReg]=OverFlow((-a))                                OVReg-Write(S134,S94)

MEM	S136= CtrlPC=0                                              Premise(F22370)
	S137= CtrlPCInc=0                                           Premise(F22371)
	S138= PC[NIA]=addr+4                                        PC-Hold(S89,S136,S137)
	S139= CtrlALUOut=0                                          Premise(F22378)
	S140= [ALUOut]=(-a)                                         ALUOut-Hold(S115,S139)
	S141= CtrlDR1bit=0                                          Premise(F22385)
	S142= [DR1bit]=so|OverFlow((-a))                            DR1bit-Hold(S131,S141)
	S143= CtrlIR=0                                              Premise(F22387)
	S144= [IR]={31,rD,rA,0,1232}                                IR-Hold(S93,S143)
	S145= CtrlOVReg=0                                           Premise(F22390)
	S146= [OVReg]=OverFlow((-a))                                OVReg-Hold(S135,S145)

WB	S147= ALUOut.Out=(-a)                                       ALUOut-Out(S140)
	S148= DR1bit.Out=so|OverFlow((-a))                          DR1bit-Out(S142)
	S149= IR.Out6_10=rD                                         IR-Out(S144)
	S150= OVReg.Out=OverFlow((-a))                              OVReg-Out(S146)
	S151= ALUOut.Out=>Mux38.1                                   Premise(F25921)
	S152= Mux38.1=(-a)                                          Path(S147,S151)
	S153= Mux38.Out=>GPRegs.WData                               Premise(F25922)
	S154= Mux39.Out=>GPRegs.WReg                                Premise(F26166)
	S155= IR.Out6_10=>Mux39.2                                   Premise(F26183)
	S156= Mux39.2=rD                                            Path(S149,S155)
	S157= OVReg.Out=>Mux63.1                                    Premise(F27889)
	S158= Mux63.1=OverFlow((-a))                                Path(S150,S157)
	S159= Mux63.Out=>XER.OVIn                                   Premise(F27890)
	S160= DR1bit.Out=>Mux64.1                                   Premise(F27933)
	S161= Mux64.1=so|OverFlow((-a))                             Path(S148,S160)
	S162= Mux64.Out=>XER.SOIn                                   Premise(F27934)
	S163= CtrlPC=0                                              Premise(F27990)
	S164= CtrlPCInc=0                                           Premise(F27991)
	S165= PC[NIA]=addr+4                                        PC-Hold(S138,S163,S164)
	S166= CtrlGPRegs=1                                          Premise(F27993)
	S167= CtrlXERSO=1                                           Premise(F27994)
	S168= CtrlXEROV=1                                           Premise(F27995)
	S169= CtrlMux38.1=1                                         Premise(F28069)
	S170= CtrlMux38.2=0                                         Premise(F28070)
	S171= CtrlMux38.3=0                                         Premise(F28071)
	S172= Mux38.Out=(-a)                                        Mux(S152,S169,S170,S171)
	S173= GPRegs.WData=(-a)                                     Path(S172,S153)
	S174= CtrlMux39.1=0                                         Premise(F28072)
	S175= CtrlMux39.2=1                                         Premise(F28073)
	S176= Mux39.Out=rD                                          Mux(S156,S174,S175)
	S177= GPRegs.WReg=rD                                        Path(S176,S154)
	S178= GPRegs[rD]=(-a)                                       GPRegs-Write(S177,S173,S166)
	S179= CtrlMux63.1=1                                         Premise(F28103)
	S180= Mux63.Out=OverFlow((-a))                              Mux(S158,S179)
	S181= XER.OVIn=OverFlow((-a))                               Path(S180,S159)
	S182= XER[OV]=OverFlow((-a))                                XER-OV-Write(S181,S168)
	S183= CtrlMux64.1=1                                         Premise(F28104)
	S184= Mux64.Out=so|OverFlow((-a))                           Mux(S161,S183)
	S185= XER.SOIn=so|OverFlow((-a))                            Path(S184,S162)
	S186= XER[SO]=so|OverFlow((-a))                             XER-SO-Write(S185,S167)

WB/	S165= PC[NIA]=addr+4                                        PC-Hold(S138,S163,S164)
	S178= GPRegs[rD]=(-a)                                       GPRegs-Write(S177,S173,S166)
	S182= XER[OV]=OverFlow((-a))                                XER-OV-Write(S181,S168)
	S186= XER[SO]=so|OverFlow((-a))                             XER-SO-Write(S185,S167)

