
------------------------------------- Proof -------------------------------------

/IF	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[NIA]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rD,rA,0,1233}                      Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= XER[SO]=so                                              Premise(F4)

IF	S5= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S6= PC.NIA=addr                                             PC-Out(S1)
	S7= PC.NIA=>Mux40.1                                         Premise(F3929)
	S8= Mux40.1=addr                                            Path(S6,S7)
	S9= Mux40.Out=>IMem.Addr                                    Premise(F3930)
	S10= PIDReg.Out=>Mux41.1                                    Premise(F4213)
	S11= Mux41.1=pid                                            Path(S5,S10)
	S12= Mux41.Out=>IMem.PID                                    Premise(F4214)
	S13= IMem.RData=>Mux44.1                                    Premise(F4545)
	S14= Mux44.Out=>IR.In                                       Premise(F4546)
	S15= CtrlPC=0                                               Premise(F5510)
	S16= CtrlPCInc=1                                            Premise(F5511)
	S17= PC[NIA]=addr+4                                         PC-Write(S1,S15,S16)
	S18= CtrlGPRegs=0                                           Premise(F5513)
	S19= GPRegs[rA]=a                                           GPRegs-Hold(S3,S18)
	S20= CtrlXERSO=0                                            Premise(F5514)
	S21= XER[SO]=so                                             XER-SO-Hold(S4,S20)
	S22= CtrlIR=1                                               Premise(F5527)
	S23= CtrlMux40.1=1                                          Premise(F5594)
	S24= Mux40.Out=addr                                         Mux(S8,S23)
	S25= IMem.Addr=addr                                         Path(S24,S9)
	S26= CtrlMux41.1=1                                          Premise(F5595)
	S27= Mux41.Out=pid                                          Mux(S11,S26)
	S28= IMem.PID=pid                                           Path(S27,S12)
	S29= IMem.RData={31,rD,rA,0,1233}                           IMem-Read(S2,S28,S25)
	S30= Mux44.1={31,rD,rA,0,1233}                              Path(S29,S13)
	S31= CtrlMux44.1=1                                          Premise(F5598)
	S32= Mux44.Out={31,rD,rA,0,1233}                            Mux(S30,S31)
	S33= IR.In={31,rD,rA,0,1233}                                Path(S32,S14)
	S34= [IR]={31,rD,rA,0,1233}                                 IR-Write(S33,S22)

ID	S35= IR.Out11_15=rA                                         IR-Out(S34)
	S36= Mux1.Out=>A.In                                         Premise(F5626)
	S37= GPRegs.RData1=>Mux1.3                                  Premise(F5679)
	S38= IR.Out11_15=>Mux33.1                                   Premise(F8575)
	S39= Mux33.1=rA                                             Path(S35,S38)
	S40= Mux33.Out=>GPRegs.RReg1                                Premise(F8576)
	S41= CtrlPC=0                                               Premise(F11130)
	S42= CtrlPCInc=0                                            Premise(F11131)
	S43= PC[NIA]=addr+4                                         PC-Hold(S17,S41,S42)
	S44= CtrlXERSO=0                                            Premise(F11134)
	S45= XER[SO]=so                                             XER-SO-Hold(S21,S44)
	S46= CtrlA=1                                                Premise(F11139)
	S47= CtrlIR=0                                               Premise(F11147)
	S48= [IR]={31,rD,rA,0,1233}                                 IR-Hold(S34,S47)
	S49= CtrlMux1.1=0                                           Premise(F11152)
	S50= CtrlMux1.2=0                                           Premise(F11153)
	S51= CtrlMux1.3=1                                           Premise(F11154)
	S52= CtrlMux1.4=0                                           Premise(F11155)
	S53= CtrlMux33.1=1                                          Premise(F11203)
	S54= Mux33.Out=rA                                           Mux(S39,S53)
	S55= GPRegs.RReg1=rA                                        Path(S54,S40)
	S56= GPRegs.RData1=a                                        GPRegs-Read(S19,S55)
	S57= Mux1.3=a                                               Path(S56,S37)
	S58= Mux1.Out=a                                             Mux(S57,S49,S50,S51,S52)
	S59= A.In=a                                                 Path(S58,S36)
	S60= [A]=a                                                  A-Write(S59,S46)

EX	S61= XER.SOOut=so                                           XER-SO-Out(S45)
	S62= IR.Out0_5=31                                           IR-Out(S48)
	S63= IR.Out21_31=1233                                       IR-Out(S48)
	S64= A.Out=a                                                A-Out(S60)
	S65= A.Out=>Mux5.1                                          Premise(F11613)
	S66= Mux5.1=a                                               Path(S64,S65)
	S67= Mux5.Out=>ALU.A                                        Premise(F11614)
	S68= CU.Func=>Mux8.1                                        Premise(F12095)
	S69= Mux8.Out=>ALU.Func                                     Premise(F12096)
	S70= ALU.Out=>Mux9.1                                        Premise(F12317)
	S71= Mux9.Out=>ALUOut.In                                    Premise(F12318)
	S72= IR.Out21_31=>Mux21.1                                   Premise(F13089)
	S73= Mux21.1=1233                                           Path(S63,S72)
	S74= Mux21.Out=>CU.IRFunc                                   Premise(F13090)
	S75= IR.Out0_5=>Mux23.1                                     Premise(F13317)
	S76= Mux23.1=31                                             Path(S62,S75)
	S77= Mux23.Out=>CU.Op                                       Premise(F13318)
	S78= ALU.CMP=>Mux24.1                                       Premise(F13601)
	S79= Mux24.Out=>DataCmb.A                                   Premise(F13602)
	S80= ORGate.Out=>Mux25.1                                    Premise(F13707)
	S81= Mux25.Out=>DataCmb.B                                   Premise(F13708)
	S82= ORGate.Out=>Mux31.1                                    Premise(F14033)
	S83= Mux31.Out=>DR1bit.In                                   Premise(F14034)
	S84= DataCmb.Out=>Mux32.1                                   Premise(F14089)
	S85= Mux32.Out=>DR4bit.In                                   Premise(F14090)
	S86= XER.SOOut=>Mux53.1                                     Premise(F16345)
	S87= Mux53.1=so                                             Path(S61,S86)
	S88= Mux53.Out=>ORGate.A                                    Premise(F16346)
	S89= ALU.OV=>Mux54.1                                        Premise(F16401)
	S90= Mux54.Out=>ORGate.B                                    Premise(F16402)
	S91= ALU.OV=>Mux55.1                                        Premise(F16457)
	S92= Mux55.Out=>OVReg.In                                    Premise(F16458)
	S93= CtrlPC=0                                               Premise(F16750)
	S94= CtrlPCInc=0                                            Premise(F16751)
	S95= PC[NIA]=addr+4                                         PC-Hold(S43,S93,S94)
	S96= CtrlALUOut=1                                           Premise(F16760)
	S97= CtrlDR1bit=1                                           Premise(F16765)
	S98= CtrlDR4bit=1                                           Premise(F16766)
	S99= CtrlIR=0                                               Premise(F16767)
	S100= [IR]={31,rD,rA,0,1233}                                IR-Hold(S48,S99)
	S101= CtrlOVReg=1                                           Premise(F16770)
	S102= CtrlMux5.1=1                                          Premise(F16779)
	S103= Mux5.Out=a                                            Mux(S66,S102)
	S104= ALU.A=a                                               Path(S103,S67)
	S105= CtrlMux8.1=1                                          Premise(F16782)
	S106= CtrlMux9.1=1                                          Premise(F16783)
	S107= CtrlMux9.2=0                                          Premise(F16784)
	S108= CtrlMux21.1=1                                         Premise(F16806)
	S109= Mux21.Out=1233                                        Mux(S73,S108)
	S110= CU.IRFunc=1233                                        Path(S109,S74)
	S111= CtrlMux23.1=1                                         Premise(F16808)
	S112= Mux23.Out=31                                          Mux(S76,S111)
	S113= CU.Op=31                                              Path(S112,S77)
	S114= CU.Func=alu_neg                                       CU(S113,S110)
	S115= Mux8.1=alu_neg                                        Path(S114,S68)
	S116= Mux8.Out=alu_neg                                      Mux(S115,S105)
	S117= ALU.Func=alu_neg                                      Path(S116,S69)
	S118= ALU.Out=(-a)                                          ALU(S104,S117)
	S119= Mux9.1=(-a)                                           Path(S118,S70)
	S120= Mux9.Out=(-a)                                         Mux(S119,S106,S107)
	S121= ALUOut.In=(-a)                                        Path(S120,S71)
	S122= [ALUOut]=(-a)                                         ALUOut-Write(S121,S96)
	S123= ALU.CMP=Compare0((-a))                                ALU(S104,S117)
	S124= Mux24.1=Compare0((-a))                                Path(S123,S78)
	S125= ALU.OV=OverFlow((-a))                                 ALU(S104,S117)
	S126= Mux54.1=OverFlow((-a))                                Path(S125,S89)
	S127= Mux55.1=OverFlow((-a))                                Path(S125,S91)
	S128= CtrlMux24.1=1                                         Premise(F16809)
	S129= CtrlMux24.2=0                                         Premise(F16810)
	S130= CtrlMux24.3=0                                         Premise(F16811)
	S131= CtrlMux24.4=0                                         Premise(F16812)
	S132= Mux24.Out=Compare0((-a))                              Mux(S124,S128,S129,S130,S131)
	S133= DataCmb.A=Compare0((-a))                              Path(S132,S79)
	S134= CtrlMux25.1=1                                         Premise(F16813)
	S135= CtrlMux25.2=0                                         Premise(F16814)
	S136= CtrlMux31.1=1                                         Premise(F16821)
	S137= CtrlMux32.1=1                                         Premise(F16822)
	S138= CtrlMux53.1=1                                         Premise(F16851)
	S139= Mux53.Out=so                                          Mux(S87,S138)
	S140= ORGate.A=so                                           Path(S139,S88)
	S141= CtrlMux54.1=1                                         Premise(F16852)
	S142= CtrlMux54.2=0                                         Premise(F16853)
	S143= Mux54.Out=OverFlow((-a))                              Mux(S126,S141,S142)
	S144= ORGate.B=OverFlow((-a))                               Path(S143,S90)
	S145= ORGate.Out=so|OverFlow((-a))                          ORGate(S140,S144)
	S146= Mux25.1=so|OverFlow((-a))                             Path(S145,S80)
	S147= Mux25.Out=so|OverFlow((-a))                           Mux(S146,S134,S135)
	S148= DataCmb.B=so|OverFlow((-a))                           Path(S147,S81)
	S149= DataCmb.Out={Compare0((-a)),so|OverFlow((-a))}        DataCmb(S133,S148)
	S150= Mux32.1={Compare0((-a)),so|OverFlow((-a))}            Path(S149,S84)
	S151= Mux32.Out={Compare0((-a)),so|OverFlow((-a))}          Mux(S150,S137)
	S152= DR4bit.In={Compare0((-a)),so|OverFlow((-a))}          Path(S151,S85)
	S153= [DR4bit]={Compare0((-a)),so|OverFlow((-a))}           DR4bit-Write(S152,S98)
	S154= Mux31.1=so|OverFlow((-a))                             Path(S145,S82)
	S155= Mux31.Out=so|OverFlow((-a))                           Mux(S154,S136)
	S156= DR1bit.In=so|OverFlow((-a))                           Path(S155,S83)
	S157= [DR1bit]=so|OverFlow((-a))                            DR1bit-Write(S156,S97)
	S158= CtrlMux55.1=1                                         Premise(F16854)
	S159= Mux55.Out=OverFlow((-a))                              Mux(S127,S158)
	S160= OVReg.In=OverFlow((-a))                               Path(S159,S92)
	S161= [OVReg]=OverFlow((-a))                                OVReg-Write(S160,S101)

MEM	S162= CtrlPC=0                                              Premise(F22370)
	S163= CtrlPCInc=0                                           Premise(F22371)
	S164= PC[NIA]=addr+4                                        PC-Hold(S95,S162,S163)
	S165= CtrlALUOut=0                                          Premise(F22380)
	S166= [ALUOut]=(-a)                                         ALUOut-Hold(S122,S165)
	S167= CtrlDR1bit=0                                          Premise(F22385)
	S168= [DR1bit]=so|OverFlow((-a))                            DR1bit-Hold(S157,S167)
	S169= CtrlDR4bit=0                                          Premise(F22386)
	S170= [DR4bit]={Compare0((-a)),so|OverFlow((-a))}           DR4bit-Hold(S153,S169)
	S171= CtrlIR=0                                              Premise(F22387)
	S172= [IR]={31,rD,rA,0,1233}                                IR-Hold(S100,S171)
	S173= CtrlOVReg=0                                           Premise(F22390)
	S174= [OVReg]=OverFlow((-a))                                OVReg-Hold(S161,S173)

WB	S175= ALUOut.Out=(-a)                                       ALUOut-Out(S166)
	S176= DR1bit.Out=so|OverFlow((-a))                          DR1bit-Out(S168)
	S177= DR4bit.Out={Compare0((-a)),so|OverFlow((-a))}         DR4bit-Out(S170)
	S178= IR.Out6_10=rD                                         IR-Out(S172)
	S179= OVReg.Out=OverFlow((-a))                              OVReg-Out(S174)
	S180= DR4bit.Out=>Mux15.1                                   Premise(F24151)
	S181= Mux15.1={Compare0((-a)),so|OverFlow((-a))}            Path(S177,S180)
	S182= Mux15.Out=>CRRegs.CR0In                               Premise(F24152)
	S183= ALUOut.Out=>Mux38.1                                   Premise(F25921)
	S184= Mux38.1=(-a)                                          Path(S175,S183)
	S185= Mux38.Out=>GPRegs.WData                               Premise(F25922)
	S186= Mux39.Out=>GPRegs.WReg                                Premise(F26166)
	S187= IR.Out6_10=>Mux39.2                                   Premise(F26183)
	S188= Mux39.2=rD                                            Path(S178,S187)
	S189= OVReg.Out=>Mux63.1                                    Premise(F27889)
	S190= Mux63.1=OverFlow((-a))                                Path(S179,S189)
	S191= Mux63.Out=>XER.OVIn                                   Premise(F27890)
	S192= DR1bit.Out=>Mux64.1                                   Premise(F27933)
	S193= Mux64.1=so|OverFlow((-a))                             Path(S176,S192)
	S194= Mux64.Out=>XER.SOIn                                   Premise(F27934)
	S195= CtrlPC=0                                              Premise(F27990)
	S196= CtrlPCInc=0                                           Premise(F27991)
	S197= PC[NIA]=addr+4                                        PC-Hold(S164,S195,S196)
	S198= CtrlGPRegs=1                                          Premise(F27993)
	S199= CtrlXERSO=1                                           Premise(F27994)
	S200= CtrlXEROV=1                                           Premise(F27995)
	S201= CtrlCRRegsCR0=1                                       Premise(F27998)
	S202= CtrlMux15.1=1                                         Premise(F28038)
	S203= Mux15.Out={Compare0((-a)),so|OverFlow((-a))}          Mux(S181,S202)
	S204= CRRegs.CR0In={Compare0((-a)),so|OverFlow((-a))}       Path(S203,S182)
	S205= CRRegs[CR0]={Compare0((-a)),so|OverFlow((-a))}        CRRegs-CR0-Write(S204,S201)
	S206= CtrlMux38.1=1                                         Premise(F28069)
	S207= CtrlMux38.2=0                                         Premise(F28070)
	S208= CtrlMux38.3=0                                         Premise(F28071)
	S209= Mux38.Out=(-a)                                        Mux(S184,S206,S207,S208)
	S210= GPRegs.WData=(-a)                                     Path(S209,S185)
	S211= CtrlMux39.1=0                                         Premise(F28072)
	S212= CtrlMux39.2=1                                         Premise(F28073)
	S213= Mux39.Out=rD                                          Mux(S188,S211,S212)
	S214= GPRegs.WReg=rD                                        Path(S213,S186)
	S215= GPRegs[rD]=(-a)                                       GPRegs-Write(S214,S210,S198)
	S216= CtrlMux63.1=1                                         Premise(F28103)
	S217= Mux63.Out=OverFlow((-a))                              Mux(S190,S216)
	S218= XER.OVIn=OverFlow((-a))                               Path(S217,S191)
	S219= XER[OV]=OverFlow((-a))                                XER-OV-Write(S218,S200)
	S220= CtrlMux64.1=1                                         Premise(F28104)
	S221= Mux64.Out=so|OverFlow((-a))                           Mux(S193,S220)
	S222= XER.SOIn=so|OverFlow((-a))                            Path(S221,S194)
	S223= XER[SO]=so|OverFlow((-a))                             XER-SO-Write(S222,S199)

WB/	S197= PC[NIA]=addr+4                                        PC-Hold(S164,S195,S196)
	S205= CRRegs[CR0]={Compare0((-a)),so|OverFlow((-a))}        CRRegs-CR0-Write(S204,S201)
	S215= GPRegs[rD]=(-a)                                       GPRegs-Write(S214,S210,S198)
	S219= XER[OV]=OverFlow((-a))                                XER-OV-Write(S218,S200)
	S223= XER[SO]=so|OverFlow((-a))                             XER-SO-Write(S222,S199)

