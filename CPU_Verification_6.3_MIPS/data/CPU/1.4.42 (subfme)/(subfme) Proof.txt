
------------------------------------- Proof -------------------------------------

/IF	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[NIA]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rD,rA,0,464}                       Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= XER[CA]=ca                                              Premise(F4)

IF	S5= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S6= PC.NIA=addr                                             PC-Out(S1)
	S7= PC.NIA=>Mux40.1                                         Premise(F3929)
	S8= Mux40.1=addr                                            Path(S6,S7)
	S9= Mux40.Out=>IMem.Addr                                    Premise(F3930)
	S10= PIDReg.Out=>Mux41.1                                    Premise(F4213)
	S11= Mux41.1=pid                                            Path(S5,S10)
	S12= Mux41.Out=>IMem.PID                                    Premise(F4214)
	S13= IMem.RData=>Mux44.1                                    Premise(F4545)
	S14= Mux44.Out=>IR.In                                       Premise(F4546)
	S15= CtrlPC=0                                               Premise(F5510)
	S16= CtrlPCInc=1                                            Premise(F5511)
	S17= PC[NIA]=addr+4                                         PC-Write(S1,S15,S16)
	S18= CtrlGPRegs=0                                           Premise(F5513)
	S19= GPRegs[rA]=a                                           GPRegs-Hold(S3,S18)
	S20= CtrlXERCA=0                                            Premise(F5516)
	S21= XER[CA]=ca                                             XER-CA-Hold(S4,S20)
	S22= CtrlIR=1                                               Premise(F5527)
	S23= CtrlMux40.1=1                                          Premise(F5594)
	S24= Mux40.Out=addr                                         Mux(S8,S23)
	S25= IMem.Addr=addr                                         Path(S24,S9)
	S26= CtrlMux41.1=1                                          Premise(F5595)
	S27= Mux41.Out=pid                                          Mux(S11,S26)
	S28= IMem.PID=pid                                           Path(S27,S12)
	S29= IMem.RData={31,rD,rA,0,464}                            IMem-Read(S2,S28,S25)
	S30= Mux44.1={31,rD,rA,0,464}                               Path(S29,S13)
	S31= CtrlMux44.1=1                                          Premise(F5598)
	S32= Mux44.Out={31,rD,rA,0,464}                             Mux(S30,S31)
	S33= IR.In={31,rD,rA,0,464}                                 Path(S32,S14)
	S34= [IR]={31,rD,rA,0,464}                                  IR-Write(S33,S22)

ID	S35= IR.Out11_15=rA                                         IR-Out(S34)
	S36= Mux1.Out=>A.In                                         Premise(F5626)
	S37= GPRegs.RData1=>Mux1.3                                  Premise(F5679)
	S38= Mux10.Out=>B.In                                        Premise(F6936)
	S39= (-1)=>Mux10.2                                          Premise(F6951)
	S40= Mux10.2=(-1)                                           Const-Path(S39)
	S41= IR.Out11_15=>Mux33.1                                   Premise(F8575)
	S42= Mux33.1=rA                                             Path(S35,S41)
	S43= Mux33.Out=>GPRegs.RReg1                                Premise(F8576)
	S44= CtrlPC=0                                               Premise(F11130)
	S45= CtrlPCInc=0                                            Premise(F11131)
	S46= PC[NIA]=addr+4                                         PC-Hold(S17,S44,S45)
	S47= CtrlXERCA=0                                            Premise(F11136)
	S48= XER[CA]=ca                                             XER-CA-Hold(S21,S47)
	S49= CtrlA=1                                                Premise(F11137)
	S50= CtrlB=1                                                Premise(F11139)
	S51= CtrlIR=0                                               Premise(F11147)
	S52= [IR]={31,rD,rA,0,464}                                  IR-Hold(S34,S51)
	S53= CtrlMux1.1=0                                           Premise(F11152)
	S54= CtrlMux1.2=0                                           Premise(F11153)
	S55= CtrlMux1.3=1                                           Premise(F11154)
	S56= CtrlMux1.4=0                                           Premise(F11155)
	S57= CtrlMux10.1=0                                          Premise(F11165)
	S58= CtrlMux10.2=1                                          Premise(F11166)
	S59= CtrlMux10.3=0                                          Premise(F11167)
	S60= CtrlMux10.4=0                                          Premise(F11168)
	S61= CtrlMux10.5=0                                          Premise(F11169)
	S62= CtrlMux10.6=0                                          Premise(F11170)
	S63= CtrlMux10.7=0                                          Premise(F11171)
	S64= CtrlMux10.8=0                                          Premise(F11172)
	S65= Mux10.Out=(-1)                                         Mux(S40,S57,S58,S59,S60,S61,S62,S63,S64)
	S66= B.In=(-1)                                              Path(S65,S38)
	S67= [B]=(-1)                                               B-Write(S66,S50)
	S68= CtrlMux33.1=1                                          Premise(F11203)
	S69= Mux33.Out=rA                                           Mux(S42,S68)
	S70= GPRegs.RReg1=rA                                        Path(S69,S43)
	S71= GPRegs.RData1=a                                        GPRegs-Read(S19,S70)
	S72= Mux1.3=a                                               Path(S71,S37)
	S73= Mux1.Out=a                                             Mux(S72,S53,S54,S55,S56)
	S74= A.In=a                                                 Path(S73,S36)
	S75= [A]=a                                                  A-Write(S74,S49)

EX	S76= XER.CAOut=ca                                           XER-CA-Out(S48)
	S77= IR.Out0_5=31                                           IR-Out(S52)
	S78= IR.Out21_31=464                                        IR-Out(S52)
	S79= B.Out=(-1)                                             B-Out(S67)
	S80= A.Out=a                                                A-Out(S75)
	S81= A.Out=>Mux5.1                                          Premise(F11613)
	S82= Mux5.1=a                                               Path(S80,S81)
	S83= Mux5.Out=>ALU.A                                        Premise(F11614)
	S84= B.Out=>Mux6.1                                          Premise(F11835)
	S85= Mux6.1=(-1)                                            Path(S79,S84)
	S86= Mux6.Out=>ALU.B                                        Premise(F11836)
	S87= XER.CAOut=>Mux7.1                                      Premise(F12049)
	S88= Mux7.1=ca                                              Path(S76,S87)
	S89= Mux7.Out=>ALU.CAIn                                     Premise(F12050)
	S90= CU.Func=>Mux8.1                                        Premise(F12095)
	S91= Mux8.Out=>ALU.Func                                     Premise(F12096)
	S92= ALU.Out=>Mux9.1                                        Premise(F12317)
	S93= Mux9.Out=>ALUOut.In                                    Premise(F12318)
	S94= ALU.CA=>Mux11.1                                        Premise(F12811)
	S95= Mux11.Out=>CAReg.In                                    Premise(F12812)
	S96= IR.Out21_31=>Mux21.1                                   Premise(F13089)
	S97= Mux21.1=464                                            Path(S78,S96)
	S98= Mux21.Out=>CU.IRFunc                                   Premise(F13090)
	S99= IR.Out0_5=>Mux23.1                                     Premise(F13317)
	S100= Mux23.1=31                                            Path(S77,S99)
	S101= Mux23.Out=>CU.Op                                      Premise(F13318)
	S102= CtrlPC=0                                              Premise(F16750)
	S103= CtrlPCInc=0                                           Premise(F16751)
	S104= PC[NIA]=addr+4                                        PC-Hold(S46,S102,S103)
	S105= CtrlALUOut=1                                          Premise(F16758)
	S106= CtrlCAReg=1                                           Premise(F16760)
	S107= CtrlIR=0                                              Premise(F16767)
	S108= [IR]={31,rD,rA,0,464}                                 IR-Hold(S52,S107)
	S109= CtrlMux5.1=1                                          Premise(F16779)
	S110= Mux5.Out=a                                            Mux(S82,S109)
	S111= ALU.A=a                                               Path(S110,S83)
	S112= CtrlMux6.1=1                                          Premise(F16780)
	S113= Mux6.Out=(-1)                                         Mux(S85,S112)
	S114= ALU.B=(-1)                                            Path(S113,S86)
	S115= CtrlMux7.1=1                                          Premise(F16781)
	S116= Mux7.Out=ca                                           Mux(S88,S115)
	S117= ALU.CAIn=ca                                           Path(S116,S89)
	S118= CtrlMux8.1=1                                          Premise(F16782)
	S119= CtrlMux9.1=1                                          Premise(F16783)
	S120= CtrlMux9.2=0                                          Premise(F16784)
	S121= CtrlMux11.1=1                                         Premise(F16793)
	S122= CtrlMux11.2=0                                         Premise(F16794)
	S123= CtrlMux21.1=1                                         Premise(F16806)
	S124= Mux21.Out=464                                         Mux(S97,S123)
	S125= CU.IRFunc=464                                         Path(S124,S98)
	S126= CtrlMux23.1=1                                         Premise(F16808)
	S127= Mux23.Out=31                                          Mux(S100,S126)
	S128= CU.Op=31                                              Path(S127,S101)
	S129= CU.Func=alu_subfe                                     CU(S128,S125)
	S130= Mux8.1=alu_subfe                                      Path(S129,S90)
	S131= Mux8.Out=alu_subfe                                    Mux(S130,S118)
	S132= ALU.Func=alu_subfe                                    Path(S131,S91)
	S133= ALU.Out=(-1)-a+ca                                     ALU(S111,S114,S117,S132)
	S134= Mux9.1=(-1)-a+ca                                      Path(S133,S92)
	S135= Mux9.Out=(-1)-a+ca                                    Mux(S134,S119,S120)
	S136= ALUOut.In=(-1)-a+ca                                   Path(S135,S93)
	S137= [ALUOut]=(-1)-a+ca                                    ALUOut-Write(S136,S105)
	S138= ALU.CA=Carry((-1)-a+ca)                               ALU(S111,S114,S117,S132)
	S139= Mux11.1=Carry((-1)-a+ca)                              Path(S138,S94)
	S140= Mux11.Out=Carry((-1)-a+ca)                            Mux(S139,S121,S122)
	S141= CAReg.In=Carry((-1)-a+ca)                             Path(S140,S95)
	S142= [CAReg]=Carry((-1)-a+ca)                              CAReg-Write(S141,S106)

MEM	S143= CtrlPC=0                                              Premise(F22370)
	S144= CtrlPCInc=0                                           Premise(F22371)
	S145= PC[NIA]=addr+4                                        PC-Hold(S104,S143,S144)
	S146= CtrlALUOut=0                                          Premise(F22378)
	S147= [ALUOut]=(-1)-a+ca                                    ALUOut-Hold(S137,S146)
	S148= CtrlCAReg=0                                           Premise(F22380)
	S149= [CAReg]=Carry((-1)-a+ca)                              CAReg-Hold(S142,S148)
	S150= CtrlIR=0                                              Premise(F22387)
	S151= [IR]={31,rD,rA,0,464}                                 IR-Hold(S108,S150)

WB	S152= ALUOut.Out=(-1)-a+ca                                  ALUOut-Out(S147)
	S153= CAReg.Out=Carry((-1)-a+ca)                            CAReg-Out(S149)
	S154= IR.Out6_10=rD                                         IR-Out(S151)
	S155= ALUOut.Out=>Mux38.1                                   Premise(F25921)
	S156= Mux38.1=(-1)-a+ca                                     Path(S152,S155)
	S157= Mux38.Out=>GPRegs.WData                               Premise(F25922)
	S158= Mux39.Out=>GPRegs.WReg                                Premise(F26166)
	S159= IR.Out6_10=>Mux39.2                                   Premise(F26183)
	S160= Mux39.2=rD                                            Path(S154,S159)
	S161= CAReg.Out=>Mux62.1                                    Premise(F27813)
	S162= Mux62.1=Carry((-1)-a+ca)                              Path(S153,S161)
	S163= Mux62.Out=>XER.CAIn                                   Premise(F27814)
	S164= CtrlPC=0                                              Premise(F27990)
	S165= CtrlPCInc=0                                           Premise(F27991)
	S166= PC[NIA]=addr+4                                        PC-Hold(S145,S164,S165)
	S167= CtrlGPRegs=1                                          Premise(F27993)
	S168= CtrlXERCA=1                                           Premise(F27996)
	S169= CtrlMux38.1=1                                         Premise(F28069)
	S170= CtrlMux38.2=0                                         Premise(F28070)
	S171= CtrlMux38.3=0                                         Premise(F28071)
	S172= Mux38.Out=(-1)-a+ca                                   Mux(S156,S169,S170,S171)
	S173= GPRegs.WData=(-1)-a+ca                                Path(S172,S157)
	S174= CtrlMux39.1=0                                         Premise(F28072)
	S175= CtrlMux39.2=1                                         Premise(F28073)
	S176= Mux39.Out=rD                                          Mux(S160,S174,S175)
	S177= GPRegs.WReg=rD                                        Path(S176,S158)
	S178= GPRegs[rD]=(-1)-a+ca                                  GPRegs-Write(S177,S173,S167)
	S179= CtrlMux62.1=1                                         Premise(F28102)
	S180= Mux62.Out=Carry((-1)-a+ca)                            Mux(S162,S179)
	S181= XER.CAIn=Carry((-1)-a+ca)                             Path(S180,S163)
	S182= XER[CA]=Carry((-1)-a+ca)                              XER-CA-Write(S181,S168)

WB/	S166= PC[NIA]=addr+4                                        PC-Hold(S145,S164,S165)
	S178= GPRegs[rD]=(-1)-a+ca                                  GPRegs-Write(S177,S173,S167)
	S182= XER[CA]=Carry((-1)-a+ca)                              XER-CA-Write(S181,S168)

