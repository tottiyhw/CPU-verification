
------------------------------------- Proof -------------------------------------

/IF	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[NIA]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rD,rA,0,1425}                      Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= XER[CA]=ca                                              Premise(F4)
	S5= XER[SO]=so                                              Premise(F5)

IF	S6= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S7= PC.NIA=addr                                             PC-Out(S1)
	S8= PC.NIA=>Mux40.1                                         Premise(F3930)
	S9= Mux40.1=addr                                            Path(S7,S8)
	S10= Mux40.Out=>IMem.Addr                                   Premise(F3931)
	S11= PIDReg.Out=>Mux41.1                                    Premise(F4214)
	S12= Mux41.1=pid                                            Path(S6,S11)
	S13= Mux41.Out=>IMem.PID                                    Premise(F4215)
	S14= IMem.RData=>Mux44.1                                    Premise(F4546)
	S15= Mux44.Out=>IR.In                                       Premise(F4547)
	S16= CtrlPC=0                                               Premise(F5511)
	S17= CtrlPCInc=1                                            Premise(F5512)
	S18= PC[NIA]=addr+4                                         PC-Write(S1,S16,S17)
	S19= CtrlGPRegs=0                                           Premise(F5514)
	S20= GPRegs[rA]=a                                           GPRegs-Hold(S3,S19)
	S21= CtrlXERSO=0                                            Premise(F5515)
	S22= XER[SO]=so                                             XER-SO-Hold(S5,S21)
	S23= CtrlXERCA=0                                            Premise(F5517)
	S24= XER[CA]=ca                                             XER-CA-Hold(S4,S23)
	S25= CtrlIR=1                                               Premise(F5528)
	S26= CtrlMux40.1=1                                          Premise(F5595)
	S27= Mux40.Out=addr                                         Mux(S9,S26)
	S28= IMem.Addr=addr                                         Path(S27,S10)
	S29= CtrlMux41.1=1                                          Premise(F5596)
	S30= Mux41.Out=pid                                          Mux(S12,S29)
	S31= IMem.PID=pid                                           Path(S30,S13)
	S32= IMem.RData={31,rD,rA,0,1425}                           IMem-Read(S2,S31,S28)
	S33= Mux44.1={31,rD,rA,0,1425}                              Path(S32,S14)
	S34= CtrlMux44.1=1                                          Premise(F5599)
	S35= Mux44.Out={31,rD,rA,0,1425}                            Mux(S33,S34)
	S36= IR.In={31,rD,rA,0,1425}                                Path(S35,S15)
	S37= [IR]={31,rD,rA,0,1425}                                 IR-Write(S36,S25)

ID	S38= IR.Out11_15=rA                                         IR-Out(S37)
	S39= Mux1.Out=>A.In                                         Premise(F5627)
	S40= GPRegs.RData1=>Mux1.3                                  Premise(F5680)
	S41= 0=>Mux10.1                                             Premise(F6936)
	S42= Mux10.1=0                                              Const-Path(S41)
	S43= Mux10.Out=>B.In                                        Premise(F6937)
	S44= IR.Out11_15=>Mux33.1                                   Premise(F8576)
	S45= Mux33.1=rA                                             Path(S38,S44)
	S46= Mux33.Out=>GPRegs.RReg1                                Premise(F8577)
	S47= CtrlPC=0                                               Premise(F11131)
	S48= CtrlPCInc=0                                            Premise(F11132)
	S49= PC[NIA]=addr+4                                         PC-Hold(S18,S47,S48)
	S50= CtrlXERSO=0                                            Premise(F11135)
	S51= XER[SO]=so                                             XER-SO-Hold(S22,S50)
	S52= CtrlXERCA=0                                            Premise(F11137)
	S53= XER[CA]=ca                                             XER-CA-Hold(S24,S52)
	S54= CtrlA=1                                                Premise(F11140)
	S55= CtrlB=1                                                Premise(F11142)
	S56= CtrlIR=0                                               Premise(F11148)
	S57= [IR]={31,rD,rA,0,1425}                                 IR-Hold(S37,S56)
	S58= CtrlMux1.1=0                                           Premise(F11153)
	S59= CtrlMux1.2=0                                           Premise(F11154)
	S60= CtrlMux1.3=1                                           Premise(F11155)
	S61= CtrlMux1.4=0                                           Premise(F11156)
	S62= CtrlMux10.1=1                                          Premise(F11166)
	S63= CtrlMux10.2=0                                          Premise(F11167)
	S64= CtrlMux10.3=0                                          Premise(F11168)
	S65= CtrlMux10.4=0                                          Premise(F11169)
	S66= CtrlMux10.5=0                                          Premise(F11170)
	S67= CtrlMux10.6=0                                          Premise(F11171)
	S68= CtrlMux10.7=0                                          Premise(F11172)
	S69= CtrlMux10.8=0                                          Premise(F11173)
	S70= Mux10.Out=0                                            Mux(S42,S62,S63,S64,S65,S66,S67,S68,S69)
	S71= B.In=0                                                 Path(S70,S43)
	S72= [B]=0                                                  B-Write(S71,S55)
	S73= CtrlMux33.1=1                                          Premise(F11204)
	S74= Mux33.Out=rA                                           Mux(S45,S73)
	S75= GPRegs.RReg1=rA                                        Path(S74,S46)
	S76= GPRegs.RData1=a                                        GPRegs-Read(S20,S75)
	S77= Mux1.3=a                                               Path(S76,S40)
	S78= Mux1.Out=a                                             Mux(S77,S58,S59,S60,S61)
	S79= A.In=a                                                 Path(S78,S39)
	S80= [A]=a                                                  A-Write(S79,S54)

EX	S81= XER.SOOut=so                                           XER-SO-Out(S51)
	S82= XER.CAOut=ca                                           XER-CA-Out(S53)
	S83= IR.Out0_5=31                                           IR-Out(S57)
	S84= IR.Out21_31=1425                                       IR-Out(S57)
	S85= B.Out=0                                                B-Out(S72)
	S86= A.Out=a                                                A-Out(S80)
	S87= A.Out=>Mux5.1                                          Premise(F11614)
	S88= Mux5.1=a                                               Path(S86,S87)
	S89= Mux5.Out=>ALU.A                                        Premise(F11615)
	S90= B.Out=>Mux6.1                                          Premise(F11836)
	S91= Mux6.1=0                                               Path(S85,S90)
	S92= Mux6.Out=>ALU.B                                        Premise(F11837)
	S93= XER.CAOut=>Mux7.1                                      Premise(F12050)
	S94= Mux7.1=ca                                              Path(S82,S93)
	S95= Mux7.Out=>ALU.CAIn                                     Premise(F12051)
	S96= CU.Func=>Mux8.1                                        Premise(F12096)
	S97= Mux8.Out=>ALU.Func                                     Premise(F12097)
	S98= ALU.Out=>Mux9.1                                        Premise(F12318)
	S99= Mux9.Out=>ALUOut.In                                    Premise(F12319)
	S100= ALU.CA=>Mux11.1                                       Premise(F12812)
	S101= Mux11.Out=>CAReg.In                                   Premise(F12813)
	S102= IR.Out21_31=>Mux21.1                                  Premise(F13090)
	S103= Mux21.1=1425                                          Path(S84,S102)
	S104= Mux21.Out=>CU.IRFunc                                  Premise(F13091)
	S105= IR.Out0_5=>Mux23.1                                    Premise(F13318)
	S106= Mux23.1=31                                            Path(S83,S105)
	S107= Mux23.Out=>CU.Op                                      Premise(F13319)
	S108= ALU.CMP=>Mux24.1                                      Premise(F13602)
	S109= Mux24.Out=>DataCmb.A                                  Premise(F13603)
	S110= ORGate.Out=>Mux25.1                                   Premise(F13708)
	S111= Mux25.Out=>DataCmb.B                                  Premise(F13709)
	S112= ORGate.Out=>Mux31.1                                   Premise(F14034)
	S113= Mux31.Out=>DR1bit.In                                  Premise(F14035)
	S114= DataCmb.Out=>Mux32.1                                  Premise(F14090)
	S115= Mux32.Out=>DR4bit.In                                  Premise(F14091)
	S116= XER.SOOut=>Mux53.1                                    Premise(F16346)
	S117= Mux53.1=so                                            Path(S81,S116)
	S118= Mux53.Out=>ORGate.A                                   Premise(F16347)
	S119= ALU.OV=>Mux54.1                                       Premise(F16402)
	S120= Mux54.Out=>ORGate.B                                   Premise(F16403)
	S121= ALU.OV=>Mux55.1                                       Premise(F16458)
	S122= Mux55.Out=>OVReg.In                                   Premise(F16459)
	S123= CtrlPC=0                                              Premise(F16751)
	S124= CtrlPCInc=0                                           Premise(F16752)
	S125= PC[NIA]=addr+4                                        PC-Hold(S49,S123,S124)
	S126= CtrlALUOut=1                                          Premise(F16761)
	S127= CtrlCAReg=1                                           Premise(F16763)
	S128= CtrlDR1bit=1                                          Premise(F16766)
	S129= CtrlDR4bit=1                                          Premise(F16767)
	S130= CtrlIR=0                                              Premise(F16768)
	S131= [IR]={31,rD,rA,0,1425}                                IR-Hold(S57,S130)
	S132= CtrlOVReg=1                                           Premise(F16771)
	S133= CtrlMux5.1=1                                          Premise(F16780)
	S134= Mux5.Out=a                                            Mux(S88,S133)
	S135= ALU.A=a                                               Path(S134,S89)
	S136= CtrlMux6.1=1                                          Premise(F16781)
	S137= Mux6.Out=0                                            Mux(S91,S136)
	S138= ALU.B=0                                               Path(S137,S92)
	S139= CtrlMux7.1=1                                          Premise(F16782)
	S140= Mux7.Out=ca                                           Mux(S94,S139)
	S141= ALU.CAIn=ca                                           Path(S140,S95)
	S142= CtrlMux8.1=1                                          Premise(F16783)
	S143= CtrlMux9.1=1                                          Premise(F16784)
	S144= CtrlMux9.2=0                                          Premise(F16785)
	S145= CtrlMux11.1=1                                         Premise(F16794)
	S146= CtrlMux11.2=0                                         Premise(F16795)
	S147= CtrlMux21.1=1                                         Premise(F16807)
	S148= Mux21.Out=1425                                        Mux(S103,S147)
	S149= CU.IRFunc=1425                                        Path(S148,S104)
	S150= CtrlMux23.1=1                                         Premise(F16809)
	S151= Mux23.Out=31                                          Mux(S106,S150)
	S152= CU.Op=31                                              Path(S151,S107)
	S153= CU.Func=alu_subfe                                     CU(S152,S149)
	S154= Mux8.1=alu_subfe                                      Path(S153,S96)
	S155= Mux8.Out=alu_subfe                                    Mux(S154,S142)
	S156= ALU.Func=alu_subfe                                    Path(S155,S97)
	S157= ALU.Out=0-a+ca                                        ALU(S135,S138,S141,S156)
	S158= Mux9.1=0-a+ca                                         Path(S157,S98)
	S159= Mux9.Out=0-a+ca                                       Mux(S158,S143,S144)
	S160= ALUOut.In=0-a+ca                                      Path(S159,S99)
	S161= [ALUOut]=0-a+ca                                       ALUOut-Write(S160,S126)
	S162= ALU.CMP=Compare0(0-a+ca)                              ALU(S135,S138,S141,S156)
	S163= Mux24.1=Compare0(0-a+ca)                              Path(S162,S108)
	S164= ALU.OV=OverFlow(0-a+ca)                               ALU(S135,S138,S141,S156)
	S165= Mux54.1=OverFlow(0-a+ca)                              Path(S164,S119)
	S166= Mux55.1=OverFlow(0-a+ca)                              Path(S164,S121)
	S167= ALU.CA=Carry(0-a+ca)                                  ALU(S135,S138,S141,S156)
	S168= Mux11.1=Carry(0-a+ca)                                 Path(S167,S100)
	S169= Mux11.Out=Carry(0-a+ca)                               Mux(S168,S145,S146)
	S170= CAReg.In=Carry(0-a+ca)                                Path(S169,S101)
	S171= [CAReg]=Carry(0-a+ca)                                 CAReg-Write(S170,S127)
	S172= CtrlMux24.1=1                                         Premise(F16810)
	S173= CtrlMux24.2=0                                         Premise(F16811)
	S174= CtrlMux24.3=0                                         Premise(F16812)
	S175= CtrlMux24.4=0                                         Premise(F16813)
	S176= Mux24.Out=Compare0(0-a+ca)                            Mux(S163,S172,S173,S174,S175)
	S177= DataCmb.A=Compare0(0-a+ca)                            Path(S176,S109)
	S178= CtrlMux25.1=1                                         Premise(F16814)
	S179= CtrlMux25.2=0                                         Premise(F16815)
	S180= CtrlMux31.1=1                                         Premise(F16822)
	S181= CtrlMux32.1=1                                         Premise(F16823)
	S182= CtrlMux53.1=1                                         Premise(F16852)
	S183= Mux53.Out=so                                          Mux(S117,S182)
	S184= ORGate.A=so                                           Path(S183,S118)
	S185= CtrlMux54.1=1                                         Premise(F16853)
	S186= CtrlMux54.2=0                                         Premise(F16854)
	S187= Mux54.Out=OverFlow(0-a+ca)                            Mux(S165,S185,S186)
	S188= ORGate.B=OverFlow(0-a+ca)                             Path(S187,S120)
	S189= ORGate.Out=so|OverFlow(0-a+ca)                        ORGate(S184,S188)
	S190= Mux25.1=so|OverFlow(0-a+ca)                           Path(S189,S110)
	S191= Mux25.Out=so|OverFlow(0-a+ca)                         Mux(S190,S178,S179)
	S192= DataCmb.B=so|OverFlow(0-a+ca)                         Path(S191,S111)
	S193= DataCmb.Out={Compare0(0-a+ca),so|OverFlow(0-a+ca)}    DataCmb(S177,S192)
	S194= Mux32.1={Compare0(0-a+ca),so|OverFlow(0-a+ca)}        Path(S193,S114)
	S195= Mux32.Out={Compare0(0-a+ca),so|OverFlow(0-a+ca)}      Mux(S194,S181)
	S196= DR4bit.In={Compare0(0-a+ca),so|OverFlow(0-a+ca)}      Path(S195,S115)
	S197= [DR4bit]={Compare0(0-a+ca),so|OverFlow(0-a+ca)}       DR4bit-Write(S196,S129)
	S198= Mux31.1=so|OverFlow(0-a+ca)                           Path(S189,S112)
	S199= Mux31.Out=so|OverFlow(0-a+ca)                         Mux(S198,S180)
	S200= DR1bit.In=so|OverFlow(0-a+ca)                         Path(S199,S113)
	S201= [DR1bit]=so|OverFlow(0-a+ca)                          DR1bit-Write(S200,S128)
	S202= CtrlMux55.1=1                                         Premise(F16855)
	S203= Mux55.Out=OverFlow(0-a+ca)                            Mux(S166,S202)
	S204= OVReg.In=OverFlow(0-a+ca)                             Path(S203,S122)
	S205= [OVReg]=OverFlow(0-a+ca)                              OVReg-Write(S204,S132)

MEM	S206= CtrlPC=0                                              Premise(F22371)
	S207= CtrlPCInc=0                                           Premise(F22372)
	S208= PC[NIA]=addr+4                                        PC-Hold(S125,S206,S207)
	S209= CtrlALUOut=0                                          Premise(F22381)
	S210= [ALUOut]=0-a+ca                                       ALUOut-Hold(S161,S209)
	S211= CtrlCAReg=0                                           Premise(F22383)
	S212= [CAReg]=Carry(0-a+ca)                                 CAReg-Hold(S171,S211)
	S213= CtrlDR1bit=0                                          Premise(F22386)
	S214= [DR1bit]=so|OverFlow(0-a+ca)                          DR1bit-Hold(S201,S213)
	S215= CtrlDR4bit=0                                          Premise(F22387)
	S216= [DR4bit]={Compare0(0-a+ca),so|OverFlow(0-a+ca)}       DR4bit-Hold(S197,S215)
	S217= CtrlIR=0                                              Premise(F22388)
	S218= [IR]={31,rD,rA,0,1425}                                IR-Hold(S131,S217)
	S219= CtrlOVReg=0                                           Premise(F22391)
	S220= [OVReg]=OverFlow(0-a+ca)                              OVReg-Hold(S205,S219)

WB	S221= ALUOut.Out=0-a+ca                                     ALUOut-Out(S210)
	S222= CAReg.Out=Carry(0-a+ca)                               CAReg-Out(S212)
	S223= DR1bit.Out=so|OverFlow(0-a+ca)                        DR1bit-Out(S214)
	S224= DR4bit.Out={Compare0(0-a+ca),so|OverFlow(0-a+ca)}     DR4bit-Out(S216)
	S225= IR.Out6_10=rD                                         IR-Out(S218)
	S226= OVReg.Out=OverFlow(0-a+ca)                            OVReg-Out(S220)
	S227= DR4bit.Out=>Mux15.1                                   Premise(F24152)
	S228= Mux15.1={Compare0(0-a+ca),so|OverFlow(0-a+ca)}        Path(S224,S227)
	S229= Mux15.Out=>CRRegs.CR0In                               Premise(F24153)
	S230= ALUOut.Out=>Mux38.1                                   Premise(F25922)
	S231= Mux38.1=0-a+ca                                        Path(S221,S230)
	S232= Mux38.Out=>GPRegs.WData                               Premise(F25923)
	S233= Mux39.Out=>GPRegs.WReg                                Premise(F26167)
	S234= IR.Out6_10=>Mux39.2                                   Premise(F26184)
	S235= Mux39.2=rD                                            Path(S225,S234)
	S236= CAReg.Out=>Mux62.1                                    Premise(F27814)
	S237= Mux62.1=Carry(0-a+ca)                                 Path(S222,S236)
	S238= Mux62.Out=>XER.CAIn                                   Premise(F27815)
	S239= OVReg.Out=>Mux63.1                                    Premise(F27890)
	S240= Mux63.1=OverFlow(0-a+ca)                              Path(S226,S239)
	S241= Mux63.Out=>XER.OVIn                                   Premise(F27891)
	S242= DR1bit.Out=>Mux64.1                                   Premise(F27934)
	S243= Mux64.1=so|OverFlow(0-a+ca)                           Path(S223,S242)
	S244= Mux64.Out=>XER.SOIn                                   Premise(F27935)
	S245= CtrlPC=0                                              Premise(F27991)
	S246= CtrlPCInc=0                                           Premise(F27992)
	S247= PC[NIA]=addr+4                                        PC-Hold(S208,S245,S246)
	S248= CtrlGPRegs=1                                          Premise(F27994)
	S249= CtrlXERSO=1                                           Premise(F27995)
	S250= CtrlXEROV=1                                           Premise(F27996)
	S251= CtrlXERCA=1                                           Premise(F27997)
	S252= CtrlCRRegsCR0=1                                       Premise(F27999)
	S253= CtrlMux15.1=1                                         Premise(F28039)
	S254= Mux15.Out={Compare0(0-a+ca),so|OverFlow(0-a+ca)}      Mux(S228,S253)
	S255= CRRegs.CR0In={Compare0(0-a+ca),so|OverFlow(0-a+ca)}   Path(S254,S229)
	S256= CRRegs[CR0]={Compare0(0-a+ca),so|OverFlow(0-a+ca)}    CRRegs-CR0-Write(S255,S252)
	S257= CtrlMux38.1=1                                         Premise(F28070)
	S258= CtrlMux38.2=0                                         Premise(F28071)
	S259= CtrlMux38.3=0                                         Premise(F28072)
	S260= Mux38.Out=0-a+ca                                      Mux(S231,S257,S258,S259)
	S261= GPRegs.WData=0-a+ca                                   Path(S260,S232)
	S262= CtrlMux39.1=0                                         Premise(F28073)
	S263= CtrlMux39.2=1                                         Premise(F28074)
	S264= Mux39.Out=rD                                          Mux(S235,S262,S263)
	S265= GPRegs.WReg=rD                                        Path(S264,S233)
	S266= GPRegs[rD]=0-a+ca                                     GPRegs-Write(S265,S261,S248)
	S267= CtrlMux62.1=1                                         Premise(F28103)
	S268= Mux62.Out=Carry(0-a+ca)                               Mux(S237,S267)
	S269= XER.CAIn=Carry(0-a+ca)                                Path(S268,S238)
	S270= XER[CA]=Carry(0-a+ca)                                 XER-CA-Write(S269,S251)
	S271= CtrlMux63.1=1                                         Premise(F28104)
	S272= Mux63.Out=OverFlow(0-a+ca)                            Mux(S240,S271)
	S273= XER.OVIn=OverFlow(0-a+ca)                             Path(S272,S241)
	S274= XER[OV]=OverFlow(0-a+ca)                              XER-OV-Write(S273,S250)
	S275= CtrlMux64.1=1                                         Premise(F28105)
	S276= Mux64.Out=so|OverFlow(0-a+ca)                         Mux(S243,S275)
	S277= XER.SOIn=so|OverFlow(0-a+ca)                          Path(S276,S244)
	S278= XER[SO]=so|OverFlow(0-a+ca)                           XER-SO-Write(S277,S249)

WB/	S247= PC[NIA]=addr+4                                        PC-Hold(S208,S245,S246)
	S256= CRRegs[CR0]={Compare0(0-a+ca),so|OverFlow(0-a+ca)}    CRRegs-CR0-Write(S255,S252)
	S266= GPRegs[rD]=0-a+ca                                     GPRegs-Write(S265,S261,S248)
	S270= XER[CA]=Carry(0-a+ca)                                 XER-CA-Write(S269,S251)
	S274= XER[OV]=OverFlow(0-a+ca)                              XER-OV-Write(S273,S250)
	S278= XER[SO]=so|OverFlow(0-a+ca)                           XER-SO-Write(S277,S249)

