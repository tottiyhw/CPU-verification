
------------------------------------- Proof -------------------------------------

/IF	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[NIA]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rD,rA,rB,1044}                     Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= GPRegs[rB]=b                                            Premise(F4)
	S5= XER[SO]=so                                              Premise(F5)

IF	S6= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S7= PC.NIA=addr                                             PC-Out(S1)
	S8= PC.NIA=>Mux40.1                                         Premise(F3930)
	S9= Mux40.1=addr                                            Path(S7,S8)
	S10= Mux40.Out=>IMem.Addr                                   Premise(F3931)
	S11= PIDReg.Out=>Mux41.1                                    Premise(F4214)
	S12= Mux41.1=pid                                            Path(S6,S11)
	S13= Mux41.Out=>IMem.PID                                    Premise(F4215)
	S14= IMem.RData=>Mux44.1                                    Premise(F4546)
	S15= Mux44.Out=>IR.In                                       Premise(F4547)
	S16= CtrlPC=0                                               Premise(F5511)
	S17= CtrlPCInc=1                                            Premise(F5512)
	S18= PC[NIA]=addr+4                                         PC-Write(S1,S16,S17)
	S19= CtrlGPRegs=0                                           Premise(F5514)
	S20= GPRegs[rA]=a                                           GPRegs-Hold(S3,S19)
	S21= GPRegs[rB]=b                                           GPRegs-Hold(S4,S19)
	S22= CtrlXERSO=0                                            Premise(F5515)
	S23= XER[SO]=so                                             XER-SO-Hold(S5,S22)
	S24= CtrlIR=1                                               Premise(F5528)
	S25= CtrlMux40.1=1                                          Premise(F5595)
	S26= Mux40.Out=addr                                         Mux(S9,S25)
	S27= IMem.Addr=addr                                         Path(S26,S10)
	S28= CtrlMux41.1=1                                          Premise(F5596)
	S29= Mux41.Out=pid                                          Mux(S12,S28)
	S30= IMem.PID=pid                                           Path(S29,S13)
	S31= IMem.RData={31,rD,rA,rB,1044}                          IMem-Read(S2,S30,S27)
	S32= Mux44.1={31,rD,rA,rB,1044}                             Path(S31,S14)
	S33= CtrlMux44.1=1                                          Premise(F5599)
	S34= Mux44.Out={31,rD,rA,rB,1044}                           Mux(S32,S33)
	S35= IR.In={31,rD,rA,rB,1044}                               Path(S34,S15)
	S36= [IR]={31,rD,rA,rB,1044}                                IR-Write(S35,S24)

ID	S37= IR.Out11_15=rA                                         IR-Out(S36)
	S38= IR.Out16_20=rB                                         IR-Out(S36)
	S39= Mux1.Out=>A.In                                         Premise(F5627)
	S40= GPRegs.RData1=>Mux1.3                                  Premise(F5680)
	S41= Mux10.Out=>B.In                                        Premise(F6937)
	S42= GPRegs.RData2=>Mux10.5                                 Premise(F6984)
	S43= IR.Out11_15=>Mux33.1                                   Premise(F8576)
	S44= Mux33.1=rA                                             Path(S37,S43)
	S45= Mux33.Out=>GPRegs.RReg1                                Premise(F8577)
	S46= IR.Out16_20=>Mux34.1                                   Premise(F8838)
	S47= Mux34.1=rB                                             Path(S38,S46)
	S48= Mux34.Out=>GPRegs.RReg2                                Premise(F8839)
	S49= CtrlPC=0                                               Premise(F11131)
	S50= CtrlPCInc=0                                            Premise(F11132)
	S51= PC[NIA]=addr+4                                         PC-Hold(S18,S49,S50)
	S52= CtrlXERSO=0                                            Premise(F11135)
	S53= XER[SO]=so                                             XER-SO-Hold(S23,S52)
	S54= CtrlA=1                                                Premise(F11138)
	S55= CtrlB=1                                                Premise(F11140)
	S56= CtrlIR=0                                               Premise(F11148)
	S57= [IR]={31,rD,rA,rB,1044}                                IR-Hold(S36,S56)
	S58= CtrlMux1.1=0                                           Premise(F11153)
	S59= CtrlMux1.2=0                                           Premise(F11154)
	S60= CtrlMux1.3=1                                           Premise(F11155)
	S61= CtrlMux1.4=0                                           Premise(F11156)
	S62= CtrlMux10.1=0                                          Premise(F11166)
	S63= CtrlMux10.2=0                                          Premise(F11167)
	S64= CtrlMux10.3=0                                          Premise(F11168)
	S65= CtrlMux10.4=0                                          Premise(F11169)
	S66= CtrlMux10.5=1                                          Premise(F11170)
	S67= CtrlMux10.6=0                                          Premise(F11171)
	S68= CtrlMux10.7=0                                          Premise(F11172)
	S69= CtrlMux10.8=0                                          Premise(F11173)
	S70= CtrlMux33.1=1                                          Premise(F11204)
	S71= Mux33.Out=rA                                           Mux(S44,S70)
	S72= GPRegs.RReg1=rA                                        Path(S71,S45)
	S73= GPRegs.RData1=a                                        GPRegs-Read(S20,S72)
	S74= Mux1.3=a                                               Path(S73,S40)
	S75= Mux1.Out=a                                             Mux(S74,S58,S59,S60,S61)
	S76= A.In=a                                                 Path(S75,S39)
	S77= [A]=a                                                  A-Write(S76,S54)
	S78= CtrlMux34.1=1                                          Premise(F11205)
	S79= CtrlMux34.2=0                                          Premise(F11206)
	S80= Mux34.Out=rB                                           Mux(S47,S78,S79)
	S81= GPRegs.RReg2=rB                                        Path(S80,S48)
	S82= GPRegs.RData2=b                                        GPRegs-Read(S21,S81)
	S83= Mux10.5=b                                              Path(S82,S42)
	S84= Mux10.Out=b                                            Mux(S83,S62,S63,S64,S65,S66,S67,S68,S69)
	S85= B.In=b                                                 Path(S84,S41)
	S86= [B]=b                                                  B-Write(S85,S55)

EX	S87= XER.SOOut=so                                           XER-SO-Out(S53)
	S88= IR.Out0_5=31                                           IR-Out(S57)
	S89= IR.Out21_31=1044                                       IR-Out(S57)
	S90= A.Out=a                                                A-Out(S77)
	S91= B.Out=b                                                B-Out(S86)
	S92= A.Out=>Mux5.1                                          Premise(F11614)
	S93= Mux5.1=a                                               Path(S90,S92)
	S94= Mux5.Out=>ALU.A                                        Premise(F11615)
	S95= B.Out=>Mux6.1                                          Premise(F11836)
	S96= Mux6.1=b                                               Path(S91,S95)
	S97= Mux6.Out=>ALU.B                                        Premise(F11837)
	S98= CU.Func=>Mux8.1                                        Premise(F12096)
	S99= Mux8.Out=>ALU.Func                                     Premise(F12097)
	S100= ALU.Out=>Mux9.1                                       Premise(F12318)
	S101= Mux9.Out=>ALUOut.In                                   Premise(F12319)
	S102= ALU.CA=>Mux11.1                                       Premise(F12812)
	S103= Mux11.Out=>CAReg.In                                   Premise(F12813)
	S104= IR.Out21_31=>Mux21.1                                  Premise(F13090)
	S105= Mux21.1=1044                                          Path(S89,S104)
	S106= Mux21.Out=>CU.IRFunc                                  Premise(F13091)
	S107= IR.Out0_5=>Mux23.1                                    Premise(F13318)
	S108= Mux23.1=31                                            Path(S88,S107)
	S109= Mux23.Out=>CU.Op                                      Premise(F13319)
	S110= ORGate.Out=>Mux31.1                                   Premise(F14034)
	S111= Mux31.Out=>DR1bit.In                                  Premise(F14035)
	S112= XER.SOOut=>Mux53.1                                    Premise(F16346)
	S113= Mux53.1=so                                            Path(S87,S112)
	S114= Mux53.Out=>ORGate.A                                   Premise(F16347)
	S115= ALU.OV=>Mux54.1                                       Premise(F16402)
	S116= Mux54.Out=>ORGate.B                                   Premise(F16403)
	S117= ALU.OV=>Mux55.1                                       Premise(F16458)
	S118= Mux55.Out=>OVReg.In                                   Premise(F16459)
	S119= CtrlPC=0                                              Premise(F16751)
	S120= CtrlPCInc=0                                           Premise(F16752)
	S121= PC[NIA]=addr+4                                        PC-Hold(S51,S119,S120)
	S122= CtrlALUOut=1                                          Premise(F16759)
	S123= CtrlCAReg=1                                           Premise(F16761)
	S124= CtrlDR1bit=1                                          Premise(F16766)
	S125= CtrlIR=0                                              Premise(F16768)
	S126= [IR]={31,rD,rA,rB,1044}                               IR-Hold(S57,S125)
	S127= CtrlOVReg=1                                           Premise(F16771)
	S128= CtrlMux5.1=1                                          Premise(F16780)
	S129= Mux5.Out=a                                            Mux(S93,S128)
	S130= ALU.A=a                                               Path(S129,S94)
	S131= CtrlMux6.1=1                                          Premise(F16781)
	S132= Mux6.Out=b                                            Mux(S96,S131)
	S133= ALU.B=b                                               Path(S132,S97)
	S134= CtrlMux8.1=1                                          Premise(F16783)
	S135= CtrlMux9.1=1                                          Premise(F16784)
	S136= CtrlMux9.2=0                                          Premise(F16785)
	S137= CtrlMux11.1=1                                         Premise(F16794)
	S138= CtrlMux11.2=0                                         Premise(F16795)
	S139= CtrlMux21.1=1                                         Premise(F16807)
	S140= Mux21.Out=1044                                        Mux(S105,S139)
	S141= CU.IRFunc=1044                                        Path(S140,S106)
	S142= CtrlMux23.1=1                                         Premise(F16809)
	S143= Mux23.Out=31                                          Mux(S108,S142)
	S144= CU.Op=31                                              Path(S143,S109)
	S145= CU.Func=alu_add                                       CU(S144,S141)
	S146= Mux8.1=alu_add                                        Path(S145,S98)
	S147= Mux8.Out=alu_add                                      Mux(S146,S134)
	S148= ALU.Func=alu_add                                      Path(S147,S99)
	S149= ALU.Out=a+b                                           ALU(S130,S133,S148)
	S150= Mux9.1=a+b                                            Path(S149,S100)
	S151= Mux9.Out=a+b                                          Mux(S150,S135,S136)
	S152= ALUOut.In=a+b                                         Path(S151,S101)
	S153= [ALUOut]=a+b                                          ALUOut-Write(S152,S122)
	S154= ALU.OV=OverFlow(a+b)                                  ALU(S130,S133,S148)
	S155= Mux54.1=OverFlow(a+b)                                 Path(S154,S115)
	S156= Mux55.1=OverFlow(a+b)                                 Path(S154,S117)
	S157= ALU.CA=Carry(a+b)                                     ALU(S130,S133,S148)
	S158= Mux11.1=Carry(a+b)                                    Path(S157,S102)
	S159= Mux11.Out=Carry(a+b)                                  Mux(S158,S137,S138)
	S160= CAReg.In=Carry(a+b)                                   Path(S159,S103)
	S161= [CAReg]=Carry(a+b)                                    CAReg-Write(S160,S123)
	S162= CtrlMux31.1=1                                         Premise(F16822)
	S163= CtrlMux53.1=1                                         Premise(F16852)
	S164= Mux53.Out=so                                          Mux(S113,S163)
	S165= ORGate.A=so                                           Path(S164,S114)
	S166= CtrlMux54.1=1                                         Premise(F16853)
	S167= CtrlMux54.2=0                                         Premise(F16854)
	S168= Mux54.Out=OverFlow(a+b)                               Mux(S155,S166,S167)
	S169= ORGate.B=OverFlow(a+b)                                Path(S168,S116)
	S170= ORGate.Out=so|OverFlow(a+b)                           ORGate(S165,S169)
	S171= Mux31.1=so|OverFlow(a+b)                              Path(S170,S110)
	S172= Mux31.Out=so|OverFlow(a+b)                            Mux(S171,S162)
	S173= DR1bit.In=so|OverFlow(a+b)                            Path(S172,S111)
	S174= [DR1bit]=so|OverFlow(a+b)                             DR1bit-Write(S173,S124)
	S175= CtrlMux55.1=1                                         Premise(F16855)
	S176= Mux55.Out=OverFlow(a+b)                               Mux(S156,S175)
	S177= OVReg.In=OverFlow(a+b)                                Path(S176,S118)
	S178= [OVReg]=OverFlow(a+b)                                 OVReg-Write(S177,S127)

MEM	S179= CtrlPC=0                                              Premise(F22371)
	S180= CtrlPCInc=0                                           Premise(F22372)
	S181= PC[NIA]=addr+4                                        PC-Hold(S121,S179,S180)
	S182= CtrlALUOut=0                                          Premise(F22379)
	S183= [ALUOut]=a+b                                          ALUOut-Hold(S153,S182)
	S184= CtrlCAReg=0                                           Premise(F22381)
	S185= [CAReg]=Carry(a+b)                                    CAReg-Hold(S161,S184)
	S186= CtrlDR1bit=0                                          Premise(F22386)
	S187= [DR1bit]=so|OverFlow(a+b)                             DR1bit-Hold(S174,S186)
	S188= CtrlIR=0                                              Premise(F22388)
	S189= [IR]={31,rD,rA,rB,1044}                               IR-Hold(S126,S188)
	S190= CtrlOVReg=0                                           Premise(F22391)
	S191= [OVReg]=OverFlow(a+b)                                 OVReg-Hold(S178,S190)

WB	S192= ALUOut.Out=a+b                                        ALUOut-Out(S183)
	S193= CAReg.Out=Carry(a+b)                                  CAReg-Out(S185)
	S194= DR1bit.Out=so|OverFlow(a+b)                           DR1bit-Out(S187)
	S195= IR.Out6_10=rD                                         IR-Out(S189)
	S196= OVReg.Out=OverFlow(a+b)                               OVReg-Out(S191)
	S197= ALUOut.Out=>Mux38.1                                   Premise(F25922)
	S198= Mux38.1=a+b                                           Path(S192,S197)
	S199= Mux38.Out=>GPRegs.WData                               Premise(F25923)
	S200= Mux39.Out=>GPRegs.WReg                                Premise(F26167)
	S201= IR.Out6_10=>Mux39.2                                   Premise(F26184)
	S202= Mux39.2=rD                                            Path(S195,S201)
	S203= CAReg.Out=>Mux62.1                                    Premise(F27814)
	S204= Mux62.1=Carry(a+b)                                    Path(S193,S203)
	S205= Mux62.Out=>XER.CAIn                                   Premise(F27815)
	S206= OVReg.Out=>Mux63.1                                    Premise(F27890)
	S207= Mux63.1=OverFlow(a+b)                                 Path(S196,S206)
	S208= Mux63.Out=>XER.OVIn                                   Premise(F27891)
	S209= DR1bit.Out=>Mux64.1                                   Premise(F27934)
	S210= Mux64.1=so|OverFlow(a+b)                              Path(S194,S209)
	S211= Mux64.Out=>XER.SOIn                                   Premise(F27935)
	S212= CtrlPC=0                                              Premise(F27991)
	S213= CtrlPCInc=0                                           Premise(F27992)
	S214= PC[NIA]=addr+4                                        PC-Hold(S181,S212,S213)
	S215= CtrlGPRegs=1                                          Premise(F27994)
	S216= CtrlXERSO=1                                           Premise(F27995)
	S217= CtrlXEROV=1                                           Premise(F27996)
	S218= CtrlXERCA=1                                           Premise(F27997)
	S219= CtrlMux38.1=1                                         Premise(F28070)
	S220= CtrlMux38.2=0                                         Premise(F28071)
	S221= CtrlMux38.3=0                                         Premise(F28072)
	S222= Mux38.Out=a+b                                         Mux(S198,S219,S220,S221)
	S223= GPRegs.WData=a+b                                      Path(S222,S199)
	S224= CtrlMux39.1=0                                         Premise(F28073)
	S225= CtrlMux39.2=1                                         Premise(F28074)
	S226= Mux39.Out=rD                                          Mux(S202,S224,S225)
	S227= GPRegs.WReg=rD                                        Path(S226,S200)
	S228= GPRegs[rD]=a+b                                        GPRegs-Write(S227,S223,S215)
	S229= CtrlMux62.1=1                                         Premise(F28103)
	S230= Mux62.Out=Carry(a+b)                                  Mux(S204,S229)
	S231= XER.CAIn=Carry(a+b)                                   Path(S230,S205)
	S232= XER[CA]=Carry(a+b)                                    XER-CA-Write(S231,S218)
	S233= CtrlMux63.1=1                                         Premise(F28104)
	S234= Mux63.Out=OverFlow(a+b)                               Mux(S207,S233)
	S235= XER.OVIn=OverFlow(a+b)                                Path(S234,S208)
	S236= XER[OV]=OverFlow(a+b)                                 XER-OV-Write(S235,S217)
	S237= CtrlMux64.1=1                                         Premise(F28105)
	S238= Mux64.Out=so|OverFlow(a+b)                            Mux(S210,S237)
	S239= XER.SOIn=so|OverFlow(a+b)                             Path(S238,S211)
	S240= XER[SO]=so|OverFlow(a+b)                              XER-SO-Write(S239,S216)

WB/	S214= PC[NIA]=addr+4                                        PC-Hold(S181,S212,S213)
	S228= GPRegs[rD]=a+b                                        GPRegs-Write(S227,S223,S215)
	S232= XER[CA]=Carry(a+b)                                    XER-CA-Write(S231,S218)
	S236= XER[OV]=OverFlow(a+b)                                 XER-OV-Write(S235,S217)
	S240= XER[SO]=so|OverFlow(a+b)                              XER-SO-Write(S239,S216)

