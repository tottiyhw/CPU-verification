
------------------------------------- Proof -------------------------------------

/IF	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[NIA]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rD,rA,rB,470}                      Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= GPRegs[rB]=b                                            Premise(F4)

IF	S5= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S6= PC.NIA=addr                                             PC-Out(S1)
	S7= PC.NIA=>Mux40.1                                         Premise(F3929)
	S8= Mux40.1=addr                                            Path(S6,S7)
	S9= Mux40.Out=>IMem.Addr                                    Premise(F3930)
	S10= PIDReg.Out=>Mux41.1                                    Premise(F4213)
	S11= Mux41.1=pid                                            Path(S5,S10)
	S12= Mux41.Out=>IMem.PID                                    Premise(F4214)
	S13= IMem.RData=>Mux44.1                                    Premise(F4545)
	S14= Mux44.Out=>IR.In                                       Premise(F4546)
	S15= CtrlPC=0                                               Premise(F5510)
	S16= CtrlPCInc=1                                            Premise(F5511)
	S17= PC[NIA]=addr+4                                         PC-Write(S1,S15,S16)
	S18= CtrlGPRegs=0                                           Premise(F5513)
	S19= GPRegs[rA]=a                                           GPRegs-Hold(S3,S18)
	S20= GPRegs[rB]=b                                           GPRegs-Hold(S4,S18)
	S21= CtrlIR=1                                               Premise(F5524)
	S22= CtrlMux40.1=1                                          Premise(F5594)
	S23= Mux40.Out=addr                                         Mux(S8,S22)
	S24= IMem.Addr=addr                                         Path(S23,S9)
	S25= CtrlMux41.1=1                                          Premise(F5595)
	S26= Mux41.Out=pid                                          Mux(S11,S25)
	S27= IMem.PID=pid                                           Path(S26,S12)
	S28= IMem.RData={31,rD,rA,rB,470}                           IMem-Read(S2,S27,S24)
	S29= Mux44.1={31,rD,rA,rB,470}                              Path(S28,S13)
	S30= CtrlMux44.1=1                                          Premise(F5598)
	S31= Mux44.Out={31,rD,rA,rB,470}                            Mux(S29,S30)
	S32= IR.In={31,rD,rA,rB,470}                                Path(S31,S14)
	S33= [IR]={31,rD,rA,rB,470}                                 IR-Write(S32,S21)

ID	S34= IR.Out11_15=rA                                         IR-Out(S33)
	S35= IR.Out16_20=rB                                         IR-Out(S33)
	S36= Mux1.Out=>A.In                                         Premise(F5626)
	S37= GPRegs.RData1=>Mux1.3                                  Premise(F5679)
	S38= Mux10.Out=>B.In                                        Premise(F6936)
	S39= GPRegs.RData2=>Mux10.5                                 Premise(F6983)
	S40= IR.Out11_15=>Mux33.1                                   Premise(F8575)
	S41= Mux33.1=rA                                             Path(S34,S40)
	S42= Mux33.Out=>GPRegs.RReg1                                Premise(F8576)
	S43= IR.Out16_20=>Mux34.1                                   Premise(F8837)
	S44= Mux34.1=rB                                             Path(S35,S43)
	S45= Mux34.Out=>GPRegs.RReg2                                Premise(F8838)
	S46= CtrlPC=0                                               Premise(F11130)
	S47= CtrlPCInc=0                                            Premise(F11131)
	S48= PC[NIA]=addr+4                                         PC-Hold(S17,S46,S47)
	S49= CtrlA=1                                                Premise(F11134)
	S50= CtrlB=1                                                Premise(F11136)
	S51= CtrlIR=0                                               Premise(F11144)
	S52= [IR]={31,rD,rA,rB,470}                                 IR-Hold(S33,S51)
	S53= CtrlMux1.1=0                                           Premise(F11149)
	S54= CtrlMux1.2=0                                           Premise(F11150)
	S55= CtrlMux1.3=1                                           Premise(F11151)
	S56= CtrlMux1.4=0                                           Premise(F11152)
	S57= CtrlMux10.1=0                                          Premise(F11165)
	S58= CtrlMux10.2=0                                          Premise(F11166)
	S59= CtrlMux10.3=0                                          Premise(F11167)
	S60= CtrlMux10.4=0                                          Premise(F11168)
	S61= CtrlMux10.5=1                                          Premise(F11169)
	S62= CtrlMux10.6=0                                          Premise(F11170)
	S63= CtrlMux10.7=0                                          Premise(F11171)
	S64= CtrlMux10.8=0                                          Premise(F11172)
	S65= CtrlMux33.1=1                                          Premise(F11203)
	S66= Mux33.Out=rA                                           Mux(S41,S65)
	S67= GPRegs.RReg1=rA                                        Path(S66,S42)
	S68= GPRegs.RData1=a                                        GPRegs-Read(S19,S67)
	S69= Mux1.3=a                                               Path(S68,S37)
	S70= Mux1.Out=a                                             Mux(S69,S53,S54,S55,S56)
	S71= A.In=a                                                 Path(S70,S36)
	S72= [A]=a                                                  A-Write(S71,S49)
	S73= CtrlMux34.1=1                                          Premise(F11204)
	S74= CtrlMux34.2=0                                          Premise(F11205)
	S75= Mux34.Out=rB                                           Mux(S44,S73,S74)
	S76= GPRegs.RReg2=rB                                        Path(S75,S45)
	S77= GPRegs.RData2=b                                        GPRegs-Read(S20,S76)
	S78= Mux10.5=b                                              Path(S77,S39)
	S79= Mux10.Out=b                                            Mux(S78,S57,S58,S59,S60,S61,S62,S63,S64)
	S80= B.In=b                                                 Path(S79,S38)
	S81= [B]=b                                                  B-Write(S80,S50)

EX	S82= IR.Out0_5=31                                           IR-Out(S52)
	S83= IR.Out21_31=470                                        IR-Out(S52)
	S84= A.Out=a                                                A-Out(S72)
	S85= B.Out=b                                                B-Out(S81)
	S86= IR.Out21_31=>Mux21.1                                   Premise(F13089)
	S87= Mux21.1=470                                            Path(S83,S86)
	S88= Mux21.Out=>CU.IRFunc                                   Premise(F13090)
	S89= IR.Out0_5=>Mux23.1                                     Premise(F13317)
	S90= Mux23.1=31                                             Path(S82,S89)
	S91= Mux23.Out=>CU.Op                                       Premise(F13318)
	S92= A.Out=>Mux47.1                                         Premise(F16081)
	S93= Mux47.1=a                                              Path(S84,S92)
	S94= Mux47.Out=>MDU.A                                       Premise(F16082)
	S95= B.Out=>Mux48.1                                         Premise(F16115)
	S96= Mux48.1=b                                              Path(S85,S95)
	S97= Mux48.Out=>MDU.B                                       Premise(F16116)
	S98= CU.Func=>Mux49.1                                       Premise(F16149)
	S99= Mux49.Out=>MDU.Func                                    Premise(F16150)
	S100= Mux50.Out=>MDUOut.In                                  Premise(F16184)
	S101= MDU.Out32_63=>Mux50.3                                 Premise(F16209)
	S102= CtrlPC=0                                              Premise(F16750)
	S103= CtrlPCInc=0                                           Premise(F16751)
	S104= PC[NIA]=addr+4                                        PC-Hold(S48,S102,S103)
	S105= CtrlIR=0                                              Premise(F16764)
	S106= [IR]={31,rD,rA,rB,470}                                IR-Hold(S52,S105)
	S107= CtrlMDUOut=1                                          Premise(F16766)
	S108= CtrlMux21.1=1                                         Premise(F16806)
	S109= Mux21.Out=470                                         Mux(S87,S108)
	S110= CU.IRFunc=470                                         Path(S109,S88)
	S111= CtrlMux23.1=1                                         Premise(F16808)
	S112= Mux23.Out=31                                          Mux(S90,S111)
	S113= CU.Op=31                                              Path(S112,S91)
	S114= CU.Func=mdu_mul                                       CU(S113,S110)
	S115= Mux49.1=mdu_mul                                       Path(S114,S98)
	S116= CtrlMux47.1=1                                         Premise(F16841)
	S117= Mux47.Out=a                                           Mux(S93,S116)
	S118= MDU.A=a                                               Path(S117,S94)
	S119= CtrlMux48.1=1                                         Premise(F16842)
	S120= Mux48.Out=b                                           Mux(S96,S119)
	S121= MDU.B=b                                               Path(S120,S97)
	S122= CtrlMux49.1=1                                         Premise(F16843)
	S123= Mux49.Out=mdu_mul                                     Mux(S115,S122)
	S124= MDU.Func=mdu_mul                                      Path(S123,S99)
	S125= MDU.Out32_63=(a¡Áb)[32:63]                             MDU(S118,S121,S124)
	S126= Mux50.3=(a¡Áb)[32:63]                                  Path(S125,S101)
	S127= CtrlMux50.1=0                                         Premise(F16844)
	S128= CtrlMux50.2=0                                         Premise(F16845)
	S129= CtrlMux50.3=1                                         Premise(F16846)
	S130= Mux50.Out=(a¡Áb)[32:63]                                Mux(S126,S127,S128,S129)
	S131= MDUOut.In=(a¡Áb)[32:63]                                Path(S130,S100)
	S132= [MDUOut]=(a¡Áb)[32:63]                                 MDUOut-Write(S131,S107)

MEM	S133= CtrlPC=0                                              Premise(F22370)
	S134= CtrlPCInc=0                                           Premise(F22371)
	S135= PC[NIA]=addr+4                                        PC-Hold(S104,S133,S134)
	S136= CtrlIR=0                                              Premise(F22384)
	S137= [IR]={31,rD,rA,rB,470}                                IR-Hold(S106,S136)
	S138= CtrlMDUOut=0                                          Premise(F22386)
	S139= [MDUOut]=(a¡Áb)[32:63]                                 MDUOut-Hold(S132,S138)

WB	S140= IR.Out6_10=rD                                         IR-Out(S137)
	S141= MDUOut.Out=(a¡Áb)[32:63]                               MDUOut-Out(S139)
	S142= Mux38.Out=>GPRegs.WData                               Premise(F25922)
	S143= MDUOut.Out=>Mux38.2                                   Premise(F26095)
	S144= Mux38.2=(a¡Áb)[32:63]                                  Path(S141,S143)
	S145= Mux39.Out=>GPRegs.WReg                                Premise(F26166)
	S146= IR.Out6_10=>Mux39.2                                   Premise(F26183)
	S147= Mux39.2=rD                                            Path(S140,S146)
	S148= CtrlPC=0                                              Premise(F27990)
	S149= CtrlPCInc=0                                           Premise(F27991)
	S150= PC[NIA]=addr+4                                        PC-Hold(S135,S148,S149)
	S151= CtrlGPRegs=1                                          Premise(F27993)
	S152= CtrlMux38.1=0                                         Premise(F28069)
	S153= CtrlMux38.2=1                                         Premise(F28070)
	S154= CtrlMux38.3=0                                         Premise(F28071)
	S155= Mux38.Out=(a¡Áb)[32:63]                                Mux(S144,S152,S153,S154)
	S156= GPRegs.WData=(a¡Áb)[32:63]                             Path(S155,S142)
	S157= CtrlMux39.1=0                                         Premise(F28072)
	S158= CtrlMux39.2=1                                         Premise(F28073)
	S159= Mux39.Out=rD                                          Mux(S147,S157,S158)
	S160= GPRegs.WReg=rD                                        Path(S159,S145)
	S161= GPRegs[rD]=(a¡Áb)[32:63]                               GPRegs-Write(S160,S156,S151)

WB/	S150= PC[NIA]=addr+4                                        PC-Hold(S135,S148,S149)
	S161= GPRegs[rD]=(a¡Áb)[32:63]                               GPRegs-Write(S160,S156,S151)

