
------------------------------------- Proof -------------------------------------

/IF	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[NIA]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rD,rA,rB,919}                      Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= GPRegs[rB]=b                                            Premise(F4)
	S5= XER[SO]=so                                              Premise(F5)

IF	S6= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S7= PC.NIA=addr                                             PC-Out(S1)
	S8= PC.NIA=>Mux40.1                                         Premise(F3930)
	S9= Mux40.1=addr                                            Path(S7,S8)
	S10= Mux40.Out=>IMem.Addr                                   Premise(F3931)
	S11= PIDReg.Out=>Mux41.1                                    Premise(F4214)
	S12= Mux41.1=pid                                            Path(S6,S11)
	S13= Mux41.Out=>IMem.PID                                    Premise(F4215)
	S14= IMem.RData=>Mux44.1                                    Premise(F4546)
	S15= Mux44.Out=>IR.In                                       Premise(F4547)
	S16= CtrlPC=0                                               Premise(F5511)
	S17= CtrlPCInc=1                                            Premise(F5512)
	S18= PC[NIA]=addr+4                                         PC-Write(S1,S16,S17)
	S19= CtrlGPRegs=0                                           Premise(F5514)
	S20= GPRegs[rA]=a                                           GPRegs-Hold(S3,S19)
	S21= GPRegs[rB]=b                                           GPRegs-Hold(S4,S19)
	S22= CtrlXERSO=0                                            Premise(F5515)
	S23= XER[SO]=so                                             XER-SO-Hold(S5,S22)
	S24= CtrlIR=1                                               Premise(F5528)
	S25= CtrlMux40.1=1                                          Premise(F5595)
	S26= Mux40.Out=addr                                         Mux(S9,S25)
	S27= IMem.Addr=addr                                         Path(S26,S10)
	S28= CtrlMux41.1=1                                          Premise(F5596)
	S29= Mux41.Out=pid                                          Mux(S12,S28)
	S30= IMem.PID=pid                                           Path(S29,S13)
	S31= IMem.RData={31,rD,rA,rB,919}                           IMem-Read(S2,S30,S27)
	S32= Mux44.1={31,rD,rA,rB,919}                              Path(S31,S14)
	S33= CtrlMux44.1=1                                          Premise(F5599)
	S34= Mux44.Out={31,rD,rA,rB,919}                            Mux(S32,S33)
	S35= IR.In={31,rD,rA,rB,919}                                Path(S34,S15)
	S36= [IR]={31,rD,rA,rB,919}                                 IR-Write(S35,S24)

ID	S37= IR.Out11_15=rA                                         IR-Out(S36)
	S38= IR.Out16_20=rB                                         IR-Out(S36)
	S39= Mux1.Out=>A.In                                         Premise(F5627)
	S40= GPRegs.RData1=>Mux1.3                                  Premise(F5680)
	S41= Mux10.Out=>B.In                                        Premise(F6937)
	S42= GPRegs.RData2=>Mux10.5                                 Premise(F6984)
	S43= IR.Out11_15=>Mux33.1                                   Premise(F8576)
	S44= Mux33.1=rA                                             Path(S37,S43)
	S45= Mux33.Out=>GPRegs.RReg1                                Premise(F8577)
	S46= IR.Out16_20=>Mux34.1                                   Premise(F8838)
	S47= Mux34.1=rB                                             Path(S38,S46)
	S48= Mux34.Out=>GPRegs.RReg2                                Premise(F8839)
	S49= CtrlPC=0                                               Premise(F11131)
	S50= CtrlPCInc=0                                            Premise(F11132)
	S51= PC[NIA]=addr+4                                         PC-Hold(S18,S49,S50)
	S52= CtrlXERSO=0                                            Premise(F11135)
	S53= XER[SO]=so                                             XER-SO-Hold(S23,S52)
	S54= CtrlA=1                                                Premise(F11140)
	S55= CtrlB=1                                                Premise(F11142)
	S56= CtrlIR=0                                               Premise(F11148)
	S57= [IR]={31,rD,rA,rB,919}                                 IR-Hold(S36,S56)
	S58= CtrlMux1.1=0                                           Premise(F11153)
	S59= CtrlMux1.2=0                                           Premise(F11154)
	S60= CtrlMux1.3=1                                           Premise(F11155)
	S61= CtrlMux1.4=0                                           Premise(F11156)
	S62= CtrlMux10.1=0                                          Premise(F11166)
	S63= CtrlMux10.2=0                                          Premise(F11167)
	S64= CtrlMux10.3=0                                          Premise(F11168)
	S65= CtrlMux10.4=0                                          Premise(F11169)
	S66= CtrlMux10.5=1                                          Premise(F11170)
	S67= CtrlMux10.6=0                                          Premise(F11171)
	S68= CtrlMux10.7=0                                          Premise(F11172)
	S69= CtrlMux10.8=0                                          Premise(F11173)
	S70= CtrlMux33.1=1                                          Premise(F11204)
	S71= Mux33.Out=rA                                           Mux(S44,S70)
	S72= GPRegs.RReg1=rA                                        Path(S71,S45)
	S73= GPRegs.RData1=a                                        GPRegs-Read(S20,S72)
	S74= Mux1.3=a                                               Path(S73,S40)
	S75= Mux1.Out=a                                             Mux(S74,S58,S59,S60,S61)
	S76= A.In=a                                                 Path(S75,S39)
	S77= [A]=a                                                  A-Write(S76,S54)
	S78= CtrlMux34.1=1                                          Premise(F11205)
	S79= CtrlMux34.2=0                                          Premise(F11206)
	S80= Mux34.Out=rB                                           Mux(S47,S78,S79)
	S81= GPRegs.RReg2=rB                                        Path(S80,S48)
	S82= GPRegs.RData2=b                                        GPRegs-Read(S21,S81)
	S83= Mux10.5=b                                              Path(S82,S42)
	S84= Mux10.Out=b                                            Mux(S83,S62,S63,S64,S65,S66,S67,S68,S69)
	S85= B.In=b                                                 Path(S84,S41)
	S86= [B]=b                                                  B-Write(S85,S55)

EX	S87= XER.SOOut=so                                           XER-SO-Out(S53)
	S88= IR.Out0_5=31                                           IR-Out(S57)
	S89= IR.Out21_31=919                                        IR-Out(S57)
	S90= A.Out=a                                                A-Out(S77)
	S91= B.Out=b                                                B-Out(S86)
	S92= IR.Out21_31=>Mux21.1                                   Premise(F13090)
	S93= Mux21.1=919                                            Path(S89,S92)
	S94= Mux21.Out=>CU.IRFunc                                   Premise(F13091)
	S95= IR.Out0_5=>Mux23.1                                     Premise(F13318)
	S96= Mux23.1=31                                             Path(S88,S95)
	S97= Mux23.Out=>CU.Op                                       Premise(F13319)
	S98= Mux24.Out=>DataCmb.A                                   Premise(F13603)
	S99= MDU.CMP=>Mux24.3                                       Premise(F13684)
	S100= Mux25.Out=>DataCmb.B                                  Premise(F13709)
	S101= XER.SOOut=>Mux25.2                                    Premise(F13736)
	S102= Mux25.2=so                                            Path(S87,S101)
	S103= DataCmb.Out=>Mux32.1                                  Premise(F14090)
	S104= Mux32.Out=>DR4bit.In                                  Premise(F14091)
	S105= A.Out=>Mux47.1                                        Premise(F16082)
	S106= Mux47.1=a                                             Path(S90,S105)
	S107= Mux47.Out=>MDU.A                                      Premise(F16083)
	S108= B.Out=>Mux48.1                                        Premise(F16116)
	S109= Mux48.1=b                                             Path(S91,S108)
	S110= Mux48.Out=>MDU.B                                      Premise(F16117)
	S111= CU.Func=>Mux49.1                                      Premise(F16150)
	S112= Mux49.Out=>MDU.Func                                   Premise(F16151)
	S113= MDU.Out0_31=>Mux50.1                                  Premise(F16184)
	S114= Mux50.Out=>MDUOut.In                                  Premise(F16185)
	S115= CtrlPC=0                                              Premise(F16751)
	S116= CtrlPCInc=0                                           Premise(F16752)
	S117= PC[NIA]=addr+4                                        PC-Hold(S51,S115,S116)
	S118= CtrlDR4bit=1                                          Premise(F16767)
	S119= CtrlIR=0                                              Premise(F16768)
	S120= [IR]={31,rD,rA,rB,919}                                IR-Hold(S57,S119)
	S121= CtrlMDUOut=1                                          Premise(F16770)
	S122= CtrlMux21.1=1                                         Premise(F16807)
	S123= Mux21.Out=919                                         Mux(S93,S122)
	S124= CU.IRFunc=919                                         Path(S123,S94)
	S125= CtrlMux23.1=1                                         Premise(F16809)
	S126= Mux23.Out=31                                          Mux(S96,S125)
	S127= CU.Op=31                                              Path(S126,S97)
	S128= CU.Func=mdu_divu                                      CU(S127,S124)
	S129= Mux49.1=mdu_divu                                      Path(S128,S111)
	S130= CtrlMux24.1=0                                         Premise(F16810)
	S131= CtrlMux24.2=0                                         Premise(F16811)
	S132= CtrlMux24.3=1                                         Premise(F16812)
	S133= CtrlMux24.4=0                                         Premise(F16813)
	S134= CtrlMux25.1=0                                         Premise(F16814)
	S135= CtrlMux25.2=1                                         Premise(F16815)
	S136= Mux25.Out=so                                          Mux(S102,S134,S135)
	S137= DataCmb.B=so                                          Path(S136,S100)
	S138= CtrlMux32.1=1                                         Premise(F16823)
	S139= CtrlMux47.1=1                                         Premise(F16842)
	S140= Mux47.Out=a                                           Mux(S106,S139)
	S141= MDU.A=a                                               Path(S140,S107)
	S142= CtrlMux48.1=1                                         Premise(F16843)
	S143= Mux48.Out=b                                           Mux(S109,S142)
	S144= MDU.B=b                                               Path(S143,S110)
	S145= CtrlMux49.1=1                                         Premise(F16844)
	S146= Mux49.Out=mdu_divu                                    Mux(S129,S145)
	S147= MDU.Func=mdu_divu                                     Path(S146,S112)
	S148= MDU.Out0_31=a/b                                       MDU(S141,S144,S147)
	S149= Mux50.1=a/b                                           Path(S148,S113)
	S150= MDU.CMP=Compare0(a/b)                                 MDU(S141,S144,S147)
	S151= Mux24.3=Compare0(a/b)                                 Path(S150,S99)
	S152= Mux24.Out=Compare0(a/b)                               Mux(S151,S130,S131,S132,S133)
	S153= DataCmb.A=Compare0(a/b)                               Path(S152,S98)
	S154= DataCmb.Out={Compare0(a/b),so}                        DataCmb(S153,S137)
	S155= Mux32.1={Compare0(a/b),so}                            Path(S154,S103)
	S156= Mux32.Out={Compare0(a/b),so}                          Mux(S155,S138)
	S157= DR4bit.In={Compare0(a/b),so}                          Path(S156,S104)
	S158= [DR4bit]={Compare0(a/b),so}                           DR4bit-Write(S157,S118)
	S159= CtrlMux50.1=1                                         Premise(F16845)
	S160= CtrlMux50.2=0                                         Premise(F16846)
	S161= CtrlMux50.3=0                                         Premise(F16847)
	S162= Mux50.Out=a/b                                         Mux(S149,S159,S160,S161)
	S163= MDUOut.In=a/b                                         Path(S162,S114)
	S164= [MDUOut]=a/b                                          MDUOut-Write(S163,S121)

MEM	S165= CtrlPC=0                                              Premise(F22371)
	S166= CtrlPCInc=0                                           Premise(F22372)
	S167= PC[NIA]=addr+4                                        PC-Hold(S117,S165,S166)
	S168= CtrlDR4bit=0                                          Premise(F22387)
	S169= [DR4bit]={Compare0(a/b),so}                           DR4bit-Hold(S158,S168)
	S170= CtrlIR=0                                              Premise(F22388)
	S171= [IR]={31,rD,rA,rB,919}                                IR-Hold(S120,S170)
	S172= CtrlMDUOut=0                                          Premise(F22390)
	S173= [MDUOut]=a/b                                          MDUOut-Hold(S164,S172)

WB	S174= DR4bit.Out={Compare0(a/b),so}                         DR4bit-Out(S169)
	S175= IR.Out6_10=rD                                         IR-Out(S171)
	S176= MDUOut.Out=a/b                                        MDUOut-Out(S173)
	S177= DR4bit.Out=>Mux15.1                                   Premise(F24152)
	S178= Mux15.1={Compare0(a/b),so}                            Path(S174,S177)
	S179= Mux15.Out=>CRRegs.CR0In                               Premise(F24153)
	S180= Mux38.Out=>GPRegs.WData                               Premise(F25923)
	S181= MDUOut.Out=>Mux38.2                                   Premise(F26096)
	S182= Mux38.2=a/b                                           Path(S176,S181)
	S183= Mux39.Out=>GPRegs.WReg                                Premise(F26167)
	S184= IR.Out6_10=>Mux39.2                                   Premise(F26184)
	S185= Mux39.2=rD                                            Path(S175,S184)
	S186= CtrlPC=0                                              Premise(F27991)
	S187= CtrlPCInc=0                                           Premise(F27992)
	S188= PC[NIA]=addr+4                                        PC-Hold(S167,S186,S187)
	S189= CtrlGPRegs=1                                          Premise(F27994)
	S190= CtrlCRRegsCR0=1                                       Premise(F27999)
	S191= CtrlMux15.1=1                                         Premise(F28039)
	S192= Mux15.Out={Compare0(a/b),so}                          Mux(S178,S191)
	S193= CRRegs.CR0In={Compare0(a/b),so}                       Path(S192,S179)
	S194= CRRegs[CR0]={Compare0(a/b),so}                        CRRegs-CR0-Write(S193,S190)
	S195= CtrlMux38.1=0                                         Premise(F28070)
	S196= CtrlMux38.2=1                                         Premise(F28071)
	S197= CtrlMux38.3=0                                         Premise(F28072)
	S198= Mux38.Out=a/b                                         Mux(S182,S195,S196,S197)
	S199= GPRegs.WData=a/b                                      Path(S198,S180)
	S200= CtrlMux39.1=0                                         Premise(F28073)
	S201= CtrlMux39.2=1                                         Premise(F28074)
	S202= Mux39.Out=rD                                          Mux(S185,S200,S201)
	S203= GPRegs.WReg=rD                                        Path(S202,S183)
	S204= GPRegs[rD]=a/b                                        GPRegs-Write(S203,S199,S189)

WB/	S188= PC[NIA]=addr+4                                        PC-Hold(S167,S186,S187)
	S194= CRRegs[CR0]={Compare0(a/b),so}                        CRRegs-CR0-Write(S193,S190)
	S204= GPRegs[rD]=a/b                                        GPRegs-Write(S203,S199,S189)

