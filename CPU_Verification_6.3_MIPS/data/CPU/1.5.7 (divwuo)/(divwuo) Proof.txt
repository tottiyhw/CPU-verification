
------------------------------------- Proof -------------------------------------

/IF	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[NIA]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rD,rA,rB,1942}                     Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= GPRegs[rB]=b                                            Premise(F4)
	S5= XER[SO]=so                                              Premise(F5)

IF	S6= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S7= PC.NIA=addr                                             PC-Out(S1)
	S8= PC.NIA=>Mux40.1                                         Premise(F3930)
	S9= Mux40.1=addr                                            Path(S7,S8)
	S10= Mux40.Out=>IMem.Addr                                   Premise(F3931)
	S11= PIDReg.Out=>Mux41.1                                    Premise(F4214)
	S12= Mux41.1=pid                                            Path(S6,S11)
	S13= Mux41.Out=>IMem.PID                                    Premise(F4215)
	S14= IMem.RData=>Mux44.1                                    Premise(F4546)
	S15= Mux44.Out=>IR.In                                       Premise(F4547)
	S16= CtrlPC=0                                               Premise(F5511)
	S17= CtrlPCInc=1                                            Premise(F5512)
	S18= PC[NIA]=addr+4                                         PC-Write(S1,S16,S17)
	S19= CtrlGPRegs=0                                           Premise(F5514)
	S20= GPRegs[rA]=a                                           GPRegs-Hold(S3,S19)
	S21= GPRegs[rB]=b                                           GPRegs-Hold(S4,S19)
	S22= CtrlXERSO=0                                            Premise(F5515)
	S23= XER[SO]=so                                             XER-SO-Hold(S5,S22)
	S24= CtrlIR=1                                               Premise(F5528)
	S25= CtrlMux40.1=1                                          Premise(F5595)
	S26= Mux40.Out=addr                                         Mux(S9,S25)
	S27= IMem.Addr=addr                                         Path(S26,S10)
	S28= CtrlMux41.1=1                                          Premise(F5596)
	S29= Mux41.Out=pid                                          Mux(S12,S28)
	S30= IMem.PID=pid                                           Path(S29,S13)
	S31= IMem.RData={31,rD,rA,rB,1942}                          IMem-Read(S2,S30,S27)
	S32= Mux44.1={31,rD,rA,rB,1942}                             Path(S31,S14)
	S33= CtrlMux44.1=1                                          Premise(F5599)
	S34= Mux44.Out={31,rD,rA,rB,1942}                           Mux(S32,S33)
	S35= IR.In={31,rD,rA,rB,1942}                               Path(S34,S15)
	S36= [IR]={31,rD,rA,rB,1942}                                IR-Write(S35,S24)

ID	S37= IR.Out11_15=rA                                         IR-Out(S36)
	S38= IR.Out16_20=rB                                         IR-Out(S36)
	S39= Mux1.Out=>A.In                                         Premise(F5627)
	S40= GPRegs.RData1=>Mux1.3                                  Premise(F5680)
	S41= Mux10.Out=>B.In                                        Premise(F6937)
	S42= GPRegs.RData2=>Mux10.5                                 Premise(F6984)
	S43= IR.Out11_15=>Mux33.1                                   Premise(F8576)
	S44= Mux33.1=rA                                             Path(S37,S43)
	S45= Mux33.Out=>GPRegs.RReg1                                Premise(F8577)
	S46= IR.Out16_20=>Mux34.1                                   Premise(F8838)
	S47= Mux34.1=rB                                             Path(S38,S46)
	S48= Mux34.Out=>GPRegs.RReg2                                Premise(F8839)
	S49= CtrlPC=0                                               Premise(F11131)
	S50= CtrlPCInc=0                                            Premise(F11132)
	S51= PC[NIA]=addr+4                                         PC-Hold(S18,S49,S50)
	S52= CtrlXERSO=0                                            Premise(F11135)
	S53= XER[SO]=so                                             XER-SO-Hold(S23,S52)
	S54= CtrlA=1                                                Premise(F11138)
	S55= CtrlB=1                                                Premise(F11140)
	S56= CtrlIR=0                                               Premise(F11148)
	S57= [IR]={31,rD,rA,rB,1942}                                IR-Hold(S36,S56)
	S58= CtrlMux1.1=0                                           Premise(F11153)
	S59= CtrlMux1.2=0                                           Premise(F11154)
	S60= CtrlMux1.3=1                                           Premise(F11155)
	S61= CtrlMux1.4=0                                           Premise(F11156)
	S62= CtrlMux10.1=0                                          Premise(F11166)
	S63= CtrlMux10.2=0                                          Premise(F11167)
	S64= CtrlMux10.3=0                                          Premise(F11168)
	S65= CtrlMux10.4=0                                          Premise(F11169)
	S66= CtrlMux10.5=1                                          Premise(F11170)
	S67= CtrlMux10.6=0                                          Premise(F11171)
	S68= CtrlMux10.7=0                                          Premise(F11172)
	S69= CtrlMux10.8=0                                          Premise(F11173)
	S70= CtrlMux33.1=1                                          Premise(F11204)
	S71= Mux33.Out=rA                                           Mux(S44,S70)
	S72= GPRegs.RReg1=rA                                        Path(S71,S45)
	S73= GPRegs.RData1=a                                        GPRegs-Read(S20,S72)
	S74= Mux1.3=a                                               Path(S73,S40)
	S75= Mux1.Out=a                                             Mux(S74,S58,S59,S60,S61)
	S76= A.In=a                                                 Path(S75,S39)
	S77= [A]=a                                                  A-Write(S76,S54)
	S78= CtrlMux34.1=1                                          Premise(F11205)
	S79= CtrlMux34.2=0                                          Premise(F11206)
	S80= Mux34.Out=rB                                           Mux(S47,S78,S79)
	S81= GPRegs.RReg2=rB                                        Path(S80,S48)
	S82= GPRegs.RData2=b                                        GPRegs-Read(S21,S81)
	S83= Mux10.5=b                                              Path(S82,S42)
	S84= Mux10.Out=b                                            Mux(S83,S62,S63,S64,S65,S66,S67,S68,S69)
	S85= B.In=b                                                 Path(S84,S41)
	S86= [B]=b                                                  B-Write(S85,S55)

EX	S87= XER.SOOut=so                                           XER-SO-Out(S53)
	S88= IR.Out0_5=31                                           IR-Out(S57)
	S89= IR.Out21_31=1942                                       IR-Out(S57)
	S90= A.Out=a                                                A-Out(S77)
	S91= B.Out=b                                                B-Out(S86)
	S92= IR.Out21_31=>Mux21.1                                   Premise(F13090)
	S93= Mux21.1=1942                                           Path(S89,S92)
	S94= Mux21.Out=>CU.IRFunc                                   Premise(F13091)
	S95= IR.Out0_5=>Mux23.1                                     Premise(F13318)
	S96= Mux23.1=31                                             Path(S88,S95)
	S97= Mux23.Out=>CU.Op                                       Premise(F13319)
	S98= ORGate.Out=>Mux31.1                                    Premise(F14034)
	S99= Mux31.Out=>DR1bit.In                                   Premise(F14035)
	S100= A.Out=>Mux47.1                                        Premise(F16082)
	S101= Mux47.1=a                                             Path(S90,S100)
	S102= Mux47.Out=>MDU.A                                      Premise(F16083)
	S103= B.Out=>Mux48.1                                        Premise(F16116)
	S104= Mux48.1=b                                             Path(S91,S103)
	S105= Mux48.Out=>MDU.B                                      Premise(F16117)
	S106= CU.Func=>Mux49.1                                      Premise(F16150)
	S107= Mux49.Out=>MDU.Func                                   Premise(F16151)
	S108= MDU.Out0_31=>Mux50.1                                  Premise(F16184)
	S109= Mux50.Out=>MDUOut.In                                  Premise(F16185)
	S110= XER.SOOut=>Mux53.1                                    Premise(F16346)
	S111= Mux53.1=so                                            Path(S87,S110)
	S112= Mux53.Out=>ORGate.A                                   Premise(F16347)
	S113= Mux54.Out=>ORGate.B                                   Premise(F16403)
	S114= MDU.OV=>Mux54.2                                       Premise(F16446)
	S115= CtrlPC=0                                              Premise(F16751)
	S116= CtrlPCInc=0                                           Premise(F16752)
	S117= PC[NIA]=addr+4                                        PC-Hold(S51,S115,S116)
	S118= CtrlDR1bit=1                                          Premise(F16766)
	S119= CtrlIR=0                                              Premise(F16768)
	S120= [IR]={31,rD,rA,rB,1942}                               IR-Hold(S57,S119)
	S121= CtrlMDUOut=1                                          Premise(F16770)
	S122= CtrlMux21.1=1                                         Premise(F16807)
	S123= Mux21.Out=1942                                        Mux(S93,S122)
	S124= CU.IRFunc=1942                                        Path(S123,S94)
	S125= CtrlMux23.1=1                                         Premise(F16809)
	S126= Mux23.Out=31                                          Mux(S96,S125)
	S127= CU.Op=31                                              Path(S126,S97)
	S128= CU.Func=mdu_divu                                      CU(S127,S124)
	S129= Mux49.1=mdu_divu                                      Path(S128,S106)
	S130= CtrlMux31.1=1                                         Premise(F16822)
	S131= CtrlMux47.1=1                                         Premise(F16842)
	S132= Mux47.Out=a                                           Mux(S101,S131)
	S133= MDU.A=a                                               Path(S132,S102)
	S134= CtrlMux48.1=1                                         Premise(F16843)
	S135= Mux48.Out=b                                           Mux(S104,S134)
	S136= MDU.B=b                                               Path(S135,S105)
	S137= CtrlMux49.1=1                                         Premise(F16844)
	S138= Mux49.Out=mdu_divu                                    Mux(S129,S137)
	S139= MDU.Func=mdu_divu                                     Path(S138,S107)
	S140= MDU.Out0_31=a/b                                       MDU(S133,S136,S139)
	S141= Mux50.1=a/b                                           Path(S140,S108)
	S142= MDU.OV=OverFlow(a/b)                                  MDU(S133,S136,S139)
	S143= Mux54.2=OverFlow(a/b)                                 Path(S142,S114)
	S144= CtrlMux50.1=1                                         Premise(F16845)
	S145= CtrlMux50.2=0                                         Premise(F16846)
	S146= CtrlMux50.3=0                                         Premise(F16847)
	S147= Mux50.Out=a/b                                         Mux(S141,S144,S145,S146)
	S148= MDUOut.In=a/b                                         Path(S147,S109)
	S149= [MDUOut]=a/b                                          MDUOut-Write(S148,S121)
	S150= CtrlMux53.1=1                                         Premise(F16852)
	S151= Mux53.Out=so                                          Mux(S111,S150)
	S152= ORGate.A=so                                           Path(S151,S112)
	S153= CtrlMux54.1=0                                         Premise(F16853)
	S154= CtrlMux54.2=1                                         Premise(F16854)
	S155= Mux54.Out=OverFlow(a/b)                               Mux(S143,S153,S154)
	S156= ORGate.B=OverFlow(a/b)                                Path(S155,S113)
	S157= ORGate.Out=so|OverFlow(a/b)                           ORGate(S152,S156)
	S158= Mux31.1=so|OverFlow(a/b)                              Path(S157,S98)
	S159= Mux31.Out=so|OverFlow(a/b)                            Mux(S158,S130)
	S160= DR1bit.In=so|OverFlow(a/b)                            Path(S159,S99)
	S161= [DR1bit]=so|OverFlow(a/b)                             DR1bit-Write(S160,S118)

MEM	S162= CtrlPC=0                                              Premise(F22371)
	S163= CtrlPCInc=0                                           Premise(F22372)
	S164= PC[NIA]=addr+4                                        PC-Hold(S117,S162,S163)
	S165= CtrlDR1bit=0                                          Premise(F22386)
	S166= [DR1bit]=so|OverFlow(a/b)                             DR1bit-Hold(S161,S165)
	S167= CtrlIR=0                                              Premise(F22388)
	S168= [IR]={31,rD,rA,rB,1942}                               IR-Hold(S120,S167)
	S169= CtrlMDUOut=0                                          Premise(F22390)
	S170= [MDUOut]=a/b                                          MDUOut-Hold(S149,S169)

WB	S171= DR1bit.Out=so|OverFlow(a/b)                           DR1bit-Out(S166)
	S172= IR.Out6_10=rD                                         IR-Out(S168)
	S173= MDUOut.Out=a/b                                        MDUOut-Out(S170)
	S174= Mux38.Out=>GPRegs.WData                               Premise(F25923)
	S175= MDUOut.Out=>Mux38.2                                   Premise(F26096)
	S176= Mux38.2=a/b                                           Path(S173,S175)
	S177= Mux39.Out=>GPRegs.WReg                                Premise(F26167)
	S178= IR.Out6_10=>Mux39.2                                   Premise(F26184)
	S179= Mux39.2=rD                                            Path(S172,S178)
	S180= DR1bit.Out=>Mux64.1                                   Premise(F27934)
	S181= Mux64.1=so|OverFlow(a/b)                              Path(S171,S180)
	S182= Mux64.Out=>XER.SOIn                                   Premise(F27935)
	S183= CtrlPC=0                                              Premise(F27991)
	S184= CtrlPCInc=0                                           Premise(F27992)
	S185= PC[NIA]=addr+4                                        PC-Hold(S164,S183,S184)
	S186= CtrlGPRegs=1                                          Premise(F27994)
	S187= CtrlXERSO=1                                           Premise(F27995)
	S188= CtrlMux38.1=0                                         Premise(F28070)
	S189= CtrlMux38.2=1                                         Premise(F28071)
	S190= CtrlMux38.3=0                                         Premise(F28072)
	S191= Mux38.Out=a/b                                         Mux(S176,S188,S189,S190)
	S192= GPRegs.WData=a/b                                      Path(S191,S174)
	S193= CtrlMux39.1=0                                         Premise(F28073)
	S194= CtrlMux39.2=1                                         Premise(F28074)
	S195= Mux39.Out=rD                                          Mux(S179,S193,S194)
	S196= GPRegs.WReg=rD                                        Path(S195,S177)
	S197= GPRegs[rD]=a/b                                        GPRegs-Write(S196,S192,S186)
	S198= CtrlMux64.1=1                                         Premise(F28105)
	S199= Mux64.Out=so|OverFlow(a/b)                            Mux(S181,S198)
	S200= XER.SOIn=so|OverFlow(a/b)                             Path(S199,S182)
	S201= XER[SO]=so|OverFlow(a/b)                              XER-SO-Write(S200,S187)

WB/	S185= PC[NIA]=addr+4                                        PC-Hold(S164,S183,S184)
	S197= GPRegs[rD]=a/b                                        GPRegs-Write(S196,S192,S186)
	S201= XER[SO]=so|OverFlow(a/b)                              XER-SO-Write(S200,S187)

