
------------------------------------- Proof -------------------------------------

/IF	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[NIA]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={18,LI,1,0}                            Premise(F2)

IF	S3= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S4= PC.NIA=addr                                             PC-Out(S1)
	S5= PC.NIA=>Mux40.1                                         Premise(F3927)
	S6= Mux40.1=addr                                            Path(S4,S5)
	S7= Mux40.Out=>IMem.Addr                                    Premise(F3928)
	S8= PIDReg.Out=>Mux41.1                                     Premise(F4211)
	S9= Mux41.1=pid                                             Path(S3,S8)
	S10= Mux41.Out=>IMem.PID                                    Premise(F4212)
	S11= IMem.RData=>Mux44.1                                    Premise(F4543)
	S12= Mux44.Out=>IR.In                                       Premise(F4544)
	S13= CtrlIR=1                                               Premise(F5522)
	S14= CtrlMux40.1=1                                          Premise(F5592)
	S15= Mux40.Out=addr                                         Mux(S6,S14)
	S16= IMem.Addr=addr                                         Path(S15,S7)
	S17= CtrlMux41.1=1                                          Premise(F5593)
	S18= Mux41.Out=pid                                          Mux(S9,S17)
	S19= IMem.PID=pid                                           Path(S18,S10)
	S20= IMem.RData={18,LI,1,0}                                 IMem-Read(S2,S19,S16)
	S21= Mux44.1={18,LI,1,0}                                    Path(S20,S11)
	S22= CtrlMux44.1=1                                          Premise(F5596)
	S23= Mux44.Out={18,LI,1,0}                                  Mux(S21,S22)
	S24= IR.In={18,LI,1,0}                                      Path(S23,S12)
	S25= [IR]={18,LI,1,0}                                       IR-Write(S24,S13)

ID	S26= IR.Out6_29=LI                                          IR-Out(S25)
	S27= IR.Out6_29=>Mux2.1                                     Premise(F5903)
	S28= Mux2.1=LI                                              Path(S26,S27)
	S29= Mux2.Out=>Addr24Ext.In                                 Premise(F5904)
	S30= Addr24Ext.Out=>Mux56.1                                 Premise(F10879)
	S31= Mux56.Out=>PC.In                                       Premise(F10880)
	S32= CtrlPC=1                                               Premise(F11128)
	S33= CtrlPCInc=0                                            Premise(F11129)
	S34= CtrlMux2.1=1                                           Premise(F11151)
	S35= Mux2.Out=LI                                            Mux(S28,S34)
	S36= Addr24Ext.In=LI                                        Path(S35,S29)
	S37= Addr24Ext.Out={8{LI[23]},LI}                           Addr24Ext(S36)
	S38= Mux56.1={8{LI[23]},LI}                                 Path(S37,S30)
	S39= CtrlMux56.1=1                                          Premise(F11233)
	S40= CtrlMux56.2=0                                          Premise(F11234)
	S41= Mux56.Out={8{LI[23]},LI}                               Mux(S38,S39,S40)
	S42= PC.In={8{LI[23]},LI}                                   Path(S41,S31)
	S43= PC[NIA]={8{LI[23]},LI}                                 PC-Write(S42,S32,S33)

EX	S44= CtrlPC=0                                               Premise(F16748)
	S45= CtrlPCInc=0                                            Premise(F16749)
	S46= PC[NIA]={8{LI[23]},LI}                                 PC-Hold(S43,S44,S45)

MEM	S47= CtrlPC=0                                               Premise(F22368)
	S48= CtrlPCInc=0                                            Premise(F22369)
	S49= PC[NIA]={8{LI[23]},LI}                                 PC-Hold(S46,S47,S48)

WB	S50= CtrlPC=0                                               Premise(F27988)
	S51= CtrlPCInc=0                                            Premise(F27989)
	S52= PC[NIA]={8{LI[23]},LI}                                 PC-Hold(S49,S50,S51)

WB/	S52= PC[NIA]={8{LI[23]},LI}                                 PC-Hold(S49,S50,S51)

