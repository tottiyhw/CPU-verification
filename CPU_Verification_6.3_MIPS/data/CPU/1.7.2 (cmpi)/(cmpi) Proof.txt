
------------------------------------- Proof -------------------------------------

/IF	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[NIA]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={11,crfD,0,rA,SIMM}                    Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= XER[SO]=so                                              Premise(F4)

IF	S5= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S6= PC.NIA=addr                                             PC-Out(S1)
	S7= PC.NIA=>Mux40.1                                         Premise(F3929)
	S8= Mux40.1=addr                                            Path(S6,S7)
	S9= Mux40.Out=>IMem.Addr                                    Premise(F3930)
	S10= PIDReg.Out=>Mux41.1                                    Premise(F4213)
	S11= Mux41.1=pid                                            Path(S5,S10)
	S12= Mux41.Out=>IMem.PID                                    Premise(F4214)
	S13= IMem.RData=>Mux44.1                                    Premise(F4545)
	S14= Mux44.Out=>IR.In                                       Premise(F4546)
	S15= CtrlPC=0                                               Premise(F5510)
	S16= CtrlPCInc=1                                            Premise(F5511)
	S17= PC[NIA]=addr+4                                         PC-Write(S1,S15,S16)
	S18= CtrlGPRegs=0                                           Premise(F5513)
	S19= GPRegs[rA]=a                                           GPRegs-Hold(S3,S18)
	S20= CtrlXERSO=0                                            Premise(F5514)
	S21= XER[SO]=so                                             XER-SO-Hold(S4,S20)
	S22= CtrlIR=1                                               Premise(F5527)
	S23= CtrlMux40.1=1                                          Premise(F5594)
	S24= Mux40.Out=addr                                         Mux(S8,S23)
	S25= IMem.Addr=addr                                         Path(S24,S9)
	S26= CtrlMux41.1=1                                          Premise(F5595)
	S27= Mux41.Out=pid                                          Mux(S11,S26)
	S28= IMem.PID=pid                                           Path(S27,S12)
	S29= IMem.RData={11,crfD,0,rA,SIMM}                         IMem-Read(S2,S28,S25)
	S30= Mux44.1={11,crfD,0,rA,SIMM}                            Path(S29,S13)
	S31= CtrlMux44.1=1                                          Premise(F5598)
	S32= Mux44.Out={11,crfD,0,rA,SIMM}                          Mux(S30,S31)
	S33= IR.In={11,crfD,0,rA,SIMM}                              Path(S32,S14)
	S34= [IR]={11,crfD,0,rA,SIMM}                               IR-Write(S33,S22)

ID	S35= IR.Out11_15=rA                                         IR-Out(S34)
	S36= IR.Out16_31=SIMM                                       IR-Out(S34)
	S37= Mux1.Out=>A.In                                         Premise(F5626)
	S38= GPRegs.RData1=>Mux1.3                                  Premise(F5679)
	S39= Mux10.Out=>B.In                                        Premise(F6936)
	S40= IMMEXT.Out=>Mux10.6                                    Premise(F7135)
	S41= IR.Out11_15=>Mux33.1                                   Premise(F8575)
	S42= Mux33.1=rA                                             Path(S35,S41)
	S43= Mux33.Out=>GPRegs.RReg1                                Premise(F8576)
	S44= IR.Out16_31=>Mux42.1                                   Premise(F10117)
	S45= Mux42.1=SIMM                                           Path(S36,S44)
	S46= Mux42.Out=>IMMEXT.In                                   Premise(F10118)
	S47= CtrlPC=0                                               Premise(F11130)
	S48= CtrlPCInc=0                                            Premise(F11131)
	S49= PC[NIA]=addr+4                                         PC-Hold(S17,S47,S48)
	S50= CtrlXERSO=0                                            Premise(F11134)
	S51= XER[SO]=so                                             XER-SO-Hold(S21,S50)
	S52= CtrlA=1                                                Premise(F11139)
	S53= CtrlB=1                                                Premise(F11141)
	S54= CtrlIR=0                                               Premise(F11147)
	S55= [IR]={11,crfD,0,rA,SIMM}                               IR-Hold(S34,S54)
	S56= CtrlMux1.1=0                                           Premise(F11152)
	S57= CtrlMux1.2=0                                           Premise(F11153)
	S58= CtrlMux1.3=1                                           Premise(F11154)
	S59= CtrlMux1.4=0                                           Premise(F11155)
	S60= CtrlMux10.1=0                                          Premise(F11165)
	S61= CtrlMux10.2=0                                          Premise(F11166)
	S62= CtrlMux10.3=0                                          Premise(F11167)
	S63= CtrlMux10.4=0                                          Premise(F11168)
	S64= CtrlMux10.5=0                                          Premise(F11169)
	S65= CtrlMux10.6=1                                          Premise(F11170)
	S66= CtrlMux10.7=0                                          Premise(F11171)
	S67= CtrlMux10.8=0                                          Premise(F11172)
	S68= CtrlMux33.1=1                                          Premise(F11203)
	S69= Mux33.Out=rA                                           Mux(S42,S68)
	S70= GPRegs.RReg1=rA                                        Path(S69,S43)
	S71= GPRegs.RData1=a                                        GPRegs-Read(S19,S70)
	S72= Mux1.3=a                                               Path(S71,S38)
	S73= Mux1.Out=a                                             Mux(S72,S56,S57,S58,S59)
	S74= A.In=a                                                 Path(S73,S37)
	S75= [A]=a                                                  A-Write(S74,S52)
	S76= CtrlMux42.1=1                                          Premise(F11216)
	S77= Mux42.Out=SIMM                                         Mux(S45,S76)
	S78= IMMEXT.In=SIMM                                         Path(S77,S46)
	S79= IMMEXT.Out={16{SIMM[15]},SIMM}                         IMMEXT(S78)
	S80= Mux10.6={16{SIMM[15]},SIMM}                            Path(S79,S40)
	S81= Mux10.Out={16{SIMM[15]},SIMM}                          Mux(S80,S60,S61,S62,S63,S64,S65,S66,S67)
	S82= B.In={16{SIMM[15]},SIMM}                               Path(S81,S39)
	S83= [B]={16{SIMM[15]},SIMM}                                B-Write(S82,S53)

EX	S84= XER.SOOut=so                                           XER-SO-Out(S51)
	S85= A.Out=a                                                A-Out(S75)
	S86= B.Out={16{SIMM[15]},SIMM}                              B-Out(S83)
	S87= A.Out=>Mux12.1                                         Premise(F12887)
	S88= Mux12.1=a                                              Path(S85,S87)
	S89= Mux12.Out=>CMPU.A                                      Premise(F12888)
	S90= B.Out=>Mux13.1                                         Premise(F12895)
	S91= Mux13.1={16{SIMM[15]},SIMM}                            Path(S86,S90)
	S92= Mux13.Out=>CMPU.B                                      Premise(F12896)
	S93= Mux24.Out=>DataCmb.A                                   Premise(F13602)
	S94= CMPU.Out=>Mux24.2                                      Premise(F13675)
	S95= Mux25.Out=>DataCmb.B                                   Premise(F13708)
	S96= XER.SOOut=>Mux25.2                                     Premise(F13735)
	S97= Mux25.2=so                                             Path(S84,S96)
	S98= DataCmb.Out=>Mux32.1                                   Premise(F14089)
	S99= Mux32.Out=>DR4bit.In                                   Premise(F14090)
	S100= CtrlPC=0                                              Premise(F16750)
	S101= CtrlPCInc=0                                           Premise(F16751)
	S102= PC[NIA]=addr+4                                        PC-Hold(S49,S100,S101)
	S103= CtrlDR4bit=1                                          Premise(F16766)
	S104= CtrlIR=0                                              Premise(F16767)
	S105= [IR]={11,crfD,0,rA,SIMM}                              IR-Hold(S55,S104)
	S106= CtrlMux12.1=1                                         Premise(F16795)
	S107= Mux12.Out=a                                           Mux(S88,S106)
	S108= CMPU.A=a                                              Path(S107,S89)
	S109= CtrlMux13.1=1                                         Premise(F16796)
	S110= Mux13.Out={16{SIMM[15]},SIMM}                         Mux(S91,S109)
	S111= CMPU.B={16{SIMM[15]},SIMM}                            Path(S110,S92)
	S112= CMPU.Out=CompareS(a,{16{SIMM[15]},SIMM})              CMPU(S108,S111)
	S113= Mux24.2=CompareS(a,{16{SIMM[15]},SIMM})               Path(S112,S94)
	S114= CtrlMux24.1=0                                         Premise(F16809)
	S115= CtrlMux24.2=1                                         Premise(F16810)
	S116= CtrlMux24.3=0                                         Premise(F16811)
	S117= CtrlMux24.4=0                                         Premise(F16812)
	S118= Mux24.Out=CompareS(a,{16{SIMM[15]},SIMM})             Mux(S113,S114,S115,S116,S117)
	S119= DataCmb.A=CompareS(a,{16{SIMM[15]},SIMM})             Path(S118,S93)
	S120= CtrlMux25.1=0                                         Premise(F16813)
	S121= CtrlMux25.2=1                                         Premise(F16814)
	S122= Mux25.Out=so                                          Mux(S97,S120,S121)
	S123= DataCmb.B=so                                          Path(S122,S95)
	S124= DataCmb.Out={CompareS(a,{16{SIMM[15]},SIMM}),so}      DataCmb(S119,S123)
	S125= Mux32.1={CompareS(a,{16{SIMM[15]},SIMM}),so}          Path(S124,S98)
	S126= CtrlMux32.1=1                                         Premise(F16822)
	S127= Mux32.Out={CompareS(a,{16{SIMM[15]},SIMM}),so}        Mux(S125,S126)
	S128= DR4bit.In={CompareS(a,{16{SIMM[15]},SIMM}),so}        Path(S127,S99)
	S129= [DR4bit]={CompareS(a,{16{SIMM[15]},SIMM}),so}         DR4bit-Write(S128,S103)

MEM	S130= CtrlPC=0                                              Premise(F22370)
	S131= CtrlPCInc=0                                           Premise(F22371)
	S132= PC[NIA]=addr+4                                        PC-Hold(S102,S130,S131)
	S133= CtrlDR4bit=0                                          Premise(F22386)
	S134= [DR4bit]={CompareS(a,{16{SIMM[15]},SIMM}),so}         DR4bit-Hold(S129,S133)
	S135= CtrlIR=0                                              Premise(F22387)
	S136= [IR]={11,crfD,0,rA,SIMM}                              IR-Hold(S105,S135)

WB	S137= DR4bit.Out={CompareS(a,{16{SIMM[15]},SIMM}),so}       DR4bit-Out(S134)
	S138= IR.Out6_8=crfD                                        IR-Out(S136)
	S139= Mux18.Out=>CRRegs.WData                               Premise(F24278)
	S140= DR4bit.Out=>Mux18.2                                   Premise(F24291)
	S141= Mux18.2={CompareS(a,{16{SIMM[15]},SIMM}),so}          Path(S137,S140)
	S142= Mux19.Out=>CRRegs.WReg                                Premise(F24300)
	S143= IR.Out6_8=>Mux19.2                                    Premise(F24313)
	S144= Mux19.2=crfD                                          Path(S138,S143)
	S145= CtrlPC=0                                              Premise(F27990)
	S146= CtrlPCInc=0                                           Premise(F27991)
	S147= PC[NIA]=addr+4                                        PC-Hold(S132,S145,S146)
	S148= CtrlCRRegs=1                                          Premise(F27997)
	S149= CtrlMux18.1=0                                         Premise(F28041)
	S150= CtrlMux18.2=1                                         Premise(F28042)
	S151= Mux18.Out={CompareS(a,{16{SIMM[15]},SIMM}),so}        Mux(S141,S149,S150)
	S152= CRRegs.WData={CompareS(a,{16{SIMM[15]},SIMM}),so}     Path(S151,S139)
	S153= CtrlMux19.1=0                                         Premise(F28043)
	S154= CtrlMux19.2=1                                         Premise(F28044)
	S155= Mux19.Out=crfD                                        Mux(S144,S153,S154)
	S156= CRRegs.WReg=crfD                                      Path(S155,S142)
	S157= CRRegs[crfD]={CompareS(a,{16{SIMM[15]},SIMM}),so}     CRRegs-Write(S156,S152,S148)

WB/	S147= PC[NIA]=addr+4                                        PC-Hold(S132,S145,S146)
	S157= CRRegs[crfD]={CompareS(a,{16{SIMM[15]},SIMM}),so}     CRRegs-Write(S156,S152,S148)

