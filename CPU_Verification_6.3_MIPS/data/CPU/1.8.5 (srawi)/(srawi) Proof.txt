
------------------------------------- Proof -------------------------------------

/IF	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[NIA]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rS,rA,SH,1648}                     Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)

IF	S4= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S5= PC.NIA=addr                                             PC-Out(S1)
	S6= PC.NIA=>Mux40.1                                         Premise(F3928)
	S7= Mux40.1=addr                                            Path(S5,S6)
	S8= Mux40.Out=>IMem.Addr                                    Premise(F3929)
	S9= PIDReg.Out=>Mux41.1                                     Premise(F4212)
	S10= Mux41.1=pid                                            Path(S4,S9)
	S11= Mux41.Out=>IMem.PID                                    Premise(F4213)
	S12= IMem.RData=>Mux44.1                                    Premise(F4544)
	S13= Mux44.Out=>IR.In                                       Premise(F4545)
	S14= CtrlPC=0                                               Premise(F5509)
	S15= CtrlPCInc=1                                            Premise(F5510)
	S16= PC[NIA]=addr+4                                         PC-Write(S1,S14,S15)
	S17= CtrlGPRegs=0                                           Premise(F5512)
	S18= GPRegs[rA]=a                                           GPRegs-Hold(S3,S17)
	S19= CtrlIR=1                                               Premise(F5526)
	S20= CtrlMux40.1=1                                          Premise(F5593)
	S21= Mux40.Out=addr                                         Mux(S7,S20)
	S22= IMem.Addr=addr                                         Path(S21,S8)
	S23= CtrlMux41.1=1                                          Premise(F5594)
	S24= Mux41.Out=pid                                          Mux(S10,S23)
	S25= IMem.PID=pid                                           Path(S24,S11)
	S26= IMem.RData={31,rS,rA,SH,1648}                          IMem-Read(S2,S25,S22)
	S27= Mux44.1={31,rS,rA,SH,1648}                             Path(S26,S12)
	S28= CtrlMux44.1=1                                          Premise(F5597)
	S29= Mux44.Out={31,rS,rA,SH,1648}                           Mux(S27,S28)
	S30= IR.In={31,rS,rA,SH,1648}                               Path(S29,S13)
	S31= [IR]={31,rS,rA,SH,1648}                                IR-Write(S30,S19)

ID	S32= IR.Out11_15=rA                                         IR-Out(S31)
	S33= IR.Out16_20=SH                                         IR-Out(S31)
	S34= Mux1.Out=>A.In                                         Premise(F5625)
	S35= GPRegs.RData1=>Mux1.3                                  Premise(F5678)
	S36= IR.Out11_15=>Mux33.1                                   Premise(F8574)
	S37= Mux33.1=rA                                             Path(S32,S36)
	S38= Mux33.Out=>GPRegs.RReg1                                Premise(F8575)
	S39= IR.Out16_20=>Mux58.1                                   Premise(F10900)
	S40= Mux58.1=SH                                             Path(S33,S39)
	S41= Mux58.Out=>ShamtReg.In5bit                             Premise(F10901)
	S42= CtrlPC=0                                               Premise(F11129)
	S43= CtrlPCInc=0                                            Premise(F11130)
	S44= PC[NIA]=addr+4                                         PC-Hold(S16,S42,S43)
	S45= CtrlA=1                                                Premise(F11136)
	S46= CtrlIR=0                                               Premise(F11146)
	S47= [IR]={31,rS,rA,SH,1648}                                IR-Hold(S31,S46)
	S48= CtrlShamtReg=1                                         Premise(F11150)
	S49= CtrlMux1.1=0                                           Premise(F11151)
	S50= CtrlMux1.2=0                                           Premise(F11152)
	S51= CtrlMux1.3=1                                           Premise(F11153)
	S52= CtrlMux1.4=0                                           Premise(F11154)
	S53= CtrlMux33.1=1                                          Premise(F11202)
	S54= Mux33.Out=rA                                           Mux(S37,S53)
	S55= GPRegs.RReg1=rA                                        Path(S54,S38)
	S56= GPRegs.RData1=a                                        GPRegs-Read(S18,S55)
	S57= Mux1.3=a                                               Path(S56,S35)
	S58= Mux1.Out=a                                             Mux(S57,S49,S50,S51,S52)
	S59= A.In=a                                                 Path(S58,S34)
	S60= [A]=a                                                  A-Write(S59,S45)
	S61= CtrlMux58.1=1                                          Premise(F11237)
	S62= Mux58.Out=SH                                           Mux(S40,S61)
	S63= ShamtReg.In5bit=SH                                     Path(S62,S41)
	S64= [ShamtReg]=SH                                          ShamtReg-Write(S63,S48)

EX	S65= IR.Out0_5=31                                           IR-Out(S47)
	S66= IR.Out21_31=1648                                       IR-Out(S47)
	S67= A.Out=a                                                A-Out(S60)
	S68= ShamtReg.Out=SH                                        ShamtReg-Out(S64)
	S69= Mux9.Out=>ALUOut.In                                    Premise(F12317)
	S70= SU.Out=>Mux9.2                                         Premise(F12538)
	S71= Mux11.Out=>CAReg.In                                    Premise(F12811)
	S72= SU.CA=>Mux11.2                                         Premise(F12878)
	S73= IR.Out21_31=>Mux21.1                                   Premise(F13088)
	S74= Mux21.1=1648                                           Path(S66,S73)
	S75= Mux21.Out=>CU.IRFunc                                   Premise(F13089)
	S76= IR.Out0_5=>Mux23.1                                     Premise(F13316)
	S77= Mux23.1=31                                             Path(S65,S76)
	S78= Mux23.Out=>CU.Op                                       Premise(F13317)
	S79= A.Out=>Mux59.1                                         Premise(F16524)
	S80= Mux59.1=a                                              Path(S67,S79)
	S81= Mux59.Out=>SU.Data                                     Premise(F16525)
	S82= CU.Func=>Mux60.1                                       Premise(F16540)
	S83= Mux60.Out=>SU.Func                                     Premise(F16541)
	S84= ShamtReg.Out=>Mux61.1                                  Premise(F16556)
	S85= Mux61.1=SH                                             Path(S68,S84)
	S86= Mux61.Out=>SU.Shamt                                    Premise(F16557)
	S87= CtrlPC=0                                               Premise(F16749)
	S88= CtrlPCInc=0                                            Premise(F16750)
	S89= PC[NIA]=addr+4                                         PC-Hold(S44,S87,S88)
	S90= CtrlALUOut=1                                           Premise(F16757)
	S91= CtrlCAReg=1                                            Premise(F16759)
	S92= CtrlIR=0                                               Premise(F16766)
	S93= [IR]={31,rS,rA,SH,1648}                                IR-Hold(S47,S92)
	S94= CtrlMux9.1=0                                           Premise(F16782)
	S95= CtrlMux9.2=1                                           Premise(F16783)
	S96= CtrlMux11.1=0                                          Premise(F16792)
	S97= CtrlMux11.2=1                                          Premise(F16793)
	S98= CtrlMux21.1=1                                          Premise(F16805)
	S99= Mux21.Out=1648                                         Mux(S74,S98)
	S100= CU.IRFunc=1648                                        Path(S99,S75)
	S101= CtrlMux23.1=1                                         Premise(F16807)
	S102= Mux23.Out=31                                          Mux(S77,S101)
	S103= CU.Op=31                                              Path(S102,S78)
	S104= CU.Func=su_sra                                        CU(S103,S100)
	S105= Mux60.1=su_sra                                        Path(S104,S82)
	S106= CtrlMux59.1=1                                         Premise(F16858)
	S107= Mux59.Out=a                                           Mux(S80,S106)
	S108= SU.Data=a                                             Path(S107,S81)
	S109= CtrlMux60.1=1                                         Premise(F16859)
	S110= Mux60.Out=su_sra                                      Mux(S105,S109)
	S111= SU.Func=su_sra                                        Path(S110,S83)
	S112= CtrlMux61.1=1                                         Premise(F16860)
	S113= Mux61.Out=SH                                          Mux(S85,S112)
	S114= SU.Shamt=SH                                           Path(S113,S86)
	S115= SU.Out=a>>SH                                          SU(S108,S114,S111)
	S116= Mux9.2=a>>SH                                          Path(S115,S70)
	S117= Mux9.Out=a>>SH                                        Mux(S116,S94,S95)
	S118= ALUOut.In=a>>SH                                       Path(S117,S69)
	S119= [ALUOut]=a>>SH                                        ALUOut-Write(S118,S90)
	S120= SU.CA=Carry(a>>SH)                                    SU(S108,S114,S111)
	S121= Mux11.2=Carry(a>>SH)                                  Path(S120,S72)
	S122= Mux11.Out=Carry(a>>SH)                                Mux(S121,S96,S97)
	S123= CAReg.In=Carry(a>>SH)                                 Path(S122,S71)
	S124= [CAReg]=Carry(a>>SH)                                  CAReg-Write(S123,S91)

MEM	S125= CtrlPC=0                                              Premise(F22369)
	S126= CtrlPCInc=0                                           Premise(F22370)
	S127= PC[NIA]=addr+4                                        PC-Hold(S89,S125,S126)
	S128= CtrlALUOut=0                                          Premise(F22377)
	S129= [ALUOut]=a>>SH                                        ALUOut-Hold(S119,S128)
	S130= CtrlCAReg=0                                           Premise(F22379)
	S131= [CAReg]=Carry(a>>SH)                                  CAReg-Hold(S124,S130)
	S132= CtrlIR=0                                              Premise(F22386)
	S133= [IR]={31,rS,rA,SH,1648}                               IR-Hold(S93,S132)

WB	S134= ALUOut.Out=a>>SH                                      ALUOut-Out(S129)
	S135= CAReg.Out=Carry(a>>SH)                                CAReg-Out(S131)
	S136= IR.Out6_10=rS                                         IR-Out(S133)
	S137= ALUOut.Out=>Mux38.1                                   Premise(F25920)
	S138= Mux38.1=a>>SH                                         Path(S134,S137)
	S139= Mux38.Out=>GPRegs.WData                               Premise(F25921)
	S140= Mux39.Out=>GPRegs.WReg                                Premise(F26165)
	S141= IR.Out6_10=>Mux39.2                                   Premise(F26182)
	S142= Mux39.2=rS                                            Path(S136,S141)
	S143= CAReg.Out=>Mux62.1                                    Premise(F27812)
	S144= Mux62.1=Carry(a>>SH)                                  Path(S135,S143)
	S145= Mux62.Out=>XER.CAIn                                   Premise(F27813)
	S146= CtrlPC=0                                              Premise(F27989)
	S147= CtrlPCInc=0                                           Premise(F27990)
	S148= PC[NIA]=addr+4                                        PC-Hold(S127,S146,S147)
	S149= CtrlGPRegs=1                                          Premise(F27992)
	S150= CtrlXERCA=1                                           Premise(F27995)
	S151= CtrlMux38.1=1                                         Premise(F28068)
	S152= CtrlMux38.2=0                                         Premise(F28069)
	S153= CtrlMux38.3=0                                         Premise(F28070)
	S154= Mux38.Out=a>>SH                                       Mux(S138,S151,S152,S153)
	S155= GPRegs.WData=a>>SH                                    Path(S154,S139)
	S156= CtrlMux39.1=0                                         Premise(F28071)
	S157= CtrlMux39.2=1                                         Premise(F28072)
	S158= Mux39.Out=rS                                          Mux(S142,S156,S157)
	S159= GPRegs.WReg=rS                                        Path(S158,S140)
	S160= GPRegs[rS]=a>>SH                                      GPRegs-Write(S159,S155,S149)
	S161= CtrlMux62.1=1                                         Premise(F28101)
	S162= Mux62.Out=Carry(a>>SH)                                Mux(S144,S161)
	S163= XER.CAIn=Carry(a>>SH)                                 Path(S162,S145)
	S164= XER[CA]=Carry(a>>SH)                                  XER-CA-Write(S163,S150)

WB/	S148= PC[NIA]=addr+4                                        PC-Hold(S127,S146,S147)
	S160= GPRegs[rS]=a>>SH                                      GPRegs-Write(S159,S155,S149)
	S164= XER[CA]=Carry(a>>SH)                                  XER-CA-Write(S163,S150)

