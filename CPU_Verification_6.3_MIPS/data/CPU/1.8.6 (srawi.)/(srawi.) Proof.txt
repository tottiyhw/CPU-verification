
------------------------------------- Proof -------------------------------------

/IF	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[NIA]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rS,rA,SH,1649}                     Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= XER[SO]=so                                              Premise(F4)

IF	S5= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S6= PC.NIA=addr                                             PC-Out(S1)
	S7= PC.NIA=>Mux40.1                                         Premise(F3929)
	S8= Mux40.1=addr                                            Path(S6,S7)
	S9= Mux40.Out=>IMem.Addr                                    Premise(F3930)
	S10= PIDReg.Out=>Mux41.1                                    Premise(F4213)
	S11= Mux41.1=pid                                            Path(S5,S10)
	S12= Mux41.Out=>IMem.PID                                    Premise(F4214)
	S13= IMem.RData=>Mux44.1                                    Premise(F4545)
	S14= Mux44.Out=>IR.In                                       Premise(F4546)
	S15= CtrlPC=0                                               Premise(F5510)
	S16= CtrlPCInc=1                                            Premise(F5511)
	S17= PC[NIA]=addr+4                                         PC-Write(S1,S15,S16)
	S18= CtrlGPRegs=0                                           Premise(F5513)
	S19= GPRegs[rA]=a                                           GPRegs-Hold(S3,S18)
	S20= CtrlXERSO=0                                            Premise(F5514)
	S21= XER[SO]=so                                             XER-SO-Hold(S4,S20)
	S22= CtrlIR=1                                               Premise(F5527)
	S23= CtrlMux40.1=1                                          Premise(F5594)
	S24= Mux40.Out=addr                                         Mux(S8,S23)
	S25= IMem.Addr=addr                                         Path(S24,S9)
	S26= CtrlMux41.1=1                                          Premise(F5595)
	S27= Mux41.Out=pid                                          Mux(S11,S26)
	S28= IMem.PID=pid                                           Path(S27,S12)
	S29= IMem.RData={31,rS,rA,SH,1649}                          IMem-Read(S2,S28,S25)
	S30= Mux44.1={31,rS,rA,SH,1649}                             Path(S29,S13)
	S31= CtrlMux44.1=1                                          Premise(F5598)
	S32= Mux44.Out={31,rS,rA,SH,1649}                           Mux(S30,S31)
	S33= IR.In={31,rS,rA,SH,1649}                               Path(S32,S14)
	S34= [IR]={31,rS,rA,SH,1649}                                IR-Write(S33,S22)

ID	S35= IR.Out11_15=rA                                         IR-Out(S34)
	S36= IR.Out16_20=SH                                         IR-Out(S34)
	S37= Mux1.Out=>A.In                                         Premise(F5626)
	S38= GPRegs.RData1=>Mux1.3                                  Premise(F5679)
	S39= IR.Out11_15=>Mux33.1                                   Premise(F8575)
	S40= Mux33.1=rA                                             Path(S35,S39)
	S41= Mux33.Out=>GPRegs.RReg1                                Premise(F8576)
	S42= IR.Out16_20=>Mux58.1                                   Premise(F10901)
	S43= Mux58.1=SH                                             Path(S36,S42)
	S44= Mux58.Out=>ShamtReg.In5bit                             Premise(F10902)
	S45= CtrlPC=0                                               Premise(F11130)
	S46= CtrlPCInc=0                                            Premise(F11131)
	S47= PC[NIA]=addr+4                                         PC-Hold(S17,S45,S46)
	S48= CtrlXERSO=0                                            Premise(F11134)
	S49= XER[SO]=so                                             XER-SO-Hold(S21,S48)
	S50= CtrlA=1                                                Premise(F11139)
	S51= CtrlIR=0                                               Premise(F11147)
	S52= [IR]={31,rS,rA,SH,1649}                                IR-Hold(S34,S51)
	S53= CtrlShamtReg=1                                         Premise(F11151)
	S54= CtrlMux1.1=0                                           Premise(F11152)
	S55= CtrlMux1.2=0                                           Premise(F11153)
	S56= CtrlMux1.3=1                                           Premise(F11154)
	S57= CtrlMux1.4=0                                           Premise(F11155)
	S58= CtrlMux33.1=1                                          Premise(F11203)
	S59= Mux33.Out=rA                                           Mux(S40,S58)
	S60= GPRegs.RReg1=rA                                        Path(S59,S41)
	S61= GPRegs.RData1=a                                        GPRegs-Read(S19,S60)
	S62= Mux1.3=a                                               Path(S61,S38)
	S63= Mux1.Out=a                                             Mux(S62,S54,S55,S56,S57)
	S64= A.In=a                                                 Path(S63,S37)
	S65= [A]=a                                                  A-Write(S64,S50)
	S66= CtrlMux58.1=1                                          Premise(F11238)
	S67= Mux58.Out=SH                                           Mux(S43,S66)
	S68= ShamtReg.In5bit=SH                                     Path(S67,S44)
	S69= [ShamtReg]=SH                                          ShamtReg-Write(S68,S53)

EX	S70= XER.SOOut=so                                           XER-SO-Out(S49)
	S71= IR.Out0_5=31                                           IR-Out(S52)
	S72= IR.Out21_31=1649                                       IR-Out(S52)
	S73= A.Out=a                                                A-Out(S65)
	S74= ShamtReg.Out=SH                                        ShamtReg-Out(S69)
	S75= Mux9.Out=>ALUOut.In                                    Premise(F12318)
	S76= SU.Out=>Mux9.2                                         Premise(F12539)
	S77= Mux11.Out=>CAReg.In                                    Premise(F12812)
	S78= SU.CA=>Mux11.2                                         Premise(F12879)
	S79= IR.Out21_31=>Mux21.1                                   Premise(F13089)
	S80= Mux21.1=1649                                           Path(S72,S79)
	S81= Mux21.Out=>CU.IRFunc                                   Premise(F13090)
	S82= IR.Out0_5=>Mux23.1                                     Premise(F13317)
	S83= Mux23.1=31                                             Path(S71,S82)
	S84= Mux23.Out=>CU.Op                                       Premise(F13318)
	S85= Mux24.Out=>DataCmb.A                                   Premise(F13602)
	S86= SU.CMP=>Mux24.4                                        Premise(F13699)
	S87= Mux25.Out=>DataCmb.B                                   Premise(F13708)
	S88= XER.SOOut=>Mux25.2                                     Premise(F13735)
	S89= Mux25.2=so                                             Path(S70,S88)
	S90= DataCmb.Out=>Mux32.1                                   Premise(F14089)
	S91= Mux32.Out=>DR4bit.In                                   Premise(F14090)
	S92= A.Out=>Mux59.1                                         Premise(F16525)
	S93= Mux59.1=a                                              Path(S73,S92)
	S94= Mux59.Out=>SU.Data                                     Premise(F16526)
	S95= CU.Func=>Mux60.1                                       Premise(F16541)
	S96= Mux60.Out=>SU.Func                                     Premise(F16542)
	S97= ShamtReg.Out=>Mux61.1                                  Premise(F16557)
	S98= Mux61.1=SH                                             Path(S74,S97)
	S99= Mux61.Out=>SU.Shamt                                    Premise(F16558)
	S100= CtrlPC=0                                              Premise(F16750)
	S101= CtrlPCInc=0                                           Premise(F16751)
	S102= PC[NIA]=addr+4                                        PC-Hold(S47,S100,S101)
	S103= CtrlALUOut=1                                          Premise(F16760)
	S104= CtrlCAReg=1                                           Premise(F16762)
	S105= CtrlDR4bit=1                                          Premise(F16766)
	S106= CtrlIR=0                                              Premise(F16767)
	S107= [IR]={31,rS,rA,SH,1649}                               IR-Hold(S52,S106)
	S108= CtrlMux9.1=0                                          Premise(F16783)
	S109= CtrlMux9.2=1                                          Premise(F16784)
	S110= CtrlMux11.1=0                                         Premise(F16793)
	S111= CtrlMux11.2=1                                         Premise(F16794)
	S112= CtrlMux21.1=1                                         Premise(F16806)
	S113= Mux21.Out=1649                                        Mux(S80,S112)
	S114= CU.IRFunc=1649                                        Path(S113,S81)
	S115= CtrlMux23.1=1                                         Premise(F16808)
	S116= Mux23.Out=31                                          Mux(S83,S115)
	S117= CU.Op=31                                              Path(S116,S84)
	S118= CU.Func=su_sra                                        CU(S117,S114)
	S119= Mux60.1=su_sra                                        Path(S118,S95)
	S120= CtrlMux24.1=0                                         Premise(F16809)
	S121= CtrlMux24.2=0                                         Premise(F16810)
	S122= CtrlMux24.3=0                                         Premise(F16811)
	S123= CtrlMux24.4=1                                         Premise(F16812)
	S124= CtrlMux25.1=0                                         Premise(F16813)
	S125= CtrlMux25.2=1                                         Premise(F16814)
	S126= Mux25.Out=so                                          Mux(S89,S124,S125)
	S127= DataCmb.B=so                                          Path(S126,S87)
	S128= CtrlMux32.1=1                                         Premise(F16822)
	S129= CtrlMux59.1=1                                         Premise(F16859)
	S130= Mux59.Out=a                                           Mux(S93,S129)
	S131= SU.Data=a                                             Path(S130,S94)
	S132= CtrlMux60.1=1                                         Premise(F16860)
	S133= Mux60.Out=su_sra                                      Mux(S119,S132)
	S134= SU.Func=su_sra                                        Path(S133,S96)
	S135= CtrlMux61.1=1                                         Premise(F16861)
	S136= Mux61.Out=SH                                          Mux(S98,S135)
	S137= SU.Shamt=SH                                           Path(S136,S99)
	S138= SU.Out=a>>SH                                          SU(S131,S137,S134)
	S139= Mux9.2=a>>SH                                          Path(S138,S76)
	S140= Mux9.Out=a>>SH                                        Mux(S139,S108,S109)
	S141= ALUOut.In=a>>SH                                       Path(S140,S75)
	S142= [ALUOut]=a>>SH                                        ALUOut-Write(S141,S103)
	S143= SU.CMP=Compare0(a>>SH)                                SU(S131,S137,S134)
	S144= Mux24.4=Compare0(a>>SH)                               Path(S143,S86)
	S145= Mux24.Out=Compare0(a>>SH)                             Mux(S144,S120,S121,S122,S123)
	S146= DataCmb.A=Compare0(a>>SH)                             Path(S145,S85)
	S147= DataCmb.Out={Compare0(a>>SH),so}                      DataCmb(S146,S127)
	S148= Mux32.1={Compare0(a>>SH),so}                          Path(S147,S90)
	S149= Mux32.Out={Compare0(a>>SH),so}                        Mux(S148,S128)
	S150= DR4bit.In={Compare0(a>>SH),so}                        Path(S149,S91)
	S151= [DR4bit]={Compare0(a>>SH),so}                         DR4bit-Write(S150,S105)
	S152= SU.CA=Carry(a>>SH)                                    SU(S131,S137,S134)
	S153= Mux11.2=Carry(a>>SH)                                  Path(S152,S78)
	S154= Mux11.Out=Carry(a>>SH)                                Mux(S153,S110,S111)
	S155= CAReg.In=Carry(a>>SH)                                 Path(S154,S77)
	S156= [CAReg]=Carry(a>>SH)                                  CAReg-Write(S155,S104)

MEM	S157= CtrlPC=0                                              Premise(F22370)
	S158= CtrlPCInc=0                                           Premise(F22371)
	S159= PC[NIA]=addr+4                                        PC-Hold(S102,S157,S158)
	S160= CtrlALUOut=0                                          Premise(F22380)
	S161= [ALUOut]=a>>SH                                        ALUOut-Hold(S142,S160)
	S162= CtrlCAReg=0                                           Premise(F22382)
	S163= [CAReg]=Carry(a>>SH)                                  CAReg-Hold(S156,S162)
	S164= CtrlDR4bit=0                                          Premise(F22386)
	S165= [DR4bit]={Compare0(a>>SH),so}                         DR4bit-Hold(S151,S164)
	S166= CtrlIR=0                                              Premise(F22387)
	S167= [IR]={31,rS,rA,SH,1649}                               IR-Hold(S107,S166)

WB	S168= ALUOut.Out=a>>SH                                      ALUOut-Out(S161)
	S169= CAReg.Out=Carry(a>>SH)                                CAReg-Out(S163)
	S170= DR4bit.Out={Compare0(a>>SH),so}                       DR4bit-Out(S165)
	S171= IR.Out6_10=rS                                         IR-Out(S167)
	S172= DR4bit.Out=>Mux15.1                                   Premise(F24151)
	S173= Mux15.1={Compare0(a>>SH),so}                          Path(S170,S172)
	S174= Mux15.Out=>CRRegs.CR0In                               Premise(F24152)
	S175= ALUOut.Out=>Mux38.1                                   Premise(F25921)
	S176= Mux38.1=a>>SH                                         Path(S168,S175)
	S177= Mux38.Out=>GPRegs.WData                               Premise(F25922)
	S178= Mux39.Out=>GPRegs.WReg                                Premise(F26166)
	S179= IR.Out6_10=>Mux39.2                                   Premise(F26183)
	S180= Mux39.2=rS                                            Path(S171,S179)
	S181= CAReg.Out=>Mux62.1                                    Premise(F27813)
	S182= Mux62.1=Carry(a>>SH)                                  Path(S169,S181)
	S183= Mux62.Out=>XER.CAIn                                   Premise(F27814)
	S184= CtrlPC=0                                              Premise(F27990)
	S185= CtrlPCInc=0                                           Premise(F27991)
	S186= PC[NIA]=addr+4                                        PC-Hold(S159,S184,S185)
	S187= CtrlGPRegs=1                                          Premise(F27993)
	S188= CtrlXERCA=1                                           Premise(F27996)
	S189= CtrlCRRegsCR0=1                                       Premise(F27998)
	S190= CtrlMux15.1=1                                         Premise(F28038)
	S191= Mux15.Out={Compare0(a>>SH),so}                        Mux(S173,S190)
	S192= CRRegs.CR0In={Compare0(a>>SH),so}                     Path(S191,S174)
	S193= CRRegs[CR0]={Compare0(a>>SH),so}                      CRRegs-CR0-Write(S192,S189)
	S194= CtrlMux38.1=1                                         Premise(F28069)
	S195= CtrlMux38.2=0                                         Premise(F28070)
	S196= CtrlMux38.3=0                                         Premise(F28071)
	S197= Mux38.Out=a>>SH                                       Mux(S176,S194,S195,S196)
	S198= GPRegs.WData=a>>SH                                    Path(S197,S177)
	S199= CtrlMux39.1=0                                         Premise(F28072)
	S200= CtrlMux39.2=1                                         Premise(F28073)
	S201= Mux39.Out=rS                                          Mux(S180,S199,S200)
	S202= GPRegs.WReg=rS                                        Path(S201,S178)
	S203= GPRegs[rS]=a>>SH                                      GPRegs-Write(S202,S198,S187)
	S204= CtrlMux62.1=1                                         Premise(F28102)
	S205= Mux62.Out=Carry(a>>SH)                                Mux(S182,S204)
	S206= XER.CAIn=Carry(a>>SH)                                 Path(S205,S183)
	S207= XER[CA]=Carry(a>>SH)                                  XER-CA-Write(S206,S188)

WB/	S186= PC[NIA]=addr+4                                        PC-Hold(S159,S184,S185)
	S193= CRRegs[CR0]={Compare0(a>>SH),so}                      CRRegs-CR0-Write(S192,S189)
	S203= GPRegs[rS]=a>>SH                                      GPRegs-Write(S202,S198,S187)
	S207= XER[CA]=Carry(a>>SH)                                  XER-CA-Write(S206,S188)

