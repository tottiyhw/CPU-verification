
------------------------------------- Proof -------------------------------------

/IF	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[NIA]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rS,rA,rB,1072}                     Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= GPRegs[rB]=b                                            Premise(F4)

IF	S5= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S6= PC.NIA=addr                                             PC-Out(S1)
	S7= PC.NIA=>Mux40.1                                         Premise(F3929)
	S8= Mux40.1=addr                                            Path(S6,S7)
	S9= Mux40.Out=>IMem.Addr                                    Premise(F3930)
	S10= PIDReg.Out=>Mux41.1                                    Premise(F4213)
	S11= Mux41.1=pid                                            Path(S5,S10)
	S12= Mux41.Out=>IMem.PID                                    Premise(F4214)
	S13= IMem.RData=>Mux44.1                                    Premise(F4545)
	S14= Mux44.Out=>IR.In                                       Premise(F4546)
	S15= CtrlPC=0                                               Premise(F5510)
	S16= CtrlPCInc=1                                            Premise(F5511)
	S17= PC[NIA]=addr+4                                         PC-Write(S1,S15,S16)
	S18= CtrlGPRegs=0                                           Premise(F5513)
	S19= GPRegs[rA]=a                                           GPRegs-Hold(S3,S18)
	S20= GPRegs[rB]=b                                           GPRegs-Hold(S4,S18)
	S21= CtrlIR=1                                               Premise(F5524)
	S22= CtrlMux40.1=1                                          Premise(F5594)
	S23= Mux40.Out=addr                                         Mux(S8,S22)
	S24= IMem.Addr=addr                                         Path(S23,S9)
	S25= CtrlMux41.1=1                                          Premise(F5595)
	S26= Mux41.Out=pid                                          Mux(S11,S25)
	S27= IMem.PID=pid                                           Path(S26,S12)
	S28= IMem.RData={31,rS,rA,rB,1072}                          IMem-Read(S2,S27,S24)
	S29= Mux44.1={31,rS,rA,rB,1072}                             Path(S28,S13)
	S30= CtrlMux44.1=1                                          Premise(F5598)
	S31= Mux44.Out={31,rS,rA,rB,1072}                           Mux(S29,S30)
	S32= IR.In={31,rS,rA,rB,1072}                               Path(S31,S14)
	S33= [IR]={31,rS,rA,rB,1072}                                IR-Write(S32,S21)

ID	S34= IR.Out11_15=rA                                         IR-Out(S33)
	S35= IR.Out16_20=rB                                         IR-Out(S33)
	S36= Mux1.Out=>A.In                                         Premise(F5626)
	S37= GPRegs.RData1=>Mux1.3                                  Premise(F5679)
	S38= IR.Out11_15=>Mux33.1                                   Premise(F8575)
	S39= Mux33.1=rA                                             Path(S34,S38)
	S40= Mux33.Out=>GPRegs.RReg1                                Premise(F8576)
	S41= IR.Out16_20=>Mux34.1                                   Premise(F8837)
	S42= Mux34.1=rB                                             Path(S35,S41)
	S43= Mux34.Out=>GPRegs.RReg2                                Premise(F8838)
	S44= GPRegs.RData2=>Mux57.1                                 Premise(F10889)
	S45= Mux57.Out=>ShamtReg.In32bit                            Premise(F10890)
	S46= CtrlPC=0                                               Premise(F11130)
	S47= CtrlPCInc=0                                            Premise(F11131)
	S48= PC[NIA]=addr+4                                         PC-Hold(S17,S46,S47)
	S49= CtrlA=1                                                Premise(F11134)
	S50= CtrlIR=0                                               Premise(F11144)
	S51= [IR]={31,rS,rA,rB,1072}                                IR-Hold(S33,S50)
	S52= CtrlShamtReg=1                                         Premise(F11148)
	S53= CtrlMux1.1=0                                           Premise(F11149)
	S54= CtrlMux1.2=0                                           Premise(F11150)
	S55= CtrlMux1.3=1                                           Premise(F11151)
	S56= CtrlMux1.4=0                                           Premise(F11152)
	S57= CtrlMux33.1=1                                          Premise(F11203)
	S58= Mux33.Out=rA                                           Mux(S39,S57)
	S59= GPRegs.RReg1=rA                                        Path(S58,S40)
	S60= GPRegs.RData1=a                                        GPRegs-Read(S19,S59)
	S61= Mux1.3=a                                               Path(S60,S37)
	S62= Mux1.Out=a                                             Mux(S61,S53,S54,S55,S56)
	S63= A.In=a                                                 Path(S62,S36)
	S64= [A]=a                                                  A-Write(S63,S49)
	S65= CtrlMux34.1=1                                          Premise(F11204)
	S66= CtrlMux34.2=0                                          Premise(F11205)
	S67= Mux34.Out=rB                                           Mux(S42,S65,S66)
	S68= GPRegs.RReg2=rB                                        Path(S67,S43)
	S69= GPRegs.RData2=b                                        GPRegs-Read(S20,S68)
	S70= Mux57.1=b                                              Path(S69,S44)
	S71= CtrlMux57.1=1                                          Premise(F11237)
	S72= Mux57.Out=b                                            Mux(S70,S71)
	S73= ShamtReg.In32bit=b                                     Path(S72,S45)
	S74= [ShamtReg]=b[26:31]                                    ShamtReg-Write(S73,S52)

EX	S75= IR.Out0_5=31                                           IR-Out(S51)
	S76= IR.Out21_31=1072                                       IR-Out(S51)
	S77= A.Out=a                                                A-Out(S64)
	S78= ShamtReg.Out=b[26:31]                                  ShamtReg-Out(S74)
	S79= Mux9.Out=>ALUOut.In                                    Premise(F12318)
	S80= SU.Out=>Mux9.2                                         Premise(F12539)
	S81= IR.Out21_31=>Mux21.1                                   Premise(F13089)
	S82= Mux21.1=1072                                           Path(S76,S81)
	S83= Mux21.Out=>CU.IRFunc                                   Premise(F13090)
	S84= IR.Out0_5=>Mux23.1                                     Premise(F13317)
	S85= Mux23.1=31                                             Path(S75,S84)
	S86= Mux23.Out=>CU.Op                                       Premise(F13318)
	S87= A.Out=>Mux59.1                                         Premise(F16525)
	S88= Mux59.1=a                                              Path(S77,S87)
	S89= Mux59.Out=>SU.Data                                     Premise(F16526)
	S90= CU.Func=>Mux60.1                                       Premise(F16541)
	S91= Mux60.Out=>SU.Func                                     Premise(F16542)
	S92= ShamtReg.Out=>Mux61.1                                  Premise(F16557)
	S93= Mux61.1=b[26:31]                                       Path(S78,S92)
	S94= Mux61.Out=>SU.Shamt                                    Premise(F16558)
	S95= CtrlPC=0                                               Premise(F16750)
	S96= CtrlPCInc=0                                            Premise(F16751)
	S97= PC[NIA]=addr+4                                         PC-Hold(S48,S95,S96)
	S98= CtrlALUOut=1                                           Premise(F16755)
	S99= CtrlIR=0                                               Premise(F16764)
	S100= [IR]={31,rS,rA,rB,1072}                               IR-Hold(S51,S99)
	S101= CtrlMux9.1=0                                          Premise(F16783)
	S102= CtrlMux9.2=1                                          Premise(F16784)
	S103= CtrlMux21.1=1                                         Premise(F16806)
	S104= Mux21.Out=1072                                        Mux(S82,S103)
	S105= CU.IRFunc=1072                                        Path(S104,S83)
	S106= CtrlMux23.1=1                                         Premise(F16808)
	S107= Mux23.Out=31                                          Mux(S85,S106)
	S108= CU.Op=31                                              Path(S107,S86)
	S109= CU.Func=su_sr                                         CU(S108,S105)
	S110= Mux60.1=su_sr                                         Path(S109,S90)
	S111= CtrlMux59.1=1                                         Premise(F16859)
	S112= Mux59.Out=a                                           Mux(S88,S111)
	S113= SU.Data=a                                             Path(S112,S89)
	S114= CtrlMux60.1=1                                         Premise(F16860)
	S115= Mux60.Out=su_sr                                       Mux(S110,S114)
	S116= SU.Func=su_sr                                         Path(S115,S91)
	S117= CtrlMux61.1=1                                         Premise(F16861)
	S118= Mux61.Out=b[26:31]                                    Mux(S93,S117)
	S119= SU.Shamt=b[26:31]                                     Path(S118,S94)
	S120= SU.Out=a>>>b[26:31]                                   SU(S113,S119,S116)
	S121= Mux9.2=a>>>b[26:31]                                   Path(S120,S80)
	S122= Mux9.Out=a>>>b[26:31]                                 Mux(S121,S101,S102)
	S123= ALUOut.In=a>>>b[26:31]                                Path(S122,S79)
	S124= [ALUOut]=a>>>b[26:31]                                 ALUOut-Write(S123,S98)

MEM	S125= CtrlPC=0                                              Premise(F22370)
	S126= CtrlPCInc=0                                           Premise(F22371)
	S127= PC[NIA]=addr+4                                        PC-Hold(S97,S125,S126)
	S128= CtrlALUOut=0                                          Premise(F22375)
	S129= [ALUOut]=a>>>b[26:31]                                 ALUOut-Hold(S124,S128)
	S130= CtrlIR=0                                              Premise(F22384)
	S131= [IR]={31,rS,rA,rB,1072}                               IR-Hold(S100,S130)

WB	S132= ALUOut.Out=a>>>b[26:31]                               ALUOut-Out(S129)
	S133= IR.Out6_10=rS                                         IR-Out(S131)
	S134= ALUOut.Out=>Mux38.1                                   Premise(F25921)
	S135= Mux38.1=a>>>b[26:31]                                  Path(S132,S134)
	S136= Mux38.Out=>GPRegs.WData                               Premise(F25922)
	S137= Mux39.Out=>GPRegs.WReg                                Premise(F26166)
	S138= IR.Out6_10=>Mux39.2                                   Premise(F26183)
	S139= Mux39.2=rS                                            Path(S133,S138)
	S140= CtrlPC=0                                              Premise(F27990)
	S141= CtrlPCInc=0                                           Premise(F27991)
	S142= PC[NIA]=addr+4                                        PC-Hold(S127,S140,S141)
	S143= CtrlGPRegs=1                                          Premise(F27993)
	S144= CtrlMux38.1=1                                         Premise(F28069)
	S145= CtrlMux38.2=0                                         Premise(F28070)
	S146= CtrlMux38.3=0                                         Premise(F28071)
	S147= Mux38.Out=a>>>b[26:31]                                Mux(S135,S144,S145,S146)
	S148= GPRegs.WData=a>>>b[26:31]                             Path(S147,S136)
	S149= CtrlMux39.1=0                                         Premise(F28072)
	S150= CtrlMux39.2=1                                         Premise(F28073)
	S151= Mux39.Out=rS                                          Mux(S139,S149,S150)
	S152= GPRegs.WReg=rS                                        Path(S151,S137)
	S153= GPRegs[rS]=a>>>b[26:31]                               GPRegs-Write(S152,S148,S143)

WB/	S142= PC[NIA]=addr+4                                        PC-Hold(S127,S140,S141)
	S153= GPRegs[rS]=a>>>b[26:31]                               GPRegs-Write(S152,S148,S143)

