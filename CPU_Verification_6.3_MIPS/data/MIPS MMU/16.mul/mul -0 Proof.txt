
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={28,rS,rT,rD,0,2}                      Premise(F2)
	S3= ICache[addr]={28,rS,rT,rD,0,2}                          Premise(F3)
	S4= GPR[rS]=a                                               Premise(F4)
	S5= GPR[rT]=b                                               Premise(F5)

IF	S6= CP0.ASID=pid                                            ASID-Read(S0)
	S7= PC.Out=addr                                             PC-Out(S1)
	S8= CP0.ASID=>IMMU.PID                                      Premise(F6)
	S9= IMMU.PID=pid                                            Path(S6,S8)
	S10= PC.Out=>IMMU.IEA                                       Premise(F7)
	S11= IMMU.IEA=addr                                          Path(S7,S10)
	S12= IMMU.Addr={pid,addr}                                   IMMU-Search(S9,S11)
	S13= IMMU.Addr=>IAddrReg.In                                 Premise(F8)
	S14= IAddrReg.In={pid,addr}                                 Path(S12,S13)
	S15= PC.Out=>ICache.IEA                                     Premise(F10)
	S16= ICache.IEA=addr                                        Path(S7,S15)
	S17= ICache.Out={28,rS,rT,rD,0,2}                           ICache-Search(S16,S3)
	S18= ICache.Out=>ICacheReg.In                               Premise(F11)
	S19= ICacheReg.In={28,rS,rT,rD,0,2}                         Path(S17,S18)
	S20= CtrlPC=0                                               Premise(F39)
	S21= CtrlPCInc=0                                            Premise(F40)
	S22= PC[Out]=addr                                           PC-Hold(S1,S20,S21)
	S23= CtrlIAddrReg=1                                         Premise(F41)
	S24= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S14,S23)
	S25= CtrlICacheReg=1                                        Premise(F44)
	S26= [ICacheReg]={28,rS,rT,rD,0,2}                          ICacheReg-Write(S19,S25)
	S27= CtrlIMem=0                                             Premise(F46)
	S28= IMem[{pid,addr}]={28,rS,rT,rD,0,2}                     IMem-Hold(S2,S27)
	S29= CtrlGPR=0                                              Premise(F49)
	S30= GPR[rS]=a                                              GPR-Hold(S4,S29)
	S31= GPR[rT]=b                                              GPR-Hold(S5,S29)

IMMU	S32= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S24)
	S33= ICacheReg.Out={28,rS,rT,rD,0,2}                        ICacheReg-Out(S26)
	S34= IAddrReg.Out=>IMem.RAddr                               Premise(F62)
	S35= IMem.RAddr={pid,addr}                                  Path(S32,S34)
	S36= IMem.Out={28,rS,rT,rD,0,2}                             IMem-Read(S35,S28)
	S37= IMem.Out=>IRMux.MemData                                Premise(F63)
	S38= IRMux.MemData={28,rS,rT,rD,0,2}                        Path(S36,S37)
	S39= ICacheReg.Out=>IRMux.CacheData                         Premise(F64)
	S40= IRMux.CacheData={28,rS,rT,rD,0,2}                      Path(S33,S39)
	S41= IRMux.Out={28,rS,rT,rD,0,2}                            IRMux-Select(S38,S40)
	S42= IRMux.Out=>IR.In                                       Premise(F67)
	S43= IR.In={28,rS,rT,rD,0,2}                                Path(S41,S42)
	S44= CtrlPC=0                                               Premise(F86)
	S45= CtrlPCInc=1                                            Premise(F87)
	S46= PC[Out]=addr+4                                         PC-Inc(S22,S44,S45)
	S47= CtrlIR=1                                               Premise(F95)
	S48= [IR]={28,rS,rT,rD,0,2}                                 IR-Write(S43,S47)
	S49= CtrlGPR=0                                              Premise(F96)
	S50= GPR[rS]=a                                              GPR-Hold(S30,S49)
	S51= GPR[rT]=b                                              GPR-Hold(S31,S49)

ID	S52= IR.Out25_21=rS                                         IR-Out(S48)
	S53= IR.Out20_16=rT                                         IR-Out(S48)
	S54= IR.Out25_21=>GPR.RReg1                                 Premise(F118)
	S55= GPR.RReg1=rS                                           Path(S52,S54)
	S56= GPR.Rdata1=a                                           GPR-Read(S55,S50)
	S57= IR.Out20_16=>GPR.RReg2                                 Premise(F119)
	S58= GPR.RReg2=rT                                           Path(S53,S57)
	S59= GPR.Rdata2=b                                           GPR-Read(S58,S51)
	S60= GPR.Rdata1=>A.In                                       Premise(F121)
	S61= A.In=a                                                 Path(S56,S60)
	S62= GPR.Rdata2=>B.In                                       Premise(F122)
	S63= B.In=b                                                 Path(S59,S62)
	S64= CtrlPC=0                                               Premise(F133)
	S65= CtrlPCInc=0                                            Premise(F134)
	S66= PC[Out]=addr+4                                         PC-Hold(S46,S64,S65)
	S67= CtrlIR=0                                               Premise(F142)
	S68= [IR]={28,rS,rT,rD,0,2}                                 IR-Hold(S48,S67)
	S69= CtrlA=1                                                Premise(F144)
	S70= [A]=a                                                  A-Write(S61,S69)
	S71= CtrlB=1                                                Premise(F145)
	S72= [B]=b                                                  B-Write(S63,S71)

EX	S73= A.Out=a                                                A-Out(S70)
	S74= B.Out=b                                                B-Out(S72)
	S75= A.Out=>MDU.A                                           Premise(F170)
	S76= MDU.A=a                                                Path(S73,S75)
	S77= B.Out=>MDU.B                                           Premise(F171)
	S78= MDU.B=b                                                Path(S74,S77)
	S79= MDU.lo=(a¡Áb)[31:0]                                     MDU(S76,S78)
	S80= MDU.lo=>Lo.In                                          Premise(F173)
	S81= Lo.In=(a¡Áb)[31:0]                                      Path(S79,S80)
	S82= CtrlPC=0                                               Premise(F181)
	S83= CtrlPCInc=0                                            Premise(F182)
	S84= PC[Out]=addr+4                                         PC-Hold(S66,S82,S83)
	S85= CtrlIR=0                                               Premise(F190)
	S86= [IR]={28,rS,rT,rD,0,2}                                 IR-Hold(S68,S85)
	S87= CtrlLo=1                                               Premise(F194)
	S88= [Lo]=(a¡Áb)[31:0]                                       Lo-Write(S81,S87)

MEM	S89= CtrlPC=0                                               Premise(F228)
	S90= CtrlPCInc=0                                            Premise(F229)
	S91= PC[Out]=addr+4                                         PC-Hold(S84,S89,S90)
	S92= CtrlIR=0                                               Premise(F237)
	S93= [IR]={28,rS,rT,rD,0,2}                                 IR-Hold(S86,S92)
	S94= CtrlLo=0                                               Premise(F241)
	S95= [Lo]=(a¡Áb)[31:0]                                       Lo-Hold(S88,S94)

DMMU1	S96= CtrlPC=0                                               Premise(F275)
	S97= CtrlPCInc=0                                            Premise(F276)
	S98= PC[Out]=addr+4                                         PC-Hold(S91,S96,S97)
	S99= CtrlIR=0                                               Premise(F284)
	S100= [IR]={28,rS,rT,rD,0,2}                                IR-Hold(S93,S99)
	S101= CtrlLo=0                                              Premise(F288)
	S102= [Lo]=(a¡Áb)[31:0]                                      Lo-Hold(S95,S101)

DMMU2	S103= CtrlPC=0                                              Premise(F322)
	S104= CtrlPCInc=0                                           Premise(F323)
	S105= PC[Out]=addr+4                                        PC-Hold(S98,S103,S104)
	S106= CtrlIR=0                                              Premise(F331)
	S107= [IR]={28,rS,rT,rD,0,2}                                IR-Hold(S100,S106)
	S108= CtrlLo=0                                              Premise(F335)
	S109= [Lo]=(a¡Áb)[31:0]                                      Lo-Hold(S102,S108)

WB	S110= IR.Out15_11=rD                                        IR-Out(S107)
	S111= Lo.Out=(a¡Áb)[31:0]                                    Lo-Out(S109)
	S112= Lo.Out=>GPR.WData                                     Premise(F362)
	S113= GPR.WData=(a¡Áb)[31:0]                                 Path(S111,S112)
	S114= IR.Out15_11=>GPR.WReg                                 Premise(F363)
	S115= GPR.WReg=rD                                           Path(S110,S114)
	S116= CtrlPC=0                                              Premise(F369)
	S117= CtrlPCInc=0                                           Premise(F370)
	S118= PC[Out]=addr+4                                        PC-Hold(S105,S116,S117)
	S119= CtrlGPR=1                                             Premise(F379)
	S120= GPR[rD]=(a¡Áb)[31:0]                                   GPR-Write(S115,S113,S119)

POST	S118= PC[Out]=addr+4                                        PC-Hold(S105,S116,S117)
	S120= GPR[rD]=(a¡Áb)[31:0]                                   GPR-Write(S115,S113,S119)

