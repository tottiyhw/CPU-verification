
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={7,rS,0,offset}                        Premise(F2)
	S3= GPR[rS]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            ASID-Read(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= CP0.ASID=>IMMU.PID                                      Premise(F4)
	S7= IMMU.PID=pid                                            Path(S4,S6)
	S8= PC.Out=>IMMU.IEA                                        Premise(F5)
	S9= IMMU.IEA=addr                                           Path(S5,S8)
	S10= IMMU.Addr={pid,addr}                                   IMMU-Search(S7,S9)
	S11= IMMU.Addr=>IAddrReg.In                                 Premise(F6)
	S12= IAddrReg.In={pid,addr}                                 Path(S10,S11)
	S13= CtrlPC=0                                               Premise(F40)
	S14= CtrlPCInc=0                                            Premise(F41)
	S15= PC[Out]=addr                                           PC-Hold(S1,S13,S14)
	S16= CtrlIAddrReg=1                                         Premise(F42)
	S17= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S12,S16)
	S18= CtrlIMem=0                                             Premise(F47)
	S19= IMem[{pid,addr}]={7,rS,0,offset}                       IMem-Hold(S2,S18)
	S20= CtrlGPR=0                                              Premise(F50)
	S21= GPR[rS]=a                                              GPR-Hold(S3,S20)

IMMU	S22= PC.Out=addr                                            PC-Out(S15)
	S23= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S17)
	S24= PC.Out=>ICache.IEA                                     Premise(F59)
	S25= ICache.IEA=addr                                        Path(S22,S24)
	S26= IAddrReg.Out=>IMem.RAddr                               Premise(F64)
	S27= IMem.RAddr={pid,addr}                                  Path(S23,S26)
	S28= IMem.Out={7,rS,0,offset}                               IMem-Read(S27,S19)
	S29= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S27,S19)
	S30= IMem.Out=>IRMux.MemData                                Premise(F65)
	S31= IRMux.MemData={7,rS,0,offset}                          Path(S28,S30)
	S32= IRMux.Out={7,rS,0,offset}                              IRMux-Select(S31)
	S33= IRMux.Out=>IR.In                                       Premise(F69)
	S34= IR.In={7,rS,0,offset}                                  Path(S32,S33)
	S35= IMem.MEM8WordOut=>ICache.WData                         Premise(F70)
	S36= ICache.WData=IMemGet8Word({pid,addr})                  Path(S29,S35)
	S37= CtrlICache=1                                           Premise(F95)
	S38= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S25,S36,S37)
	S39= CtrlIR=1                                               Premise(F100)
	S40= [IR]={7,rS,0,offset}                                   IR-Write(S34,S39)
	S41= CtrlGPR=0                                              Premise(F101)
	S42= GPR[rS]=a                                              GPR-Hold(S21,S41)

ID	S43= IR.Out25_21=rS                                         IR-Out(S40)
	S44= IR.Out25_21=>GPR.RReg1                                 Premise(F124)
	S45= GPR.RReg1=rS                                           Path(S43,S44)
	S46= GPR.Rdata1=a                                           GPR-Read(S45,S42)
	S47= GPR.Rdata2=32'b0                                       GPR-ReadGPR0()
	S48= GPR.Rdata1=>A.In                                       Premise(F126)
	S49= A.In=a                                                 Path(S46,S48)
	S50= GPR.Rdata2=>B.In                                       Premise(F127)
	S51= B.In=32'b0                                             Path(S47,S50)
	S52= CtrlICache=0                                           Premise(F146)
	S53= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S38,S52)
	S54= CtrlA=1                                                Premise(F153)
	S55= [A]=a                                                  A-Write(S49,S54)
	S56= CtrlB=1                                                Premise(F154)
	S57= [B]=32'b0                                              B-Write(S51,S56)

EX	S58= A.Out=a                                                A-Out(S55)
	S59= B.Out=32'b0                                            B-Out(S57)
	S60= A.Out=>CMPU.A                                          Premise(F184)
	S61= CMPU.A=a                                               Path(S58,S60)
	S62= B.Out=>CMPU.B                                          Premise(F185)
	S63= CMPU.B=32'b0                                           Path(S59,S62)
	S64= CMPU.gt=CompareS(a,32'b0)                              CMPU-CMPS(S61,S63)
	S65= CMPU.gt=>ConditionReg.In                               Premise(F187)
	S66= ConditionReg.In=CompareS(a,32'b0)                      Path(S64,S65)
	S67= CtrlICache=0                                           Premise(F199)
	S68= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S53,S67)
	S69= CtrlConditionReg=1                                     Premise(F209)
	S70= [ConditionReg]=CompareS(a,32'b0)                       ConditionReg-Write(S66,S69)

MEM	S71= CtrlICache=0                                           Premise(F250)
	S72= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S68,S71)
	S73= CtrlConditionReg=0                                     Premise(F260)
	S74= [ConditionReg]=CompareS(a,32'b0)                       ConditionReg-Hold(S70,S73)

DMMU1	S75= CtrlICache=0                                           Premise(F301)
	S76= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S72,S75)
	S77= CtrlConditionReg=0                                     Premise(F311)
	S78= [ConditionReg]=CompareS(a,32'b0)                       ConditionReg-Hold(S74,S77)

DMMU2	S79= CtrlICache=0                                           Premise(F352)
	S80= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S76,S79)
	S81= CtrlConditionReg=0                                     Premise(F362)
	S82= [ConditionReg]=CompareS(a,32'b0)                       ConditionReg-Hold(S78,S81)

WB	S83= CtrlICache=0                                           Premise(F403)
	S84= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S80,S83)
	S85= CtrlConditionReg=0                                     Premise(F413)
	S86= [ConditionReg]=CompareS(a,32'b0)                       ConditionReg-Hold(S82,S85)

POST	S84= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S80,S83)
	S86= [ConditionReg]=CompareS(a,32'b0)                       ConditionReg-Hold(S82,S85)

