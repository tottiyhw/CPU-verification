
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={28,rS,rT,rD,0,33}                     Premise(F2)
	S3= ICache[addr]={28,rS,rT,rD,0,33}                         Premise(F3)
	S4= GPR[rS]=a                                               Premise(F4)

IF	S5= CP0.ASID=pid                                            ASID-Read(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= CP0.ASID=>IMMU.PID                                      Premise(F5)
	S8= IMMU.PID=pid                                            Path(S5,S7)
	S9= PC.Out=>IMMU.IEA                                        Premise(F6)
	S10= IMMU.IEA=addr                                          Path(S6,S9)
	S11= IMMU.Addr={pid,addr}                                   IMMU-Search(S8,S10)
	S12= IMMU.Addr=>IAddrReg.In                                 Premise(F7)
	S13= IAddrReg.In={pid,addr}                                 Path(S11,S12)
	S14= PC.Out=>ICache.IEA                                     Premise(F9)
	S15= ICache.IEA=addr                                        Path(S6,S14)
	S16= ICache.Out={28,rS,rT,rD,0,33}                          ICache-Search(S15,S3)
	S17= ICache.Out=>ICacheReg.In                               Premise(F10)
	S18= ICacheReg.In={28,rS,rT,rD,0,33}                        Path(S16,S17)
	S19= CtrlPC=0                                               Premise(F34)
	S20= CtrlPCInc=0                                            Premise(F35)
	S21= PC[Out]=addr                                           PC-Hold(S1,S19,S20)
	S22= CtrlIAddrReg=1                                         Premise(F36)
	S23= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S13,S22)
	S24= CtrlICacheReg=1                                        Premise(F39)
	S25= [ICacheReg]={28,rS,rT,rD,0,33}                         ICacheReg-Write(S18,S24)
	S26= CtrlIMem=0                                             Premise(F41)
	S27= IMem[{pid,addr}]={28,rS,rT,rD,0,33}                    IMem-Hold(S2,S26)
	S28= CtrlGPR=0                                              Premise(F44)
	S29= GPR[rS]=a                                              GPR-Hold(S4,S28)

IMMU	S30= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S23)
	S31= ICacheReg.Out={28,rS,rT,rD,0,33}                       ICacheReg-Out(S25)
	S32= IAddrReg.Out=>IMem.RAddr                               Premise(F55)
	S33= IMem.RAddr={pid,addr}                                  Path(S30,S32)
	S34= IMem.Out={28,rS,rT,rD,0,33}                            IMem-Read(S33,S27)
	S35= IMem.Out=>IRMux.MemData                                Premise(F56)
	S36= IRMux.MemData={28,rS,rT,rD,0,33}                       Path(S34,S35)
	S37= ICacheReg.Out=>IRMux.CacheData                         Premise(F57)
	S38= IRMux.CacheData={28,rS,rT,rD,0,33}                     Path(S31,S37)
	S39= IRMux.Out={28,rS,rT,rD,0,33}                           IRMux-Select(S36,S38)
	S40= IRMux.Out=>IR.In                                       Premise(F60)
	S41= IR.In={28,rS,rT,rD,0,33}                               Path(S39,S40)
	S42= CtrlPC=0                                               Premise(F75)
	S43= CtrlPCInc=1                                            Premise(F76)
	S44= PC[Out]=addr+4                                         PC-Inc(S21,S42,S43)
	S45= CtrlIR=1                                               Premise(F84)
	S46= [IR]={28,rS,rT,rD,0,33}                                IR-Write(S41,S45)
	S47= CtrlGPR=0                                              Premise(F85)
	S48= GPR[rS]=a                                              GPR-Hold(S29,S47)

ID	S49= IR.Out25_21=rS                                         IR-Out(S46)
	S50= IR.Out25_21=>GPR.RReg1                                 Premise(F105)
	S51= GPR.RReg1=rS                                           Path(S49,S50)
	S52= GPR.Rdata1=a                                           GPR-Read(S51,S48)
	S53= GPR.Rdata1=>A.In                                       Premise(F107)
	S54= A.In=a                                                 Path(S52,S53)
	S55= CtrlPC=0                                               Premise(F116)
	S56= CtrlPCInc=0                                            Premise(F117)
	S57= PC[Out]=addr+4                                         PC-Hold(S44,S55,S56)
	S58= CtrlIR=0                                               Premise(F125)
	S59= [IR]={28,rS,rT,rD,0,33}                                IR-Hold(S46,S58)
	S60= CtrlA=1                                                Premise(F127)
	S61= [A]=a                                                  A-Write(S54,S60)

EX	S62= IR.Out15_11=rD                                         IR-Out(S59)
	S63= A.Out=a                                                A-Out(S61)
	S64= A.Out=>CountUnit.In                                    Premise(F149)
	S65= CountUnit.In=a                                         Path(S63,S64)
	S66= CountUnit.Out=Count1(a)                                CountUnit_Count1(S65)
	S67= CountUnit.Out=>GPR.WData                               Premise(F151)
	S68= GPR.WData=Count1(a)                                    Path(S66,S67)
	S69= IR.Out15_11=>GPR.WReg                                  Premise(F152)
	S70= GPR.WReg=rD                                            Path(S62,S69)
	S71= CtrlPC=0                                               Premise(F158)
	S72= CtrlPCInc=0                                            Premise(F159)
	S73= PC[Out]=addr+4                                         PC-Hold(S57,S71,S72)
	S74= CtrlGPR=1                                              Premise(F168)
	S75= GPR[rD]=Count1(a)                                      GPR-Write(S70,S68,S74)

MEM	S76= CtrlPC=0                                               Premise(F199)
	S77= CtrlPCInc=0                                            Premise(F200)
	S78= PC[Out]=addr+4                                         PC-Hold(S73,S76,S77)
	S79= CtrlGPR=0                                              Premise(F209)
	S80= GPR[rD]=Count1(a)                                      GPR-Hold(S75,S79)

DMMU1	S81= CtrlPC=0                                               Premise(F240)
	S82= CtrlPCInc=0                                            Premise(F241)
	S83= PC[Out]=addr+4                                         PC-Hold(S78,S81,S82)
	S84= CtrlGPR=0                                              Premise(F250)
	S85= GPR[rD]=Count1(a)                                      GPR-Hold(S80,S84)

DMMU2	S86= CtrlPC=0                                               Premise(F281)
	S87= CtrlPCInc=0                                            Premise(F282)
	S88= PC[Out]=addr+4                                         PC-Hold(S83,S86,S87)
	S89= CtrlGPR=0                                              Premise(F291)
	S90= GPR[rD]=Count1(a)                                      GPR-Hold(S85,S89)

WB	S91= CtrlPC=0                                               Premise(F322)
	S92= CtrlPCInc=0                                            Premise(F323)
	S93= PC[Out]=addr+4                                         PC-Hold(S88,S91,S92)
	S94= CtrlGPR=0                                              Premise(F332)
	S95= GPR[rD]=Count1(a)                                      GPR-Hold(S90,S94)

POST	S93= PC[Out]=addr+4                                         PC-Hold(S88,S91,S92)
	S95= GPR[rD]=Count1(a)                                      GPR-Hold(S90,S94)

