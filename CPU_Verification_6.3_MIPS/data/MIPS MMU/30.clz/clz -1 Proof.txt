
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={28,rS,rT,rD,0,32}                     Premise(F2)
	S3= GPR[rS]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            ASID-Read(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= CP0.ASID=>IMMU.PID                                      Premise(F4)
	S7= IMMU.PID=pid                                            Path(S4,S6)
	S8= PC.Out=>IMMU.IEA                                        Premise(F5)
	S9= IMMU.IEA=addr                                           Path(S5,S8)
	S10= IMMU.Addr={pid,addr}                                   IMMU-Search(S7,S9)
	S11= IMMU.Addr=>IAddrReg.In                                 Premise(F6)
	S12= IAddrReg.In={pid,addr}                                 Path(S10,S11)
	S13= CtrlPC=0                                               Premise(F33)
	S14= CtrlPCInc=0                                            Premise(F34)
	S15= PC[Out]=addr                                           PC-Hold(S1,S13,S14)
	S16= CtrlIAddrReg=1                                         Premise(F35)
	S17= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S12,S16)
	S18= CtrlIMem=0                                             Premise(F40)
	S19= IMem[{pid,addr}]={28,rS,rT,rD,0,32}                    IMem-Hold(S2,S18)
	S20= CtrlGPR=0                                              Premise(F43)
	S21= GPR[rS]=a                                              GPR-Hold(S3,S20)

IMMU	S22= PC.Out=addr                                            PC-Out(S15)
	S23= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S17)
	S24= PC.Out=>ICache.IEA                                     Premise(F49)
	S25= ICache.IEA=addr                                        Path(S22,S24)
	S26= IAddrReg.Out=>IMem.RAddr                               Premise(F54)
	S27= IMem.RAddr={pid,addr}                                  Path(S23,S26)
	S28= IMem.Out={28,rS,rT,rD,0,32}                            IMem-Read(S27,S19)
	S29= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S27,S19)
	S30= IMem.Out=>IRMux.MemData                                Premise(F55)
	S31= IRMux.MemData={28,rS,rT,rD,0,32}                       Path(S28,S30)
	S32= IRMux.Out={28,rS,rT,rD,0,32}                           IRMux-Select(S31)
	S33= IRMux.Out=>IR.In                                       Premise(F59)
	S34= IR.In={28,rS,rT,rD,0,32}                               Path(S32,S33)
	S35= IMem.MEM8WordOut=>ICache.WData                         Premise(F60)
	S36= ICache.WData=IMemGet8Word({pid,addr})                  Path(S29,S35)
	S37= CtrlPC=0                                               Premise(F74)
	S38= CtrlPCInc=1                                            Premise(F75)
	S39= PC[Out]=addr+4                                         PC-Inc(S15,S37,S38)
	S40= CtrlICache=1                                           Premise(F78)
	S41= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S25,S36,S40)
	S42= CtrlIR=1                                               Premise(F83)
	S43= [IR]={28,rS,rT,rD,0,32}                                IR-Write(S34,S42)
	S44= CtrlGPR=0                                              Premise(F84)
	S45= GPR[rS]=a                                              GPR-Hold(S21,S44)

ID	S46= IR.Out25_21=rS                                         IR-Out(S43)
	S47= IR.Out25_21=>GPR.RReg1                                 Premise(F104)
	S48= GPR.RReg1=rS                                           Path(S46,S47)
	S49= GPR.Rdata1=a                                           GPR-Read(S48,S45)
	S50= GPR.Rdata1=>A.In                                       Premise(F106)
	S51= A.In=a                                                 Path(S49,S50)
	S52= CtrlPC=0                                               Premise(F115)
	S53= CtrlPCInc=0                                            Premise(F116)
	S54= PC[Out]=addr+4                                         PC-Hold(S39,S52,S53)
	S55= CtrlICache=0                                           Premise(F119)
	S56= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S41,S55)
	S57= CtrlIR=0                                               Premise(F124)
	S58= [IR]={28,rS,rT,rD,0,32}                                IR-Hold(S43,S57)
	S59= CtrlA=1                                                Premise(F126)
	S60= [A]=a                                                  A-Write(S51,S59)

EX	S61= IR.Out15_11=rD                                         IR-Out(S58)
	S62= A.Out=a                                                A-Out(S60)
	S63= A.Out=>CountUnit.In                                    Premise(F148)
	S64= CountUnit.In=a                                         Path(S62,S63)
	S65= CountUnit.Out=Count0(a)                                CountUnit_Count0(S64)
	S66= CountUnit.Out=>GPR.WData                               Premise(F150)
	S67= GPR.WData=Count0(a)                                    Path(S65,S66)
	S68= IR.Out15_11=>GPR.WReg                                  Premise(F151)
	S69= GPR.WReg=rD                                            Path(S61,S68)
	S70= CtrlPC=0                                               Premise(F157)
	S71= CtrlPCInc=0                                            Premise(F158)
	S72= PC[Out]=addr+4                                         PC-Hold(S54,S70,S71)
	S73= CtrlICache=0                                           Premise(F161)
	S74= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S56,S73)
	S75= CtrlGPR=1                                              Premise(F167)
	S76= GPR[rD]=Count0(a)                                      GPR-Write(S69,S67,S75)

MEM	S77= CtrlPC=0                                               Premise(F198)
	S78= CtrlPCInc=0                                            Premise(F199)
	S79= PC[Out]=addr+4                                         PC-Hold(S72,S77,S78)
	S80= CtrlICache=0                                           Premise(F202)
	S81= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S74,S80)
	S82= CtrlGPR=0                                              Premise(F208)
	S83= GPR[rD]=Count0(a)                                      GPR-Hold(S76,S82)

DMMU1	S84= CtrlPC=0                                               Premise(F239)
	S85= CtrlPCInc=0                                            Premise(F240)
	S86= PC[Out]=addr+4                                         PC-Hold(S79,S84,S85)
	S87= CtrlICache=0                                           Premise(F243)
	S88= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S81,S87)
	S89= CtrlGPR=0                                              Premise(F249)
	S90= GPR[rD]=Count0(a)                                      GPR-Hold(S83,S89)

DMMU2	S91= CtrlPC=0                                               Premise(F280)
	S92= CtrlPCInc=0                                            Premise(F281)
	S93= PC[Out]=addr+4                                         PC-Hold(S86,S91,S92)
	S94= CtrlICache=0                                           Premise(F284)
	S95= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S88,S94)
	S96= CtrlGPR=0                                              Premise(F290)
	S97= GPR[rD]=Count0(a)                                      GPR-Hold(S90,S96)

WB	S98= CtrlPC=0                                               Premise(F321)
	S99= CtrlPCInc=0                                            Premise(F322)
	S100= PC[Out]=addr+4                                        PC-Hold(S93,S98,S99)
	S101= CtrlICache=0                                          Premise(F325)
	S102= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S95,S101)
	S103= CtrlGPR=0                                             Premise(F331)
	S104= GPR[rD]=Count0(a)                                     GPR-Hold(S97,S103)

POST	S100= PC[Out]=addr+4                                        PC-Hold(S93,S98,S99)
	S102= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S95,S101)
	S104= GPR[rD]=Count0(a)                                     GPR-Hold(S97,S103)

