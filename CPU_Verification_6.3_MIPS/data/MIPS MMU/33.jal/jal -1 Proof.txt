
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={3,imm}                                Premise(F2)

IF	S3= CP0.ASID=pid                                            ASID-Read(S0)
	S4= PC.Out=addr                                             PC-Out(S1)
	S5= CP0.ASID=>IMMU.PID                                      Premise(F3)
	S6= IMMU.PID=pid                                            Path(S3,S5)
	S7= PC.Out=>IMMU.IEA                                        Premise(F4)
	S8= IMMU.IEA=addr                                           Path(S4,S7)
	S9= IMMU.Addr={pid,addr}                                    IMMU-Search(S6,S8)
	S10= IMMU.Addr=>IAddrReg.In                                 Premise(F5)
	S11= IAddrReg.In={pid,addr}                                 Path(S9,S10)
	S12= CtrlPC=0                                               Premise(F30)
	S13= CtrlPCInc=0                                            Premise(F31)
	S14= PC[Out]=addr                                           PC-Hold(S1,S12,S13)
	S15= CtrlIAddrReg=1                                         Premise(F32)
	S16= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S11,S15)
	S17= CtrlIMem=0                                             Premise(F37)
	S18= IMem[{pid,addr}]={3,imm}                               IMem-Hold(S2,S17)

IMMU	S19= PC.Out=addr                                            PC-Out(S14)
	S20= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S16)
	S21= PC.Out=>ICache.IEA                                     Premise(F45)
	S22= ICache.IEA=addr                                        Path(S19,S21)
	S23= IAddrReg.Out=>IMem.RAddr                               Premise(F50)
	S24= IMem.RAddr={pid,addr}                                  Path(S20,S23)
	S25= IMem.Out={3,imm}                                       IMem-Read(S24,S18)
	S26= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S24,S18)
	S27= IMem.Out=>IRMux.MemData                                Premise(F51)
	S28= IRMux.MemData={3,imm}                                  Path(S25,S27)
	S29= IRMux.Out={3,imm}                                      IRMux-Select(S28)
	S30= IRMux.Out=>IR.In                                       Premise(F55)
	S31= IR.In={3,imm}                                          Path(S29,S30)
	S32= IMem.MEM8WordOut=>ICache.WData                         Premise(F56)
	S33= ICache.WData=IMemGet8Word({pid,addr})                  Path(S26,S32)
	S34= CtrlPC=0                                               Premise(F68)
	S35= CtrlPCInc=1                                            Premise(F69)
	S36= PC[Out]=addr+4                                         PC-Inc(S14,S34,S35)
	S37= PC[CIA]=addr                                           PC-Inc(S14,S34,S35)
	S38= CtrlICache=1                                           Premise(F72)
	S39= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S22,S33,S38)
	S40= CtrlIR=1                                               Premise(F77)
	S41= [IR]={3,imm}                                           IR-Write(S31,S40)

ID	S42= PC.Out=addr+4                                          PC-Out(S36)
	S43= PC.CIA31_28=addr[31:28]                                PC-Out(S37)
	S44= IR.Out25_0=imm                                         IR-Out(S41)
	S45= PC.CIA31_28=>ADDREXT.PCpart                            Premise(F97)
	S46= ADDREXT.PCpart=addr[31:28]                             Path(S43,S45)
	S47= IR.Out25_0=>ADDREXT.In                                 Premise(F98)
	S48= ADDREXT.In=imm                                         Path(S44,S47)
	S49= ADDREXT.Out={addr[31:28],imm,2'b0}                     ADDREXT-EXT(S46,S48)
	S50= ADDREXT.Out=>PC.In                                     Premise(F99)
	S51= PC.In={addr[31:28],imm,2'b0}                           Path(S49,S50)
	S52= GPR.WReg=5'd31                                         Premise(F100)
	S53= PC.Out=>GPR.WData                                      Premise(F101)
	S54= GPR.WData=addr+4                                       Path(S42,S53)
	S55= CtrlPC=1                                               Premise(F107)
	S56= CtrlPCInc=0                                            Premise(F108)
	S57= PC[Out]={addr[31:28],imm,2'b0}                         PC-Write(S51,S55,S56)
	S58= CtrlICache=0                                           Premise(F111)
	S59= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S39,S58)
	S60= CtrlGPR=1                                              Premise(F117)
	S61= GPR[5'd31]=addr+4                                      GPR-Write(S52,S54,S60)

EX	S62= CtrlPC=0                                               Premise(F145)
	S63= CtrlPCInc=0                                            Premise(F146)
	S64= PC[Out]={addr[31:28],imm,2'b0}                         PC-Hold(S57,S62,S63)
	S65= CtrlICache=0                                           Premise(F149)
	S66= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S59,S65)
	S67= CtrlGPR=0                                              Premise(F155)
	S68= GPR[5'd31]=addr+4                                      GPR-Hold(S61,S67)

MEM	S69= CtrlPC=0                                               Premise(F183)
	S70= CtrlPCInc=0                                            Premise(F184)
	S71= PC[Out]={addr[31:28],imm,2'b0}                         PC-Hold(S64,S69,S70)
	S72= CtrlICache=0                                           Premise(F187)
	S73= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S66,S72)
	S74= CtrlGPR=0                                              Premise(F193)
	S75= GPR[5'd31]=addr+4                                      GPR-Hold(S68,S74)

DMMU1	S76= CtrlPC=0                                               Premise(F221)
	S77= CtrlPCInc=0                                            Premise(F222)
	S78= PC[Out]={addr[31:28],imm,2'b0}                         PC-Hold(S71,S76,S77)
	S79= CtrlICache=0                                           Premise(F225)
	S80= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S73,S79)
	S81= CtrlGPR=0                                              Premise(F231)
	S82= GPR[5'd31]=addr+4                                      GPR-Hold(S75,S81)

DMMU2	S83= CtrlPC=0                                               Premise(F259)
	S84= CtrlPCInc=0                                            Premise(F260)
	S85= PC[Out]={addr[31:28],imm,2'b0}                         PC-Hold(S78,S83,S84)
	S86= CtrlICache=0                                           Premise(F263)
	S87= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S80,S86)
	S88= CtrlGPR=0                                              Premise(F269)
	S89= GPR[5'd31]=addr+4                                      GPR-Hold(S82,S88)

WB	S90= CtrlPC=0                                               Premise(F297)
	S91= CtrlPCInc=0                                            Premise(F298)
	S92= PC[Out]={addr[31:28],imm,2'b0}                         PC-Hold(S85,S90,S91)
	S93= CtrlICache=0                                           Premise(F301)
	S94= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S87,S93)
	S95= CtrlGPR=0                                              Premise(F307)
	S96= GPR[5'd31]=addr+4                                      GPR-Hold(S89,S95)

POST	S92= PC[Out]={addr[31:28],imm,2'b0}                         PC-Hold(S85,S90,S91)
	S94= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S87,S93)
	S96= GPR[5'd31]=addr+4                                      GPR-Hold(S89,S95)

