
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rS,0,rD,hint,9}                     Premise(F2)
	S3= ICache[addr]={0,rS,0,rD,hint,9}                         Premise(F3)
	S4= GPR[rS]=a                                               Premise(F4)

IF	S5= CP0.ASID=pid                                            ASID-Read(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= CP0.ASID=>IMMU.PID                                      Premise(F5)
	S8= IMMU.PID=pid                                            Path(S5,S7)
	S9= PC.Out=>IMMU.IEA                                        Premise(F6)
	S10= IMMU.IEA=addr                                          Path(S6,S9)
	S11= IMMU.Addr={pid,addr}                                   IMMU-Search(S8,S10)
	S12= IMMU.Addr=>IAddrReg.In                                 Premise(F7)
	S13= IAddrReg.In={pid,addr}                                 Path(S11,S12)
	S14= PC.Out=>ICache.IEA                                     Premise(F9)
	S15= ICache.IEA=addr                                        Path(S6,S14)
	S16= ICache.Out={0,rS,0,rD,hint,9}                          ICache-Search(S15,S3)
	S17= ICache.Out=>ICacheReg.In                               Premise(F10)
	S18= ICacheReg.In={0,rS,0,rD,hint,9}                        Path(S16,S17)
	S19= CtrlPC=0                                               Premise(F33)
	S20= CtrlPCInc=0                                            Premise(F34)
	S21= PC[Out]=addr                                           PC-Hold(S1,S19,S20)
	S22= CtrlIAddrReg=1                                         Premise(F35)
	S23= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S13,S22)
	S24= CtrlICacheReg=1                                        Premise(F38)
	S25= [ICacheReg]={0,rS,0,rD,hint,9}                         ICacheReg-Write(S18,S24)
	S26= CtrlIMem=0                                             Premise(F40)
	S27= IMem[{pid,addr}]={0,rS,0,rD,hint,9}                    IMem-Hold(S2,S26)
	S28= CtrlGPR=0                                              Premise(F43)
	S29= GPR[rS]=a                                              GPR-Hold(S4,S28)

IMMU	S30= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S23)
	S31= ICacheReg.Out={0,rS,0,rD,hint,9}                       ICacheReg-Out(S25)
	S32= IAddrReg.Out=>IMem.RAddr                               Premise(F53)
	S33= IMem.RAddr={pid,addr}                                  Path(S30,S32)
	S34= IMem.Out={0,rS,0,rD,hint,9}                            IMem-Read(S33,S27)
	S35= IMem.Out=>IRMux.MemData                                Premise(F54)
	S36= IRMux.MemData={0,rS,0,rD,hint,9}                       Path(S34,S35)
	S37= ICacheReg.Out=>IRMux.CacheData                         Premise(F55)
	S38= IRMux.CacheData={0,rS,0,rD,hint,9}                     Path(S31,S37)
	S39= IRMux.Out={0,rS,0,rD,hint,9}                           IRMux-Select(S36,S38)
	S40= IRMux.Out=>IR.In                                       Premise(F58)
	S41= IR.In={0,rS,0,rD,hint,9}                               Path(S39,S40)
	S42= CtrlPC=0                                               Premise(F72)
	S43= CtrlPCInc=1                                            Premise(F73)
	S44= PC[Out]=addr+4                                         PC-Inc(S21,S42,S43)
	S45= CtrlIR=1                                               Premise(F81)
	S46= [IR]={0,rS,0,rD,hint,9}                                IR-Write(S41,S45)
	S47= CtrlGPR=0                                              Premise(F82)
	S48= GPR[rS]=a                                              GPR-Hold(S29,S47)

ID	S49= PC.Out=addr+4                                          PC-Out(S44)
	S50= IR.Out25_21=rS                                         IR-Out(S46)
	S51= IR.Out15_11=rD                                         IR-Out(S46)
	S52= IR.Out15_11=>GPR.WReg                                  Premise(F102)
	S53= GPR.WReg=rD                                            Path(S51,S52)
	S54= PC.Out=>GPR.WData                                      Premise(F103)
	S55= GPR.WData=addr+4                                       Path(S49,S54)
	S56= IR.Out25_21=>GPR.RReg1                                 Premise(F104)
	S57= GPR.RReg1=rS                                           Path(S50,S56)
	S58= GPR.Rdata1=a                                           GPR-Read(S57,S48)
	S59= GPR.Rdata1=>PC.In                                      Premise(F105)
	S60= PC.In=a                                                Path(S58,S59)
	S61= CtrlPC=1                                               Premise(F111)
	S62= CtrlPCInc=0                                            Premise(F112)
	S63= PC[Out]=a                                              PC-Write(S60,S61,S62)
	S64= CtrlGPR=1                                              Premise(F121)
	S65= GPR[rD]=addr+4                                         GPR-Write(S53,S55,S64)

EX	S66= CtrlPC=0                                               Premise(F150)
	S67= CtrlPCInc=0                                            Premise(F151)
	S68= PC[Out]=a                                              PC-Hold(S63,S66,S67)
	S69= CtrlGPR=0                                              Premise(F160)
	S70= GPR[rD]=addr+4                                         GPR-Hold(S65,S69)

MEM	S71= CtrlPC=0                                               Premise(F189)
	S72= CtrlPCInc=0                                            Premise(F190)
	S73= PC[Out]=a                                              PC-Hold(S68,S71,S72)
	S74= CtrlGPR=0                                              Premise(F199)
	S75= GPR[rD]=addr+4                                         GPR-Hold(S70,S74)

DMMU1	S76= CtrlPC=0                                               Premise(F228)
	S77= CtrlPCInc=0                                            Premise(F229)
	S78= PC[Out]=a                                              PC-Hold(S73,S76,S77)
	S79= CtrlGPR=0                                              Premise(F238)
	S80= GPR[rD]=addr+4                                         GPR-Hold(S75,S79)

DMMU2	S81= CtrlPC=0                                               Premise(F267)
	S82= CtrlPCInc=0                                            Premise(F268)
	S83= PC[Out]=a                                              PC-Hold(S78,S81,S82)
	S84= CtrlGPR=0                                              Premise(F277)
	S85= GPR[rD]=addr+4                                         GPR-Hold(S80,S84)

WB	S86= CtrlPC=0                                               Premise(F306)
	S87= CtrlPCInc=0                                            Premise(F307)
	S88= PC[Out]=a                                              PC-Hold(S83,S86,S87)
	S89= CtrlGPR=0                                              Premise(F316)
	S90= GPR[rD]=addr+4                                         GPR-Hold(S85,S89)

POST	S88= PC[Out]=a                                              PC-Hold(S83,S86,S87)
	S90= GPR[rD]=addr+4                                         GPR-Hold(S85,S89)

