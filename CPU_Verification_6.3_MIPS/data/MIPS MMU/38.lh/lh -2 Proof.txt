
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={33,rS,rT,offset}                      Premise(F2)
	S3= ICache[addr]={33,rS,rT,offset}                          Premise(F3)
	S4= GPR[rS]=base                                            Premise(F4)
	S5= DMem[{pid,base+{16{offset[15]},offset}}]=a              Premise(F5)

IF	S6= CP0.ASID=pid                                            ASID-Read(S0)
	S7= PC.Out=addr                                             PC-Out(S1)
	S8= CP0.ASID=>IMMU.PID                                      Premise(F7)
	S9= IMMU.PID=pid                                            Path(S6,S8)
	S10= PC.Out=>IMMU.IEA                                       Premise(F8)
	S11= IMMU.IEA=addr                                          Path(S7,S10)
	S12= IMMU.Addr={pid,addr}                                   IMMU-Search(S9,S11)
	S13= IMMU.Addr=>IAddrReg.In                                 Premise(F9)
	S14= IAddrReg.In={pid,addr}                                 Path(S12,S13)
	S15= PC.Out=>ICache.IEA                                     Premise(F11)
	S16= ICache.IEA=addr                                        Path(S7,S15)
	S17= ICache.Out={33,rS,rT,offset}                           ICache-Search(S16,S3)
	S18= ICache.Out=>ICacheReg.In                               Premise(F12)
	S19= ICacheReg.In={33,rS,rT,offset}                         Path(S17,S18)
	S20= CtrlCP0=0                                              Premise(F56)
	S21= CP0[ASID]=pid                                          CP0-Hold(S0,S20)
	S22= CtrlPC=0                                               Premise(F60)
	S23= CtrlPCInc=0                                            Premise(F61)
	S24= PC[Out]=addr                                           PC-Hold(S1,S22,S23)
	S25= CtrlIAddrReg=1                                         Premise(F62)
	S26= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S14,S25)
	S27= CtrlICacheReg=1                                        Premise(F65)
	S28= [ICacheReg]={33,rS,rT,offset}                          ICacheReg-Write(S19,S27)
	S29= CtrlIMem=0                                             Premise(F67)
	S30= IMem[{pid,addr}]={33,rS,rT,offset}                     IMem-Hold(S2,S29)
	S31= CtrlGPR=0                                              Premise(F70)
	S32= GPR[rS]=base                                           GPR-Hold(S4,S31)
	S33= CtrlDMem=0                                             Premise(F81)
	S34= DMem[{pid,base+{16{offset[15]},offset}}]=a             DMem-Hold(S5,S33)

IMMU	S35= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S26)
	S36= ICacheReg.Out={33,rS,rT,offset}                        ICacheReg-Out(S28)
	S37= IAddrReg.Out=>IMem.RAddr                               Premise(F92)
	S38= IMem.RAddr={pid,addr}                                  Path(S35,S37)
	S39= IMem.Out={33,rS,rT,offset}                             IMem-Read(S38,S30)
	S40= IMem.Out=>IRMux.MemData                                Premise(F93)
	S41= IRMux.MemData={33,rS,rT,offset}                        Path(S39,S40)
	S42= ICacheReg.Out=>IRMux.CacheData                         Premise(F94)
	S43= IRMux.CacheData={33,rS,rT,offset}                      Path(S36,S42)
	S44= IRMux.Out={33,rS,rT,offset}                            IRMux-Select(S41,S43)
	S45= IRMux.Out=>IR.In                                       Premise(F97)
	S46= IR.In={33,rS,rT,offset}                                Path(S44,S45)
	S47= CtrlCP0=0                                              Premise(F132)
	S48= CP0[ASID]=pid                                          CP0-Hold(S21,S47)
	S49= CtrlPC=0                                               Premise(F136)
	S50= CtrlPCInc=1                                            Premise(F137)
	S51= PC[Out]=addr+4                                         PC-Inc(S24,S49,S50)
	S52= CtrlIR=1                                               Premise(F145)
	S53= [IR]={33,rS,rT,offset}                                 IR-Write(S46,S52)
	S54= CtrlGPR=0                                              Premise(F146)
	S55= GPR[rS]=base                                           GPR-Hold(S32,S54)
	S56= CtrlDMem=0                                             Premise(F157)
	S57= DMem[{pid,base+{16{offset[15]},offset}}]=a             DMem-Hold(S34,S56)

ID	S58= IR.Out25_21=rS                                         IR-Out(S53)
	S59= IR.Out15_0=offset                                      IR-Out(S53)
	S60= IR.Out25_21=>GPR.RReg1                                 Premise(F177)
	S61= GPR.RReg1=rS                                           Path(S58,S60)
	S62= GPR.Rdata1=base                                        GPR-Read(S61,S55)
	S63= IR.Out15_0=>IMMEXT.In                                  Premise(F178)
	S64= IMMEXT.In=offset                                       Path(S59,S63)
	S65= IMMEXT.Out={16{offset[15]},offset}                     IMMEXT(S64)
	S66= GPR.Rdata1=>A.In                                       Premise(F179)
	S67= A.In=base                                              Path(S62,S66)
	S68= IMMEXT.Out=>B.In                                       Premise(F180)
	S69= B.In={16{offset[15]},offset}                           Path(S65,S68)
	S70= CtrlCP0=0                                              Premise(F208)
	S71= CP0[ASID]=pid                                          CP0-Hold(S48,S70)
	S72= CtrlPC=0                                               Premise(F212)
	S73= CtrlPCInc=0                                            Premise(F213)
	S74= PC[Out]=addr+4                                         PC-Hold(S51,S72,S73)
	S75= CtrlIR=0                                               Premise(F221)
	S76= [IR]={33,rS,rT,offset}                                 IR-Hold(S53,S75)
	S77= CtrlA=1                                                Premise(F223)
	S78= [A]=base                                               A-Write(S67,S77)
	S79= CtrlB=1                                                Premise(F224)
	S80= [B]={16{offset[15]},offset}                            B-Write(S69,S79)
	S81= CtrlDMem=0                                             Premise(F233)
	S82= DMem[{pid,base+{16{offset[15]},offset}}]=a             DMem-Hold(S57,S81)

EX	S83= A.Out=base                                             A-Out(S78)
	S84= B.Out={16{offset[15]},offset}                          B-Out(S80)
	S85= A.Out=>ALU.A                                           Premise(F257)
	S86= ALU.A=base                                             Path(S83,S85)
	S87= B.Out=>ALU.B                                           Premise(F258)
	S88= ALU.B={16{offset[15]},offset}                          Path(S84,S87)
	S89= ALU.Out=base+{16{offset[15]},offset}                   ALU(S86,S88)
	S90= ALU.Out=>ALUOut.In                                     Premise(F260)
	S91= ALUOut.In=base+{16{offset[15]},offset}                 Path(S89,S90)
	S92= CtrlCP0=0                                              Premise(F285)
	S93= CP0[ASID]=pid                                          CP0-Hold(S71,S92)
	S94= CtrlPC=0                                               Premise(F289)
	S95= CtrlPCInc=0                                            Premise(F290)
	S96= PC[Out]=addr+4                                         PC-Hold(S74,S94,S95)
	S97= CtrlIR=0                                               Premise(F298)
	S98= [IR]={33,rS,rT,offset}                                 IR-Hold(S76,S97)
	S99= CtrlALUOut=1                                           Premise(F302)
	S100= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Write(S91,S99)
	S101= CtrlDMem=0                                            Premise(F310)
	S102= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S82,S101)

MEM	S103= CP0.ASID=pid                                          ASID-Read(S93)
	S104= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S100)
	S105= CP0.ASID=>DMMU.PID                                    Premise(F337)
	S106= DMMU.PID=pid                                          Path(S103,S105)
	S107= ALUOut.Out=>DMMU.IEA                                  Premise(F338)
	S108= DMMU.IEA=base+{16{offset[15]},offset}                 Path(S104,S107)
	S109= DMMU.Addr={pid,base+{16{offset[15]},offset}}          DMMU-Search(S106,S108)
	S110= DMMU.Addr=>DAddrReg.In                                Premise(F339)
	S111= DAddrReg.In={pid,base+{16{offset[15]},offset}}        Path(S109,S110)
	S112= CtrlCP0=0                                             Premise(F361)
	S113= CP0[ASID]=pid                                         CP0-Hold(S93,S112)
	S114= CtrlPC=0                                              Premise(F365)
	S115= CtrlPCInc=0                                           Premise(F366)
	S116= PC[Out]=addr+4                                        PC-Hold(S96,S114,S115)
	S117= CtrlIR=0                                              Premise(F374)
	S118= [IR]={33,rS,rT,offset}                                IR-Hold(S98,S117)
	S119= CtrlALUOut=0                                          Premise(F378)
	S120= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S100,S119)
	S121= CtrlDAddrReg=1                                        Premise(F380)
	S122= [DAddrReg]={pid,base+{16{offset[15]},offset}}         DAddrReg-Write(S111,S121)
	S123= CtrlDMem=0                                            Premise(F386)
	S124= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S102,S123)

DMMU1	S125= CP0.ASID=pid                                          ASID-Read(S113)
	S126= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S127= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S128= CP0.ASID=>DMMU.PID                                    Premise(F413)
	S129= DMMU.PID=pid                                          Path(S125,S128)
	S130= DCache.RLineEA=>DMMU.IEAR                             Premise(F425)
	S131= DMMU.IEAR=DCacheRLineEA()                             Path(S126,S130)
	S132= DMMU.AddrR={pid,DCacheRLineEA()}                      DMMU-RSearch(S129,S131)
	S133= DMMU.AddrR=>DMem.MEM8WordWAddr                        Premise(F426)
	S134= DMem.MEM8WordWAddr={pid,DCacheRLineEA()}              Path(S132,S133)
	S135= DCache.RLineData=>DMem.MEM8WordWData                  Premise(F427)
	S136= DMem.MEM8WordWData=DCacheRLineData()                  Path(S127,S135)
	S137= CtrlPC=0                                              Premise(F441)
	S138= CtrlPCInc=0                                           Premise(F442)
	S139= PC[Out]=addr+4                                        PC-Hold(S116,S137,S138)
	S140= CtrlIR=0                                              Premise(F450)
	S141= [IR]={33,rS,rT,offset}                                IR-Hold(S118,S140)
	S142= CtrlALUOut=0                                          Premise(F454)
	S143= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S120,S142)
	S144= CtrlDAddrReg=0                                        Premise(F456)
	S145= [DAddrReg]={pid,base+{16{offset[15]},offset}}         DAddrReg-Hold(S122,S144)
	S146= CtrlDMem=0                                            Premise(F462)
	S147= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S124,S146)
	S148= CtrlDMem8Word=1                                       Premise(F463)
	S149= DMem[line_{pid,DCacheRLineEA()}]=DCacheRLineData()    DMem-Write8Word(S134,S136,S148)

DMMU2	S150= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S143)
	S151= DAddrReg.Out={pid,base+{16{offset[15]},offset}}       DAddrReg-Out(S145)
	S152= ALUOut.Out=>DCache.IEA                                Premise(F493)
	S153= DCache.IEA=base+{16{offset[15]},offset}               Path(S150,S152)
	S154= DAddrReg.Out=>DMem.RAddr                              Premise(F505)
	S155= DMem.RAddr={pid,base+{16{offset[15]},offset}}         Path(S151,S154)
	S156= DMem.MEM8WordOut=>DCache.WData                        Premise(F506)
	S157= DMem.Out=>DR.In                                       Premise(F507)
	S158= CtrlPC=0                                              Premise(F517)
	S159= CtrlPCInc=0                                           Premise(F518)
	S160= PC[Out]=addr+4                                        PC-Hold(S139,S158,S159)
	S161= CtrlIR=0                                              Premise(F526)
	S162= [IR]={33,rS,rT,offset}                                IR-Hold(S141,S161)
	S163= CtrlALUOut=0                                          Premise(F530)
	S164= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S143,S163)
	S165= CtrlDCache=1                                          Premise(F534)
	S166= CtrlDR=1                                              Premise(F537)
	S167= CtrlDMem=0                                            Premise(F538)
	S168= CtrlDMem8Word=0                                       Premise(F539)
	S169= DMem[line_{pid,DCacheRLineEA()}]=DCacheRLineData()    DMem-Hold8Word(S149,S168)
	S170= DMem.Out=a                                            DMem-Read(S155,S147,S167,S168)
	S171= DR.In=a                                               Path(S170,S157)
	S172= [DR]=a                                                DR-Write(S171,S166)
	S173= DMem.MEM8WordOut=DMemGet8Word({pid,base+{16{offset[15]},offset}})DMem-Read(S155,S147,S167,S168)
	S174= DCache.WData=DMemGet8Word({pid,base+{16{offset[15]},offset}})Path(S173,S156)
	S175= DCache[line_base+{16{offset[15]},offset}]=DMemGet8Word({pid,base+{16{offset[15]},offset}})DCache-Write8Word(S153,S174,S165)

WB	S176= IR.Out20_16=rT                                        IR-Out(S162)
	S177= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]     ALUOut-Out(S164)
	S178= DR.Out=a                                              DR-Out(S172)
	S179= IR.Out20_16=>GPR.WReg                                 Premise(F584)
	S180= GPR.WReg=rT                                           Path(S176,S179)
	S181= DR.Out=>MemDataSel.In                                 Premise(F585)
	S182= MemDataSel.In=a                                       Path(S178,S181)
	S183= ALUOut.Out1_0=>MemDataSel.Addr                        Premise(F586)
	S184= MemDataSel.Addr={base+{16{offset[15]},offset}}[1:0]   Path(S177,S183)
	S185= MemDataSel.Out={16{a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8][15]},a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8]}MemDataSel(S182,S184)
	S186= MemDataSel.Out=>GPR.WData                             Premise(F588)
	S187= GPR.WData={16{a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8][15]},a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8]}Path(S185,S186)
	S188= CtrlPC=0                                              Premise(F594)
	S189= CtrlPCInc=0                                           Premise(F595)
	S190= PC[Out]=addr+4                                        PC-Hold(S160,S188,S189)
	S191= CtrlGPR=1                                             Premise(F604)
	S192= GPR[rT]={16{a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8][15]},a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8]}GPR-Write(S180,S187,S191)
	S193= CtrlDCache=0                                          Premise(F611)
	S194= DCache[line_base+{16{offset[15]},offset}]=DMemGet8Word({pid,base+{16{offset[15]},offset}})DCache-Hold(S175,S193)
	S195= CtrlDMem8Word=0                                       Premise(F616)
	S196= DMem[line_{pid,DCacheRLineEA()}]=DCacheRLineData()    DMem-Hold8Word(S169,S195)

POST	S190= PC[Out]=addr+4                                        PC-Hold(S160,S188,S189)
	S192= GPR[rT]={16{a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8][15]},a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8]}GPR-Write(S180,S187,S191)
	S194= DCache[line_base+{16{offset[15]},offset}]=DMemGet8Word({pid,base+{16{offset[15]},offset}})DCache-Hold(S175,S193)
	S196= DMem[line_{pid,DCacheRLineEA()}]=DCacheRLineData()    DMem-Hold8Word(S169,S195)

