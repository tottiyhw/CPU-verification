
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={13,rS,rT,UIMM}                        Premise(F2)
	S3= ICache[addr]={13,rS,rT,UIMM}                            Premise(F3)
	S4= GPR[rS]=a                                               Premise(F4)

IF	S5= CP0.ASID=pid                                            ASID-Read(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= CP0.ASID=>IMMU.PID                                      Premise(F5)
	S8= IMMU.PID=pid                                            Path(S5,S7)
	S9= PC.Out=>IMMU.IEA                                        Premise(F6)
	S10= IMMU.IEA=addr                                          Path(S6,S9)
	S11= IMMU.Addr={pid,addr}                                   IMMU-Search(S8,S10)
	S12= IMMU.Addr=>IAddrReg.In                                 Premise(F7)
	S13= IAddrReg.In={pid,addr}                                 Path(S11,S12)
	S14= PC.Out=>ICache.IEA                                     Premise(F9)
	S15= ICache.IEA=addr                                        Path(S6,S14)
	S16= ICache.Out={13,rS,rT,UIMM}                             ICache-Search(S15,S3)
	S17= ICache.Out=>ICacheReg.In                               Premise(F10)
	S18= ICacheReg.In={13,rS,rT,UIMM}                           Path(S16,S17)
	S19= CtrlPC=0                                               Premise(F37)
	S20= CtrlPCInc=0                                            Premise(F38)
	S21= PC[Out]=addr                                           PC-Hold(S1,S19,S20)
	S22= CtrlIAddrReg=1                                         Premise(F39)
	S23= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S13,S22)
	S24= CtrlICacheReg=1                                        Premise(F42)
	S25= [ICacheReg]={13,rS,rT,UIMM}                            ICacheReg-Write(S18,S24)
	S26= CtrlIMem=0                                             Premise(F44)
	S27= IMem[{pid,addr}]={13,rS,rT,UIMM}                       IMem-Hold(S2,S26)
	S28= CtrlGPR=0                                              Premise(F47)
	S29= GPR[rS]=a                                              GPR-Hold(S4,S28)

IMMU	S30= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S23)
	S31= ICacheReg.Out={13,rS,rT,UIMM}                          ICacheReg-Out(S25)
	S32= IAddrReg.Out=>IMem.RAddr                               Premise(F60)
	S33= IMem.RAddr={pid,addr}                                  Path(S30,S32)
	S34= IMem.Out={13,rS,rT,UIMM}                               IMem-Read(S33,S27)
	S35= IMem.Out=>IRMux.MemData                                Premise(F61)
	S36= IRMux.MemData={13,rS,rT,UIMM}                          Path(S34,S35)
	S37= ICacheReg.Out=>IRMux.CacheData                         Premise(F62)
	S38= IRMux.CacheData={13,rS,rT,UIMM}                        Path(S31,S37)
	S39= IRMux.Out={13,rS,rT,UIMM}                              IRMux-Select(S36,S38)
	S40= IRMux.Out=>IR.In                                       Premise(F65)
	S41= IR.In={13,rS,rT,UIMM}                                  Path(S39,S40)
	S42= CtrlPC=0                                               Premise(F83)
	S43= CtrlPCInc=1                                            Premise(F84)
	S44= PC[Out]=addr+4                                         PC-Inc(S21,S42,S43)
	S45= CtrlIR=1                                               Premise(F92)
	S46= [IR]={13,rS,rT,UIMM}                                   IR-Write(S41,S45)
	S47= CtrlGPR=0                                              Premise(F93)
	S48= GPR[rS]=a                                              GPR-Hold(S29,S47)

ID	S49= IR.Out25_21=rS                                         IR-Out(S46)
	S50= IR.Out15_0=UIMM                                        IR-Out(S46)
	S51= IR.Out25_21=>GPR.RReg1                                 Premise(F115)
	S52= GPR.RReg1=rS                                           Path(S49,S51)
	S53= GPR.Rdata1=a                                           GPR-Read(S52,S48)
	S54= IR.Out15_0=>LIMMEXT.In                                 Premise(F116)
	S55= LIMMEXT.In=UIMM                                        Path(S50,S54)
	S56= LIMMEXT.Out={16{0},UIMM}                               LIMMEXT(S55)
	S57= GPR.Rdata1=>A.In                                       Premise(F117)
	S58= A.In=a                                                 Path(S53,S57)
	S59= LIMMEXT.Out=>B.In                                      Premise(F118)
	S60= B.In={16{0},UIMM}                                      Path(S56,S59)
	S61= CtrlPC=0                                               Premise(F129)
	S62= CtrlPCInc=0                                            Premise(F130)
	S63= PC[Out]=addr+4                                         PC-Hold(S44,S61,S62)
	S64= CtrlIR=0                                               Premise(F138)
	S65= [IR]={13,rS,rT,UIMM}                                   IR-Hold(S46,S64)
	S66= CtrlA=1                                                Premise(F140)
	S67= [A]=a                                                  A-Write(S58,S66)
	S68= CtrlB=1                                                Premise(F141)
	S69= [B]={16{0},UIMM}                                       B-Write(S60,S68)

EX	S70= A.Out=a                                                A-Out(S67)
	S71= B.Out={16{0},UIMM}                                     B-Out(S69)
	S72= A.Out=>ALU.A                                           Premise(F165)
	S73= ALU.A=a                                                Path(S70,S72)
	S74= B.Out=>ALU.B                                           Premise(F166)
	S75= ALU.B={16{0},UIMM}                                     Path(S71,S74)
	S76= ALU.Out=a|{16{0},UIMM}                                 ALU(S73,S75)
	S77= ALU.Out=>ALUOut.In                                     Premise(F168)
	S78= ALUOut.In=a|{16{0},UIMM}                               Path(S76,S77)
	S79= CtrlPC=0                                               Premise(F176)
	S80= CtrlPCInc=0                                            Premise(F177)
	S81= PC[Out]=addr+4                                         PC-Hold(S63,S79,S80)
	S82= CtrlIR=0                                               Premise(F185)
	S83= [IR]={13,rS,rT,UIMM}                                   IR-Hold(S65,S82)
	S84= CtrlALUOut=1                                           Premise(F189)
	S85= [ALUOut]=a|{16{0},UIMM}                                ALUOut-Write(S78,S84)

MEM	S86= CtrlPC=0                                               Premise(F222)
	S87= CtrlPCInc=0                                            Premise(F223)
	S88= PC[Out]=addr+4                                         PC-Hold(S81,S86,S87)
	S89= CtrlIR=0                                               Premise(F231)
	S90= [IR]={13,rS,rT,UIMM}                                   IR-Hold(S83,S89)
	S91= CtrlALUOut=0                                           Premise(F235)
	S92= [ALUOut]=a|{16{0},UIMM}                                ALUOut-Hold(S85,S91)

DMMU1	S93= CtrlPC=0                                               Premise(F268)
	S94= CtrlPCInc=0                                            Premise(F269)
	S95= PC[Out]=addr+4                                         PC-Hold(S88,S93,S94)
	S96= CtrlIR=0                                               Premise(F277)
	S97= [IR]={13,rS,rT,UIMM}                                   IR-Hold(S90,S96)
	S98= CtrlALUOut=0                                           Premise(F281)
	S99= [ALUOut]=a|{16{0},UIMM}                                ALUOut-Hold(S92,S98)

DMMU2	S100= CtrlPC=0                                              Premise(F314)
	S101= CtrlPCInc=0                                           Premise(F315)
	S102= PC[Out]=addr+4                                        PC-Hold(S95,S100,S101)
	S103= CtrlIR=0                                              Premise(F323)
	S104= [IR]={13,rS,rT,UIMM}                                  IR-Hold(S97,S103)
	S105= CtrlALUOut=0                                          Premise(F327)
	S106= [ALUOut]=a|{16{0},UIMM}                               ALUOut-Hold(S99,S105)

WB	S107= IR.Out20_16=rT                                        IR-Out(S104)
	S108= ALUOut.Out=a|{16{0},UIMM}                             ALUOut-Out(S106)
	S109= IR.Out20_16=>GPR.WReg                                 Premise(F353)
	S110= GPR.WReg=rT                                           Path(S107,S109)
	S111= ALUOut.Out=>GPR.WData                                 Premise(F354)
	S112= GPR.WData=a|{16{0},UIMM}                              Path(S108,S111)
	S113= CtrlPC=0                                              Premise(F360)
	S114= CtrlPCInc=0                                           Premise(F361)
	S115= PC[Out]=addr+4                                        PC-Hold(S102,S113,S114)
	S116= CtrlGPR=1                                             Premise(F370)
	S117= GPR[rT]=a|{16{0},UIMM}                                GPR-Write(S110,S112,S116)

POST	S115= PC[Out]=addr+4                                        PC-Hold(S102,S113,S114)
	S117= GPR[rT]=a|{16{0},UIMM}                                GPR-Write(S110,S112,S116)

