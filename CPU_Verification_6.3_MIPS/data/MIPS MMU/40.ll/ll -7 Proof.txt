
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={48,rS,rT,offset}                      Premise(F2)
	S3= GPR[rS]=base                                            Premise(F3)
	S4= DMem[{pid,base+{16{offset[15]},offset}}]=a              Premise(F4)

IF	S5= CP0.ASID=pid                                            ASID-Read(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= CP0.ASID=>IMMU.PID                                      Premise(F6)
	S8= IMMU.PID=pid                                            Path(S5,S7)
	S9= PC.Out=>IMMU.IEA                                        Premise(F7)
	S10= IMMU.IEA=addr                                          Path(S6,S9)
	S11= IMMU.Addr={pid,addr}                                   IMMU-Search(S8,S10)
	S12= IMMU.Addr=>IAddrReg.In                                 Premise(F8)
	S13= IAddrReg.In={pid,addr}                                 Path(S11,S12)
	S14= CtrlCP0=0                                              Premise(F55)
	S15= CP0[ASID]=pid                                          CP0-Hold(S0,S14)
	S16= CtrlPC=0                                               Premise(F59)
	S17= CtrlPCInc=0                                            Premise(F60)
	S18= PC[Out]=addr                                           PC-Hold(S1,S16,S17)
	S19= CtrlIAddrReg=1                                         Premise(F61)
	S20= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S13,S19)
	S21= CtrlIMem=0                                             Premise(F66)
	S22= IMem[{pid,addr}]={48,rS,rT,offset}                     IMem-Hold(S2,S21)
	S23= CtrlGPR=0                                              Premise(F69)
	S24= GPR[rS]=base                                           GPR-Hold(S3,S23)
	S25= CtrlDMem=0                                             Premise(F80)
	S26= DMem[{pid,base+{16{offset[15]},offset}}]=a             DMem-Hold(S4,S25)

IMMU	S27= PC.Out=addr                                            PC-Out(S18)
	S28= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S20)
	S29= PC.Out=>ICache.IEA                                     Premise(F87)
	S30= ICache.IEA=addr                                        Path(S27,S29)
	S31= IAddrReg.Out=>IMem.RAddr                               Premise(F92)
	S32= IMem.RAddr={pid,addr}                                  Path(S28,S31)
	S33= IMem.Out={48,rS,rT,offset}                             IMem-Read(S32,S22)
	S34= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S32,S22)
	S35= IMem.Out=>IRMux.MemData                                Premise(F93)
	S36= IRMux.MemData={48,rS,rT,offset}                        Path(S33,S35)
	S37= IRMux.Out={48,rS,rT,offset}                            IRMux-Select(S36)
	S38= IRMux.Out=>IR.In                                       Premise(F97)
	S39= IR.In={48,rS,rT,offset}                                Path(S37,S38)
	S40= IMem.MEM8WordOut=>ICache.WData                         Premise(F98)
	S41= ICache.WData=IMemGet8Word({pid,addr})                  Path(S34,S40)
	S42= CtrlCP0=0                                              Premise(F132)
	S43= CP0[ASID]=pid                                          CP0-Hold(S15,S42)
	S44= CtrlPC=0                                               Premise(F136)
	S45= CtrlPCInc=1                                            Premise(F137)
	S46= PC[Out]=addr+4                                         PC-Inc(S18,S44,S45)
	S47= CtrlICache=1                                           Premise(F140)
	S48= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S30,S41,S47)
	S49= CtrlIR=1                                               Premise(F145)
	S50= [IR]={48,rS,rT,offset}                                 IR-Write(S39,S49)
	S51= CtrlGPR=0                                              Premise(F146)
	S52= GPR[rS]=base                                           GPR-Hold(S24,S51)
	S53= CtrlDMem=0                                             Premise(F157)
	S54= DMem[{pid,base+{16{offset[15]},offset}}]=a             DMem-Hold(S26,S53)

ID	S55= IR.Out25_21=rS                                         IR-Out(S50)
	S56= IR.Out15_0=offset                                      IR-Out(S50)
	S57= IR.Out25_21=>GPR.RReg1                                 Premise(F178)
	S58= GPR.RReg1=rS                                           Path(S55,S57)
	S59= GPR.Rdata1=base                                        GPR-Read(S58,S52)
	S60= IR.Out15_0=>IMMEXT.In                                  Premise(F179)
	S61= IMMEXT.In=offset                                       Path(S56,S60)
	S62= IMMEXT.Out={16{offset[15]},offset}                     IMMEXT(S61)
	S63= GPR.Rdata1=>A.In                                       Premise(F180)
	S64= A.In=base                                              Path(S59,S63)
	S65= IMMEXT.Out=>B.In                                       Premise(F181)
	S66= B.In={16{offset[15]},offset}                           Path(S62,S65)
	S67= CtrlCP0=0                                              Premise(F209)
	S68= CP0[ASID]=pid                                          CP0-Hold(S43,S67)
	S69= CtrlPC=0                                               Premise(F213)
	S70= CtrlPCInc=0                                            Premise(F214)
	S71= PC[Out]=addr+4                                         PC-Hold(S46,S69,S70)
	S72= CtrlICache=0                                           Premise(F217)
	S73= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S48,S72)
	S74= CtrlIR=0                                               Premise(F222)
	S75= [IR]={48,rS,rT,offset}                                 IR-Hold(S50,S74)
	S76= CtrlA=1                                                Premise(F224)
	S77= [A]=base                                               A-Write(S64,S76)
	S78= CtrlB=1                                                Premise(F225)
	S79= [B]={16{offset[15]},offset}                            B-Write(S66,S78)
	S80= CtrlDMem=0                                             Premise(F234)
	S81= DMem[{pid,base+{16{offset[15]},offset}}]=a             DMem-Hold(S54,S80)

EX	S82= A.Out=base                                             A-Out(S77)
	S83= B.Out={16{offset[15]},offset}                          B-Out(S79)
	S84= A.Out=>ALU.A                                           Premise(F259)
	S85= ALU.A=base                                             Path(S82,S84)
	S86= B.Out=>ALU.B                                           Premise(F260)
	S87= ALU.B={16{offset[15]},offset}                          Path(S83,S86)
	S88= ALU.Out=base+{16{offset[15]},offset}                   ALU(S85,S87)
	S89= ALU.Out=>ALUOut.In                                     Premise(F262)
	S90= ALUOut.In=base+{16{offset[15]},offset}                 Path(S88,S89)
	S91= CtrlCP0=0                                              Premise(F287)
	S92= CP0[ASID]=pid                                          CP0-Hold(S68,S91)
	S93= CtrlPC=0                                               Premise(F291)
	S94= CtrlPCInc=0                                            Premise(F292)
	S95= PC[Out]=addr+4                                         PC-Hold(S71,S93,S94)
	S96= CtrlICache=0                                           Premise(F295)
	S97= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S73,S96)
	S98= CtrlIR=0                                               Premise(F300)
	S99= [IR]={48,rS,rT,offset}                                 IR-Hold(S75,S98)
	S100= CtrlALUOut=1                                          Premise(F304)
	S101= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Write(S90,S100)
	S102= CtrlDMem=0                                            Premise(F312)
	S103= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S81,S102)

MEM	S104= CP0.ASID=pid                                          ASID-Read(S92)
	S105= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S101)
	S106= CP0.ASID=>DMMU.PID                                    Premise(F340)
	S107= DMMU.PID=pid                                          Path(S104,S106)
	S108= ALUOut.Out=>DMMU.IEA                                  Premise(F341)
	S109= DMMU.IEA=base+{16{offset[15]},offset}                 Path(S105,S108)
	S110= DMMU.Addr={pid,base+{16{offset[15]},offset}}          DMMU-Search(S107,S109)
	S111= DMMU.Addr=>DAddrReg.In                                Premise(F342)
	S112= DAddrReg.In={pid,base+{16{offset[15]},offset}}        Path(S110,S111)
	S113= CtrlPC=0                                              Premise(F368)
	S114= CtrlPCInc=0                                           Premise(F369)
	S115= PC[Out]=addr+4                                        PC-Hold(S95,S113,S114)
	S116= CtrlICache=0                                          Premise(F372)
	S117= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S97,S116)
	S118= CtrlIR=0                                              Premise(F377)
	S119= [IR]={48,rS,rT,offset}                                IR-Hold(S99,S118)
	S120= CtrlALUOut=0                                          Premise(F381)
	S121= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S101,S120)
	S122= CtrlDAddrReg=1                                        Premise(F383)
	S123= [DAddrReg]={pid,base+{16{offset[15]},offset}}         DAddrReg-Write(S112,S122)
	S124= CtrlDMem=0                                            Premise(F389)
	S125= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S103,S124)

DMMU1	S126= CtrlPC=0                                              Premise(F445)
	S127= CtrlPCInc=0                                           Premise(F446)
	S128= PC[Out]=addr+4                                        PC-Hold(S115,S126,S127)
	S129= CtrlICache=0                                          Premise(F449)
	S130= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S117,S129)
	S131= CtrlIR=0                                              Premise(F454)
	S132= [IR]={48,rS,rT,offset}                                IR-Hold(S119,S131)
	S133= CtrlALUOut=0                                          Premise(F458)
	S134= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S121,S133)
	S135= CtrlDAddrReg=0                                        Premise(F460)
	S136= [DAddrReg]={pid,base+{16{offset[15]},offset}}         DAddrReg-Hold(S123,S135)
	S137= CtrlDMem=0                                            Premise(F466)
	S138= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S125,S137)

DMMU2	S139= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S134)
	S140= DAddrReg.Out={pid,base+{16{offset[15]},offset}}       DAddrReg-Out(S136)
	S141= ALUOut.Out=>DCache.IEA                                Premise(F498)
	S142= DCache.IEA=base+{16{offset[15]},offset}               Path(S139,S141)
	S143= DAddrReg.Out=>DMem.RAddr                              Premise(F510)
	S144= DMem.RAddr={pid,base+{16{offset[15]},offset}}         Path(S140,S143)
	S145= DMem.MEM8WordOut=>DCache.WData                        Premise(F511)
	S146= DMem.Out=>DR.In                                       Premise(F512)
	S147= CtrlPC=0                                              Premise(F522)
	S148= CtrlPCInc=0                                           Premise(F523)
	S149= PC[Out]=addr+4                                        PC-Hold(S128,S147,S148)
	S150= CtrlICache=0                                          Premise(F526)
	S151= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S130,S150)
	S152= CtrlIR=0                                              Premise(F531)
	S153= [IR]={48,rS,rT,offset}                                IR-Hold(S132,S152)
	S154= CtrlALUOut=0                                          Premise(F535)
	S155= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S134,S154)
	S156= CtrlDCache=1                                          Premise(F539)
	S157= CtrlDR=1                                              Premise(F542)
	S158= CtrlDMem=0                                            Premise(F543)
	S159= CtrlDMem8Word=0                                       Premise(F544)
	S160= DMem.Out=a                                            DMem-Read(S144,S138,S158,S159)
	S161= DR.In=a                                               Path(S160,S146)
	S162= [DR]=a                                                DR-Write(S161,S157)
	S163= DMem.MEM8WordOut=DMemGet8Word({pid,base+{16{offset[15]},offset}})DMem-Read(S144,S138,S158,S159)
	S164= DCache.WData=DMemGet8Word({pid,base+{16{offset[15]},offset}})Path(S163,S145)
	S165= DCache[line_base+{16{offset[15]},offset}]=DMemGet8Word({pid,base+{16{offset[15]},offset}})DCache-Write8Word(S142,S164,S156)

WB	S166= IR.Out20_16=rT                                        IR-Out(S153)
	S167= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]     ALUOut-Out(S155)
	S168= DR.Out=a                                              DR-Out(S162)
	S169= IR.Out20_16=>GPR.WReg                                 Premise(F590)
	S170= GPR.WReg=rT                                           Path(S166,S169)
	S171= DR.Out=>MemDataSel.In                                 Premise(F591)
	S172= MemDataSel.In=a                                       Path(S168,S171)
	S173= ALUOut.Out1_0=>MemDataSel.Addr                        Premise(F592)
	S174= MemDataSel.Addr={base+{16{offset[15]},offset}}[1:0]   Path(S167,S173)
	S175= MemDataSel.Out=a                                      MemDataSel(S172,S174)
	S176= MemDataSel.Out=>GPR.WData                             Premise(F594)
	S177= GPR.WData=a                                           Path(S175,S176)
	S178= LLbit.In=1'b1                                         Premise(F595)
	S179= CtrlPC=0                                              Premise(F601)
	S180= CtrlPCInc=0                                           Premise(F602)
	S181= PC[Out]=addr+4                                        PC-Hold(S149,S179,S180)
	S182= CtrlICache=0                                          Premise(F605)
	S183= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S151,S182)
	S184= CtrlGPR=1                                             Premise(F611)
	S185= GPR[rT]=a                                             GPR-Write(S170,S177,S184)
	S186= CtrlDCache=0                                          Premise(F618)
	S187= DCache[line_base+{16{offset[15]},offset}]=DMemGet8Word({pid,base+{16{offset[15]},offset}})DCache-Hold(S165,S186)
	S188= CtrlLLbit=1                                           Premise(F624)
	S189= [LLbit]=1'b1                                          LLbit-Write(S178,S188)

POST	S181= PC[Out]=addr+4                                        PC-Hold(S149,S179,S180)
	S183= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S151,S182)
	S185= GPR[rT]=a                                             GPR-Write(S170,S177,S184)
	S187= DCache[line_base+{16{offset[15]},offset}]=DMemGet8Word({pid,base+{16{offset[15]},offset}})DCache-Hold(S165,S186)
	S189= [LLbit]=1'b1                                          LLbit-Write(S178,S188)

