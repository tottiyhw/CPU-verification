
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={15,0,rT,offset}                       Premise(F2)
	S3= ICache[addr]={15,0,rT,offset}                           Premise(F3)

IF	S4= CP0.ASID=pid                                            ASID-Read(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= CP0.ASID=>IMMU.PID                                      Premise(F4)
	S7= IMMU.PID=pid                                            Path(S4,S6)
	S8= PC.Out=>IMMU.IEA                                        Premise(F5)
	S9= IMMU.IEA=addr                                           Path(S5,S8)
	S10= IMMU.Addr={pid,addr}                                   IMMU-Search(S7,S9)
	S11= IMMU.Addr=>IAddrReg.In                                 Premise(F6)
	S12= IAddrReg.In={pid,addr}                                 Path(S10,S11)
	S13= PC.Out=>ICache.IEA                                     Premise(F8)
	S14= ICache.IEA=addr                                        Path(S5,S13)
	S15= ICache.Out={15,0,rT,offset}                            ICache-Search(S14,S3)
	S16= ICache.Out=>ICacheReg.In                               Premise(F9)
	S17= ICacheReg.In={15,0,rT,offset}                          Path(S15,S16)
	S18= CtrlPC=0                                               Premise(F30)
	S19= CtrlPCInc=0                                            Premise(F31)
	S20= PC[Out]=addr                                           PC-Hold(S1,S18,S19)
	S21= CtrlIAddrReg=1                                         Premise(F32)
	S22= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S12,S21)
	S23= CtrlICacheReg=1                                        Premise(F35)
	S24= [ICacheReg]={15,0,rT,offset}                           ICacheReg-Write(S17,S23)
	S25= CtrlIMem=0                                             Premise(F37)
	S26= IMem[{pid,addr}]={15,0,rT,offset}                      IMem-Hold(S2,S25)

IMMU	S27= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S22)
	S28= ICacheReg.Out={15,0,rT,offset}                         ICacheReg-Out(S24)
	S29= IAddrReg.Out=>IMem.RAddr                               Premise(F50)
	S30= IMem.RAddr={pid,addr}                                  Path(S27,S29)
	S31= IMem.Out={15,0,rT,offset}                              IMem-Read(S30,S26)
	S32= IMem.Out=>IRMux.MemData                                Premise(F51)
	S33= IRMux.MemData={15,0,rT,offset}                         Path(S31,S32)
	S34= ICacheReg.Out=>IRMux.CacheData                         Premise(F52)
	S35= IRMux.CacheData={15,0,rT,offset}                       Path(S28,S34)
	S36= IRMux.Out={15,0,rT,offset}                             IRMux-Select(S33,S35)
	S37= IRMux.Out=>IR.In                                       Premise(F55)
	S38= IR.In={15,0,rT,offset}                                 Path(S36,S37)
	S39= CtrlPC=0                                               Premise(F67)
	S40= CtrlPCInc=1                                            Premise(F68)
	S41= PC[Out]=addr+4                                         PC-Inc(S20,S39,S40)
	S42= CtrlIR=1                                               Premise(F76)
	S43= [IR]={15,0,rT,offset}                                  IR-Write(S38,S42)

ID	S44= IR.Out20_16=rT                                         IR-Out(S43)
	S45= IR.Out15_0=offset                                      IR-Out(S43)
	S46= IR.Out15_0=>IMMSEXT.In                                 Premise(F96)
	S47= IMMSEXT.In=offset                                      Path(S45,S46)
	S48= IMMSEXT.Out={offset,16{0}}                             IMMSEXT(S47)
	S49= IMMSEXT.Out=>GPR.WData                                 Premise(F97)
	S50= GPR.WData={offset,16{0}}                               Path(S48,S49)
	S51= IR.Out20_16=>GPR.WReg                                  Premise(F98)
	S52= GPR.WReg=rT                                            Path(S44,S51)
	S53= CtrlPC=0                                               Premise(F104)
	S54= CtrlPCInc=0                                            Premise(F105)
	S55= PC[Out]=addr+4                                         PC-Hold(S41,S53,S54)
	S56= CtrlGPR=1                                              Premise(F114)
	S57= GPR[rT]={offset,16{0}}                                 GPR-Write(S52,S50,S56)

EX	S58= CtrlPC=0                                               Premise(F141)
	S59= CtrlPCInc=0                                            Premise(F142)
	S60= PC[Out]=addr+4                                         PC-Hold(S55,S58,S59)
	S61= CtrlGPR=0                                              Premise(F151)
	S62= GPR[rT]={offset,16{0}}                                 GPR-Hold(S57,S61)

MEM	S63= CtrlPC=0                                               Premise(F178)
	S64= CtrlPCInc=0                                            Premise(F179)
	S65= PC[Out]=addr+4                                         PC-Hold(S60,S63,S64)
	S66= CtrlGPR=0                                              Premise(F188)
	S67= GPR[rT]={offset,16{0}}                                 GPR-Hold(S62,S66)

DMMU1	S68= CtrlPC=0                                               Premise(F215)
	S69= CtrlPCInc=0                                            Premise(F216)
	S70= PC[Out]=addr+4                                         PC-Hold(S65,S68,S69)
	S71= CtrlGPR=0                                              Premise(F225)
	S72= GPR[rT]={offset,16{0}}                                 GPR-Hold(S67,S71)

DMMU2	S73= CtrlPC=0                                               Premise(F252)
	S74= CtrlPCInc=0                                            Premise(F253)
	S75= PC[Out]=addr+4                                         PC-Hold(S70,S73,S74)
	S76= CtrlGPR=0                                              Premise(F262)
	S77= GPR[rT]={offset,16{0}}                                 GPR-Hold(S72,S76)

WB	S78= CtrlPC=0                                               Premise(F289)
	S79= CtrlPCInc=0                                            Premise(F290)
	S80= PC[Out]=addr+4                                         PC-Hold(S75,S78,S79)
	S81= CtrlGPR=0                                              Premise(F299)
	S82= GPR[rT]={offset,16{0}}                                 GPR-Hold(S77,S81)

POST	S80= PC[Out]=addr+4                                         PC-Hold(S75,S78,S79)
	S82= GPR[rT]={offset,16{0}}                                 GPR-Hold(S77,S81)

