
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={15,0,rT,offset}                       Premise(F2)

IF	S3= CP0.ASID=pid                                            ASID-Read(S0)
	S4= PC.Out=addr                                             PC-Out(S1)
	S5= CP0.ASID=>IMMU.PID                                      Premise(F3)
	S6= IMMU.PID=pid                                            Path(S3,S5)
	S7= PC.Out=>IMMU.IEA                                        Premise(F4)
	S8= IMMU.IEA=addr                                           Path(S4,S7)
	S9= IMMU.Addr={pid,addr}                                    IMMU-Search(S6,S8)
	S10= IMMU.Addr=>IAddrReg.In                                 Premise(F5)
	S11= IAddrReg.In={pid,addr}                                 Path(S9,S10)
	S12= CtrlPC=0                                               Premise(F29)
	S13= CtrlPCInc=0                                            Premise(F30)
	S14= PC[Out]=addr                                           PC-Hold(S1,S12,S13)
	S15= CtrlIAddrReg=1                                         Premise(F31)
	S16= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S11,S15)
	S17= CtrlIMem=0                                             Premise(F36)
	S18= IMem[{pid,addr}]={15,0,rT,offset}                      IMem-Hold(S2,S17)

IMMU	S19= PC.Out=addr                                            PC-Out(S14)
	S20= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S16)
	S21= PC.Out=>ICache.IEA                                     Premise(F44)
	S22= ICache.IEA=addr                                        Path(S19,S21)
	S23= IAddrReg.Out=>IMem.RAddr                               Premise(F49)
	S24= IMem.RAddr={pid,addr}                                  Path(S20,S23)
	S25= IMem.Out={15,0,rT,offset}                              IMem-Read(S24,S18)
	S26= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S24,S18)
	S27= IMem.Out=>IRMux.MemData                                Premise(F50)
	S28= IRMux.MemData={15,0,rT,offset}                         Path(S25,S27)
	S29= IRMux.Out={15,0,rT,offset}                             IRMux-Select(S28)
	S30= IRMux.Out=>IR.In                                       Premise(F54)
	S31= IR.In={15,0,rT,offset}                                 Path(S29,S30)
	S32= IMem.MEM8WordOut=>ICache.WData                         Premise(F55)
	S33= ICache.WData=IMemGet8Word({pid,addr})                  Path(S26,S32)
	S34= CtrlPC=0                                               Premise(F66)
	S35= CtrlPCInc=1                                            Premise(F67)
	S36= PC[Out]=addr+4                                         PC-Inc(S14,S34,S35)
	S37= CtrlICache=1                                           Premise(F70)
	S38= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S22,S33,S37)
	S39= CtrlIR=1                                               Premise(F75)
	S40= [IR]={15,0,rT,offset}                                  IR-Write(S31,S39)

ID	S41= IR.Out20_16=rT                                         IR-Out(S40)
	S42= IR.Out15_0=offset                                      IR-Out(S40)
	S43= IR.Out15_0=>IMMSEXT.In                                 Premise(F95)
	S44= IMMSEXT.In=offset                                      Path(S42,S43)
	S45= IMMSEXT.Out={offset,16{0}}                             IMMSEXT(S44)
	S46= IMMSEXT.Out=>GPR.WData                                 Premise(F96)
	S47= GPR.WData={offset,16{0}}                               Path(S45,S46)
	S48= IR.Out20_16=>GPR.WReg                                  Premise(F97)
	S49= GPR.WReg=rT                                            Path(S41,S48)
	S50= CtrlPC=0                                               Premise(F103)
	S51= CtrlPCInc=0                                            Premise(F104)
	S52= PC[Out]=addr+4                                         PC-Hold(S36,S50,S51)
	S53= CtrlICache=0                                           Premise(F107)
	S54= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S38,S53)
	S55= CtrlGPR=1                                              Premise(F113)
	S56= GPR[rT]={offset,16{0}}                                 GPR-Write(S49,S47,S55)

EX	S57= CtrlPC=0                                               Premise(F140)
	S58= CtrlPCInc=0                                            Premise(F141)
	S59= PC[Out]=addr+4                                         PC-Hold(S52,S57,S58)
	S60= CtrlICache=0                                           Premise(F144)
	S61= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S54,S60)
	S62= CtrlGPR=0                                              Premise(F150)
	S63= GPR[rT]={offset,16{0}}                                 GPR-Hold(S56,S62)

MEM	S64= CtrlPC=0                                               Premise(F177)
	S65= CtrlPCInc=0                                            Premise(F178)
	S66= PC[Out]=addr+4                                         PC-Hold(S59,S64,S65)
	S67= CtrlICache=0                                           Premise(F181)
	S68= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S61,S67)
	S69= CtrlGPR=0                                              Premise(F187)
	S70= GPR[rT]={offset,16{0}}                                 GPR-Hold(S63,S69)

DMMU1	S71= CtrlPC=0                                               Premise(F214)
	S72= CtrlPCInc=0                                            Premise(F215)
	S73= PC[Out]=addr+4                                         PC-Hold(S66,S71,S72)
	S74= CtrlICache=0                                           Premise(F218)
	S75= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S68,S74)
	S76= CtrlGPR=0                                              Premise(F224)
	S77= GPR[rT]={offset,16{0}}                                 GPR-Hold(S70,S76)

DMMU2	S78= CtrlPC=0                                               Premise(F251)
	S79= CtrlPCInc=0                                            Premise(F252)
	S80= PC[Out]=addr+4                                         PC-Hold(S73,S78,S79)
	S81= CtrlICache=0                                           Premise(F255)
	S82= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S75,S81)
	S83= CtrlGPR=0                                              Premise(F261)
	S84= GPR[rT]={offset,16{0}}                                 GPR-Hold(S77,S83)

WB	S85= CtrlPC=0                                               Premise(F288)
	S86= CtrlPCInc=0                                            Premise(F289)
	S87= PC[Out]=addr+4                                         PC-Hold(S80,S85,S86)
	S88= CtrlICache=0                                           Premise(F292)
	S89= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S82,S88)
	S90= CtrlGPR=0                                              Premise(F298)
	S91= GPR[rT]={offset,16{0}}                                 GPR-Hold(S84,S90)

POST	S87= PC[Out]=addr+4                                         PC-Hold(S80,S85,S86)
	S89= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S82,S88)
	S91= GPR[rT]={offset,16{0}}                                 GPR-Hold(S84,S90)

