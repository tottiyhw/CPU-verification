
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,0,0,rD,0,16}                        Premise(F2)
	S3= [Lo]=lo                                                 Premise(F3)

IF	S4= CP0.ASID=pid                                            ASID-Read(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= CP0.ASID=>IMMU.PID                                      Premise(F4)
	S7= IMMU.PID=pid                                            Path(S4,S6)
	S8= PC.Out=>IMMU.IEA                                        Premise(F5)
	S9= IMMU.IEA=addr                                           Path(S5,S8)
	S10= IMMU.Addr={pid,addr}                                   IMMU-Search(S7,S9)
	S11= IMMU.Addr=>IAddrReg.In                                 Premise(F6)
	S12= IAddrReg.In={pid,addr}                                 Path(S10,S11)
	S13= CtrlPC=0                                               Premise(F30)
	S14= CtrlPCInc=0                                            Premise(F31)
	S15= PC[Out]=addr                                           PC-Hold(S1,S13,S14)
	S16= CtrlIAddrReg=1                                         Premise(F32)
	S17= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S12,S16)
	S18= CtrlIMem=0                                             Premise(F37)
	S19= IMem[{pid,addr}]={0,0,0,rD,0,16}                       IMem-Hold(S2,S18)
	S20= CtrlLo=0                                               Premise(F41)
	S21= [Lo]=lo                                                Lo-Hold(S3,S20)

IMMU	S22= PC.Out=addr                                            PC-Out(S15)
	S23= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S17)
	S24= PC.Out=>ICache.IEA                                     Premise(F46)
	S25= ICache.IEA=addr                                        Path(S22,S24)
	S26= IAddrReg.Out=>IMem.RAddr                               Premise(F51)
	S27= IMem.RAddr={pid,addr}                                  Path(S23,S26)
	S28= IMem.Out={0,0,0,rD,0,16}                               IMem-Read(S27,S19)
	S29= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S27,S19)
	S30= IMem.Out=>IRMux.MemData                                Premise(F52)
	S31= IRMux.MemData={0,0,0,rD,0,16}                          Path(S28,S30)
	S32= IRMux.Out={0,0,0,rD,0,16}                              IRMux-Select(S31)
	S33= IRMux.Out=>IR.In                                       Premise(F56)
	S34= IR.In={0,0,0,rD,0,16}                                  Path(S32,S33)
	S35= IMem.MEM8WordOut=>ICache.WData                         Premise(F57)
	S36= ICache.WData=IMemGet8Word({pid,addr})                  Path(S29,S35)
	S37= CtrlPC=0                                               Premise(F68)
	S38= CtrlPCInc=1                                            Premise(F69)
	S39= PC[Out]=addr+4                                         PC-Inc(S15,S37,S38)
	S40= CtrlICache=1                                           Premise(F72)
	S41= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S25,S36,S40)
	S42= CtrlIR=1                                               Premise(F77)
	S43= [IR]={0,0,0,rD,0,16}                                   IR-Write(S34,S42)
	S44= CtrlLo=0                                               Premise(F79)
	S45= [Lo]=lo                                                Lo-Hold(S21,S44)

ID	S46= IR.Out15_11=rD                                         IR-Out(S43)
	S47= Lo.Out=lo                                              Lo-Out(S45)
	S48= IR.Out15_11=>GPR.WReg                                  Premise(F98)
	S49= GPR.WReg=rD                                            Path(S46,S48)
	S50= Lo.Out=>GPR.WData                                      Premise(F100)
	S51= GPR.WData=lo                                           Path(S47,S50)
	S52= CtrlPC=0                                               Premise(F106)
	S53= CtrlPCInc=0                                            Premise(F107)
	S54= PC[Out]=addr+4                                         PC-Hold(S39,S52,S53)
	S55= CtrlICache=0                                           Premise(F110)
	S56= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S41,S55)
	S57= CtrlGPR=1                                              Premise(F116)
	S58= GPR[rD]=lo                                             GPR-Write(S49,S51,S57)

EX	S59= CtrlPC=0                                               Premise(F144)
	S60= CtrlPCInc=0                                            Premise(F145)
	S61= PC[Out]=addr+4                                         PC-Hold(S54,S59,S60)
	S62= CtrlICache=0                                           Premise(F148)
	S63= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S56,S62)
	S64= CtrlGPR=0                                              Premise(F154)
	S65= GPR[rD]=lo                                             GPR-Hold(S58,S64)

MEM	S66= CtrlPC=0                                               Premise(F182)
	S67= CtrlPCInc=0                                            Premise(F183)
	S68= PC[Out]=addr+4                                         PC-Hold(S61,S66,S67)
	S69= CtrlICache=0                                           Premise(F186)
	S70= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S63,S69)
	S71= CtrlGPR=0                                              Premise(F192)
	S72= GPR[rD]=lo                                             GPR-Hold(S65,S71)

DMMU1	S73= CtrlPC=0                                               Premise(F220)
	S74= CtrlPCInc=0                                            Premise(F221)
	S75= PC[Out]=addr+4                                         PC-Hold(S68,S73,S74)
	S76= CtrlICache=0                                           Premise(F224)
	S77= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S70,S76)
	S78= CtrlGPR=0                                              Premise(F230)
	S79= GPR[rD]=lo                                             GPR-Hold(S72,S78)

DMMU2	S80= CtrlPC=0                                               Premise(F258)
	S81= CtrlPCInc=0                                            Premise(F259)
	S82= PC[Out]=addr+4                                         PC-Hold(S75,S80,S81)
	S83= CtrlICache=0                                           Premise(F262)
	S84= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S77,S83)
	S85= CtrlGPR=0                                              Premise(F268)
	S86= GPR[rD]=lo                                             GPR-Hold(S79,S85)

WB	S87= CtrlPC=0                                               Premise(F296)
	S88= CtrlPCInc=0                                            Premise(F297)
	S89= PC[Out]=addr+4                                         PC-Hold(S82,S87,S88)
	S90= CtrlICache=0                                           Premise(F300)
	S91= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S84,S90)
	S92= CtrlGPR=0                                              Premise(F306)
	S93= GPR[rD]=lo                                             GPR-Hold(S86,S92)

POST	S89= PC[Out]=addr+4                                         PC-Hold(S82,S87,S88)
	S91= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S84,S90)
	S93= GPR[rD]=lo                                             GPR-Hold(S86,S92)

