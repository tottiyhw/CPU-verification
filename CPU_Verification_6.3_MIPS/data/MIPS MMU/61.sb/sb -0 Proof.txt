
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={40,rS,rT,offset}                      Premise(F2)
	S3= ICache[addr]={40,rS,rT,offset}                          Premise(F3)
	S4= GPR[rS]=base                                            Premise(F4)
	S5= GPR[rT]=a                                               Premise(F5)

IF	S6= CP0.ASID=pid                                            ASID-Read(S0)
	S7= PC.Out=addr                                             PC-Out(S1)
	S8= CP0.ASID=>IMMU.PID                                      Premise(F6)
	S9= IMMU.PID=pid                                            Path(S6,S8)
	S10= PC.Out=>IMMU.IEA                                       Premise(F7)
	S11= IMMU.IEA=addr                                          Path(S7,S10)
	S12= IMMU.Addr={pid,addr}                                   IMMU-Search(S9,S11)
	S13= IMMU.Addr=>IAddrReg.In                                 Premise(F8)
	S14= IAddrReg.In={pid,addr}                                 Path(S12,S13)
	S15= PC.Out=>ICache.IEA                                     Premise(F10)
	S16= ICache.IEA=addr                                        Path(S7,S15)
	S17= ICache.Out={40,rS,rT,offset}                           ICache-Search(S16,S3)
	S18= ICache.Out=>ICacheReg.In                               Premise(F11)
	S19= ICacheReg.In={40,rS,rT,offset}                         Path(S17,S18)
	S20= CtrlPC=0                                               Premise(F52)
	S21= CtrlPCInc=0                                            Premise(F53)
	S22= PC[Out]=addr                                           PC-Hold(S1,S20,S21)
	S23= CtrlIAddrReg=1                                         Premise(F54)
	S24= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S14,S23)
	S25= CtrlICacheReg=1                                        Premise(F57)
	S26= [ICacheReg]={40,rS,rT,offset}                          ICacheReg-Write(S19,S25)
	S27= CtrlIMem=0                                             Premise(F59)
	S28= IMem[{pid,addr}]={40,rS,rT,offset}                     IMem-Hold(S2,S27)
	S29= CtrlGPR=0                                              Premise(F62)
	S30= GPR[rS]=base                                           GPR-Hold(S4,S29)
	S31= GPR[rT]=a                                              GPR-Hold(S5,S29)

IMMU	S32= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S24)
	S33= ICacheReg.Out={40,rS,rT,offset}                        ICacheReg-Out(S26)
	S34= IAddrReg.Out=>IMem.RAddr                               Premise(F83)
	S35= IMem.RAddr={pid,addr}                                  Path(S32,S34)
	S36= IMem.Out={40,rS,rT,offset}                             IMem-Read(S35,S28)
	S37= IMem.Out=>IRMux.MemData                                Premise(F84)
	S38= IRMux.MemData={40,rS,rT,offset}                        Path(S36,S37)
	S39= ICacheReg.Out=>IRMux.CacheData                         Premise(F85)
	S40= IRMux.CacheData={40,rS,rT,offset}                      Path(S33,S39)
	S41= IRMux.Out={40,rS,rT,offset}                            IRMux-Select(S38,S40)
	S42= IRMux.Out=>IR.In                                       Premise(F88)
	S43= IR.In={40,rS,rT,offset}                                Path(S41,S42)
	S44= CtrlPC=0                                               Premise(F120)
	S45= CtrlPCInc=1                                            Premise(F121)
	S46= PC[Out]=addr+4                                         PC-Inc(S22,S44,S45)
	S47= CtrlIR=1                                               Premise(F129)
	S48= [IR]={40,rS,rT,offset}                                 IR-Write(S43,S47)
	S49= CtrlGPR=0                                              Premise(F130)
	S50= GPR[rS]=base                                           GPR-Hold(S30,S49)
	S51= GPR[rT]=a                                              GPR-Hold(S31,S49)

ID	S52= IR.Out25_21=rS                                         IR-Out(S48)
	S53= IR.Out15_0=offset                                      IR-Out(S48)
	S54= IR.Out25_21=>GPR.RReg1                                 Premise(F160)
	S55= GPR.RReg1=rS                                           Path(S52,S54)
	S56= GPR.Rdata1=base                                        GPR-Read(S55,S50)
	S57= IR.Out15_0=>IMMEXT.In                                  Premise(F161)
	S58= IMMEXT.In=offset                                       Path(S53,S57)
	S59= IMMEXT.Out={16{offset[15]},offset}                     IMMEXT(S58)
	S60= GPR.Rdata1=>A.In                                       Premise(F162)
	S61= A.In=base                                              Path(S56,S60)
	S62= IMMEXT.Out=>B.In                                       Premise(F163)
	S63= B.In={16{offset[15]},offset}                           Path(S59,S62)
	S64= CtrlPC=0                                               Premise(F188)
	S65= CtrlPCInc=0                                            Premise(F189)
	S66= PC[Out]=addr+4                                         PC-Hold(S46,S64,S65)
	S67= CtrlIR=0                                               Premise(F197)
	S68= [IR]={40,rS,rT,offset}                                 IR-Hold(S48,S67)
	S69= CtrlGPR=0                                              Premise(F198)
	S70= GPR[rT]=a                                              GPR-Hold(S51,S69)
	S71= CtrlA=1                                                Premise(F199)
	S72= [A]=base                                               A-Write(S61,S71)
	S73= CtrlB=1                                                Premise(F200)
	S74= [B]={16{offset[15]},offset}                            B-Write(S63,S73)

EX	S75= IR.Out20_16=rT                                         IR-Out(S68)
	S76= A.Out=base                                             A-Out(S72)
	S77= B.Out={16{offset[15]},offset}                          B-Out(S74)
	S78= A.Out=>ALU.A                                           Premise(F232)
	S79= ALU.A=base                                             Path(S76,S78)
	S80= B.Out=>ALU.B                                           Premise(F233)
	S81= ALU.B={16{offset[15]},offset}                          Path(S77,S80)
	S82= ALU.Out=base+{16{offset[15]},offset}                   ALU(S79,S81)
	S83= ALU.Out1_0={base+{16{offset[15]},offset}}[1:0]         ALU(S79,S81)
	S84= ALU.Out=>ALUOut.In                                     Premise(F235)
	S85= ALUOut.In=base+{16{offset[15]},offset}                 Path(S82,S84)
	S86= IR.Out20_16=>GPR.RReg2                                 Premise(F236)
	S87= GPR.RReg2=rT                                           Path(S75,S86)
	S88= GPR.Rdata2=a                                           GPR-Read(S87,S70)
	S89= GPR.Rdata2=>MemDataSel.In                              Premise(F237)
	S90= MemDataSel.In=a                                        Path(S88,S89)
	S91= ALU.Out1_0=>MemDataSel.Addr                            Premise(F238)
	S92= MemDataSel.Addr={base+{16{offset[15]},offset}}[1:0]    Path(S83,S91)
	S93= MemDataSel.Out={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}MemDataSel(S90,S92)
	S94= MemDataSel.Out=>DR.In                                  Premise(F240)
	S95= DR.In={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}Path(S93,S94)
	S96= CtrlPC=0                                               Premise(F258)
	S97= CtrlPCInc=0                                            Premise(F259)
	S98= PC[Out]=addr+4                                         PC-Hold(S66,S96,S97)
	S99= CtrlALUOut=1                                           Premise(F271)
	S100= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Write(S85,S99)
	S101= CtrlDR=1                                              Premise(F272)
	S102= [DR]={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DR-Write(S95,S101)

MEM	S103= CtrlPC=0                                              Premise(F326)
	S104= CtrlPCInc=0                                           Premise(F327)
	S105= PC[Out]=addr+4                                        PC-Hold(S98,S103,S104)
	S106= CtrlALUOut=0                                          Premise(F339)
	S107= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S100,S106)
	S108= CtrlDR=0                                              Premise(F340)
	S109= [DR]={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DR-Hold(S102,S108)

DMMU1	S110= CtrlPC=0                                              Premise(F394)
	S111= CtrlPCInc=0                                           Premise(F395)
	S112= PC[Out]=addr+4                                        PC-Hold(S105,S110,S111)
	S113= CtrlALUOut=0                                          Premise(F407)
	S114= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S107,S113)
	S115= CtrlDR=0                                              Premise(F408)
	S116= [DR]={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DR-Hold(S109,S115)

DMMU2	S117= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S114)
	S118= DR.Out={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DR-Out(S116)
	S119= ALUOut.Out=>DCache.IEA                                Premise(F449)
	S120= DCache.IEA=base+{16{offset[15]},offset}               Path(S117,S119)
	S121= DR.Out=>DCache.In                                     Premise(F456)
	S122= DCache.In={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}Path(S118,S121)
	S123= CtrlPC=0                                              Premise(F462)
	S124= CtrlPCInc=0                                           Premise(F463)
	S125= PC[Out]=addr+4                                        PC-Hold(S112,S123,S124)
	S126= CtrlDCache=1                                          Premise(F480)
	S127= DCache[base+{16{offset[15]},offset}]={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DCache-Write(S120,S122,S126)

WB	S128= CtrlPC=0                                              Premise(F530)
	S129= CtrlPCInc=0                                           Premise(F531)
	S130= PC[Out]=addr+4                                        PC-Hold(S125,S128,S129)
	S131= CtrlDCache=0                                          Premise(F548)
	S132= DCache[base+{16{offset[15]},offset}]={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DCache-Hold(S127,S131)

POST	S130= PC[Out]=addr+4                                        PC-Hold(S125,S128,S129)
	S132= DCache[base+{16{offset[15]},offset}]={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DCache-Hold(S127,S131)

