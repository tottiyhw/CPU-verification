
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,0,rT,rD,sa,3}                       Premise(F2)
	S3= ICache[addr]={0,0,rT,rD,sa,3}                           Premise(F3)
	S4= GPR[rT]=a                                               Premise(F4)

IF	S5= CP0.ASID=pid                                            ASID-Read(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= CP0.ASID=>IMMU.PID                                      Premise(F5)
	S8= IMMU.PID=pid                                            Path(S5,S7)
	S9= PC.Out=>IMMU.IEA                                        Premise(F6)
	S10= IMMU.IEA=addr                                          Path(S6,S9)
	S11= IMMU.Addr={pid,addr}                                   IMMU-Search(S8,S10)
	S12= IMMU.Addr=>IAddrReg.In                                 Premise(F7)
	S13= IAddrReg.In={pid,addr}                                 Path(S11,S12)
	S14= PC.Out=>ICache.IEA                                     Premise(F9)
	S15= ICache.IEA=addr                                        Path(S6,S14)
	S16= ICache.Out={0,0,rT,rD,sa,3}                            ICache-Search(S15,S3)
	S17= ICache.Out=>ICacheReg.In                               Premise(F10)
	S18= ICacheReg.In={0,0,rT,rD,sa,3}                          Path(S16,S17)
	S19= CtrlPC=0                                               Premise(F36)
	S20= CtrlPCInc=0                                            Premise(F37)
	S21= PC[Out]=addr                                           PC-Hold(S1,S19,S20)
	S22= CtrlIAddrReg=1                                         Premise(F38)
	S23= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S13,S22)
	S24= CtrlICacheReg=1                                        Premise(F41)
	S25= [ICacheReg]={0,0,rT,rD,sa,3}                           ICacheReg-Write(S18,S24)
	S26= CtrlIMem=0                                             Premise(F43)
	S27= IMem[{pid,addr}]={0,0,rT,rD,sa,3}                      IMem-Hold(S2,S26)
	S28= CtrlGPR=0                                              Premise(F46)
	S29= GPR[rT]=a                                              GPR-Hold(S4,S28)

IMMU	S30= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S23)
	S31= ICacheReg.Out={0,0,rT,rD,sa,3}                         ICacheReg-Out(S25)
	S32= IAddrReg.Out=>IMem.RAddr                               Premise(F58)
	S33= IMem.RAddr={pid,addr}                                  Path(S30,S32)
	S34= IMem.Out={0,0,rT,rD,sa,3}                              IMem-Read(S33,S27)
	S35= IMem.Out=>IRMux.MemData                                Premise(F59)
	S36= IRMux.MemData={0,0,rT,rD,sa,3}                         Path(S34,S35)
	S37= ICacheReg.Out=>IRMux.CacheData                         Premise(F60)
	S38= IRMux.CacheData={0,0,rT,rD,sa,3}                       Path(S31,S37)
	S39= IRMux.Out={0,0,rT,rD,sa,3}                             IRMux-Select(S36,S38)
	S40= IRMux.Out=>IR.In                                       Premise(F63)
	S41= IR.In={0,0,rT,rD,sa,3}                                 Path(S39,S40)
	S42= CtrlPC=0                                               Premise(F80)
	S43= CtrlPCInc=1                                            Premise(F81)
	S44= PC[Out]=addr+4                                         PC-Inc(S21,S42,S43)
	S45= CtrlIR=1                                               Premise(F89)
	S46= [IR]={0,0,rT,rD,sa,3}                                  IR-Write(S41,S45)
	S47= CtrlGPR=0                                              Premise(F90)
	S48= GPR[rT]=a                                              GPR-Hold(S29,S47)

ID	S49= IR.Out20_16=rT                                         IR-Out(S46)
	S50= IR.Out20_16=>GPR.RReg2                                 Premise(F111)
	S51= GPR.RReg2=rT                                           Path(S49,S50)
	S52= GPR.Rdata2=a                                           GPR-Read(S51,S48)
	S53= GPR.Rdata2=>B.In                                       Premise(F113)
	S54= B.In=a                                                 Path(S52,S53)
	S55= CtrlPC=0                                               Premise(F124)
	S56= CtrlPCInc=0                                            Premise(F125)
	S57= PC[Out]=addr+4                                         PC-Hold(S44,S55,S56)
	S58= CtrlIR=0                                               Premise(F133)
	S59= [IR]={0,0,rT,rD,sa,3}                                  IR-Hold(S46,S58)
	S60= CtrlB=1                                                Premise(F135)
	S61= [B]=a                                                  B-Write(S54,S60)

EX	S62= IR.Out10_6=sa                                          IR-Out(S59)
	S63= B.Out=a                                                B-Out(S61)
	S64= IR.Out10_6=>SU.Shamt                                   Premise(F158)
	S65= SU.Shamt=sa                                            Path(S62,S64)
	S66= B.Out=>SU.Data                                         Premise(F159)
	S67= SU.Data=a                                              Path(S63,S66)
	S68= SU.Out=a>>>sa                                          SU(S67,S65)
	S69= SU.Out=>ALUOut.In                                      Premise(F161)
	S70= ALUOut.In=a>>>sa                                       Path(S68,S69)
	S71= CtrlPC=0                                               Premise(F169)
	S72= CtrlPCInc=0                                            Premise(F170)
	S73= PC[Out]=addr+4                                         PC-Hold(S57,S71,S72)
	S74= CtrlIR=0                                               Premise(F178)
	S75= [IR]={0,0,rT,rD,sa,3}                                  IR-Hold(S59,S74)
	S76= CtrlALUOut=1                                           Premise(F181)
	S77= [ALUOut]=a>>>sa                                        ALUOut-Write(S70,S76)

MEM	S78= CtrlPC=0                                               Premise(F213)
	S79= CtrlPCInc=0                                            Premise(F214)
	S80= PC[Out]=addr+4                                         PC-Hold(S73,S78,S79)
	S81= CtrlIR=0                                               Premise(F222)
	S82= [IR]={0,0,rT,rD,sa,3}                                  IR-Hold(S75,S81)
	S83= CtrlALUOut=0                                           Premise(F225)
	S84= [ALUOut]=a>>>sa                                        ALUOut-Hold(S77,S83)

DMMU1	S85= CtrlPC=0                                               Premise(F257)
	S86= CtrlPCInc=0                                            Premise(F258)
	S87= PC[Out]=addr+4                                         PC-Hold(S80,S85,S86)
	S88= CtrlIR=0                                               Premise(F266)
	S89= [IR]={0,0,rT,rD,sa,3}                                  IR-Hold(S82,S88)
	S90= CtrlALUOut=0                                           Premise(F269)
	S91= [ALUOut]=a>>>sa                                        ALUOut-Hold(S84,S90)

DMMU2	S92= CtrlPC=0                                               Premise(F301)
	S93= CtrlPCInc=0                                            Premise(F302)
	S94= PC[Out]=addr+4                                         PC-Hold(S87,S92,S93)
	S95= CtrlIR=0                                               Premise(F310)
	S96= [IR]={0,0,rT,rD,sa,3}                                  IR-Hold(S89,S95)
	S97= CtrlALUOut=0                                           Premise(F313)
	S98= [ALUOut]=a>>>sa                                        ALUOut-Hold(S91,S97)

WB	S99= IR.Out15_11=rD                                         IR-Out(S96)
	S100= ALUOut.Out=a>>>sa                                     ALUOut-Out(S98)
	S101= IR.Out15_11=>GPR.WReg                                 Premise(F338)
	S102= GPR.WReg=rD                                           Path(S99,S101)
	S103= ALUOut.Out=>GPR.WData                                 Premise(F339)
	S104= GPR.WData=a>>>sa                                      Path(S100,S103)
	S105= CtrlPC=0                                              Premise(F345)
	S106= CtrlPCInc=0                                           Premise(F346)
	S107= PC[Out]=addr+4                                        PC-Hold(S94,S105,S106)
	S108= CtrlGPR=1                                             Premise(F355)
	S109= GPR[rD]=a>>>sa                                        GPR-Write(S102,S104,S108)

POST	S107= PC[Out]=addr+4                                        PC-Hold(S94,S105,S106)
	S109= GPR[rD]=a>>>sa                                        GPR-Write(S102,S104,S108)

