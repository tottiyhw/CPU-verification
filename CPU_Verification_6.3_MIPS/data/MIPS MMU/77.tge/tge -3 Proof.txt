
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rs,rt,code,48}                      Premise(F2)
	S3= GPR[rs]=a                                               Premise(F3)
	S4= GPR[rt]=b                                               Premise(F4)

IF	S5= CP0.ASID=pid                                            ASID-Read(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= CP0.ASID=>IMMU.PID                                      Premise(F5)
	S8= IMMU.PID=pid                                            Path(S5,S7)
	S9= PC.Out=>IMMU.IEA                                        Premise(F6)
	S10= IMMU.IEA=addr                                          Path(S6,S9)
	S11= IMMU.Addr={pid,addr}                                   IMMU-Search(S8,S10)
	S12= IMMU.Addr=>IAddrReg.In                                 Premise(F7)
	S13= IAddrReg.In={pid,addr}                                 Path(S11,S12)
	S14= CtrlCP0=0                                              Premise(F36)
	S15= CP0[ASID]=pid                                          CP0-Hold(S0,S14)
	S16= CtrlPC=0                                               Premise(F40)
	S17= CtrlPCInc=0                                            Premise(F41)
	S18= PC[Out]=addr                                           PC-Hold(S1,S16,S17)
	S19= CtrlIAddrReg=1                                         Premise(F42)
	S20= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S13,S19)
	S21= CtrlIMem=0                                             Premise(F47)
	S22= IMem[{pid,addr}]={0,rs,rt,code,48}                     IMem-Hold(S2,S21)
	S23= CtrlGPR=0                                              Premise(F50)
	S24= GPR[rs]=a                                              GPR-Hold(S3,S23)
	S25= GPR[rt]=b                                              GPR-Hold(S4,S23)

IMMU	S26= PC.Out=addr                                            PC-Out(S18)
	S27= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S20)
	S28= PC.Out=>ICache.IEA                                     Premise(F59)
	S29= ICache.IEA=addr                                        Path(S26,S28)
	S30= IAddrReg.Out=>IMem.RAddr                               Premise(F64)
	S31= IMem.RAddr={pid,addr}                                  Path(S27,S30)
	S32= IMem.Out={0,rs,rt,code,48}                             IMem-Read(S31,S22)
	S33= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S31,S22)
	S34= IMem.Out=>IRMux.MemData                                Premise(F65)
	S35= IRMux.MemData={0,rs,rt,code,48}                        Path(S32,S34)
	S36= IRMux.Out={0,rs,rt,code,48}                            IRMux-Select(S35)
	S37= IRMux.Out=>IR.In                                       Premise(F69)
	S38= IR.In={0,rs,rt,code,48}                                Path(S36,S37)
	S39= IMem.MEM8WordOut=>ICache.WData                         Premise(F70)
	S40= ICache.WData=IMemGet8Word({pid,addr})                  Path(S33,S39)
	S41= CtrlCP0=0                                              Premise(F86)
	S42= CP0[ASID]=pid                                          CP0-Hold(S15,S41)
	S43= CtrlPC=0                                               Premise(F90)
	S44= CtrlPCInc=1                                            Premise(F91)
	S45= PC[Out]=addr+4                                         PC-Inc(S18,S43,S44)
	S46= CtrlICache=1                                           Premise(F94)
	S47= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S29,S40,S46)
	S48= CtrlIR=1                                               Premise(F99)
	S49= [IR]={0,rs,rt,code,48}                                 IR-Write(S38,S48)
	S50= CtrlGPR=0                                              Premise(F100)
	S51= GPR[rs]=a                                              GPR-Hold(S24,S50)
	S52= GPR[rt]=b                                              GPR-Hold(S25,S50)

ID	S53= IR.Out25_21=rs                                         IR-Out(S49)
	S54= IR.Out20_16=rt                                         IR-Out(S49)
	S55= IR.Out25_21=>GPR.RReg1                                 Premise(F123)
	S56= GPR.RReg1=rs                                           Path(S53,S55)
	S57= GPR.Rdata1=a                                           GPR-Read(S56,S51)
	S58= IR.Out20_16=>GPR.RReg2                                 Premise(F124)
	S59= GPR.RReg2=rt                                           Path(S54,S58)
	S60= GPR.Rdata2=b                                           GPR-Read(S59,S52)
	S61= GPR.Rdata1=>A.In                                       Premise(F126)
	S62= A.In=a                                                 Path(S57,S61)
	S63= GPR.Rdata2=>B.In                                       Premise(F127)
	S64= B.In=b                                                 Path(S60,S63)
	S65= CtrlCP0=0                                              Premise(F136)
	S66= CP0[ASID]=pid                                          CP0-Hold(S42,S65)
	S67= CtrlPC=0                                               Premise(F140)
	S68= CtrlPCInc=0                                            Premise(F141)
	S69= PC[Out]=addr+4                                         PC-Hold(S45,S67,S68)
	S70= CtrlICache=0                                           Premise(F144)
	S71= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S47,S70)
	S72= CtrlA=1                                                Premise(F151)
	S73= [A]=a                                                  A-Write(S62,S72)
	S74= CtrlB=1                                                Premise(F152)
	S75= [B]=b                                                  B-Write(S64,S74)

EX	S76= A.Out=a                                                A-Out(S73)
	S77= B.Out=b                                                B-Out(S75)
	S78= A.Out=>CMPU.A                                          Premise(F178)
	S79= CMPU.A=a                                               Path(S76,S78)
	S80= B.Out=>CMPU.B                                          Premise(F179)
	S81= CMPU.B=b                                               Path(S77,S80)
	S82= CMPU.lt=CompareS(a,b)                                  CMPU-CMPS(S79,S81)
	S83= CMPU.lt=>ConditionReg.In                               Premise(F181)
	S84= ConditionReg.In=CompareS(a,b)                          Path(S82,S83)
	S85= CtrlCP0=0                                              Premise(F187)
	S86= CP0[ASID]=pid                                          CP0-Hold(S66,S85)
	S87= CtrlPC=0                                               Premise(F191)
	S88= CtrlPCInc=0                                            Premise(F192)
	S89= PC[Out]=addr+4                                         PC-Hold(S69,S87,S88)
	S90= CtrlICache=0                                           Premise(F195)
	S91= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S71,S90)
	S92= CtrlConditionReg=1                                     Premise(F204)
	S93= [ConditionReg]=CompareS(a,b)                           ConditionReg-Write(S84,S92)

MEM	S94= CP0.ASID=pid                                           ASID-Read(S86)
	S95= PC.Out=addr+4                                          PC-Out(S89)
	S96= PC.Out=>CP0.EPCIn                                      Premise(F232)
	S97= CP0.EPCIn=addr+4                                       Path(S95,S96)
	S98= CP0.ExCodeIn=5'h0d                                     Premise(F233)
	S99= CP0.ASID=>PIDReg.In                                    Premise(F235)
	S100= PIDReg.In=pid                                         Path(S94,S99)
	S101= CtrlEPCIn=1                                           Premise(F239)
	S102= CP0[EPC]=addr+4                                       CP0-Write-EPC(S97,S101)
	S103= CtrlExCodeIn=1                                        Premise(F240)
	S104= CP0[ExCode]=5'h0d                                     CP0-Write-ExCode(S98,S103)
	S105= CtrlICache=0                                          Premise(F246)
	S106= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S91,S105)
	S107= CtrlConditionReg=0                                    Premise(F255)
	S108= [ConditionReg]=CompareS(a,b)                          ConditionReg-Hold(S93,S107)
	S109= CtrlPIDReg=1                                          Premise(F256)
	S110= [PIDReg]=pid                                          PIDReg-Write(S100,S109)

DMMU1	S111= CtrlCP0=0                                             Premise(F288)
	S112= CP0[EPC]=addr+4                                       CP0-Hold(S102,S111)
	S113= CP0[ExCode]=5'h0d                                     CP0-Hold(S104,S111)
	S114= CtrlICache=0                                          Premise(F296)
	S115= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S106,S114)
	S116= CtrlConditionReg=0                                    Premise(F305)
	S117= [ConditionReg]=CompareS(a,b)                          ConditionReg-Hold(S108,S116)
	S118= CtrlPIDReg=0                                          Premise(F306)
	S119= [PIDReg]=pid                                          PIDReg-Hold(S110,S118)

DMMU2	S120= CtrlCP0=0                                             Premise(F338)
	S121= CP0[EPC]=addr+4                                       CP0-Hold(S112,S120)
	S122= CP0[ExCode]=5'h0d                                     CP0-Hold(S113,S120)
	S123= CtrlICache=0                                          Premise(F346)
	S124= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S115,S123)
	S125= CtrlConditionReg=0                                    Premise(F355)
	S126= [ConditionReg]=CompareS(a,b)                          ConditionReg-Hold(S117,S125)
	S127= CtrlPIDReg=0                                          Premise(F356)
	S128= [PIDReg]=pid                                          PIDReg-Hold(S119,S127)

WB	S129= CtrlCP0=0                                             Premise(F388)
	S130= CP0[EPC]=addr+4                                       CP0-Hold(S121,S129)
	S131= CP0[ExCode]=5'h0d                                     CP0-Hold(S122,S129)
	S132= CtrlICache=0                                          Premise(F396)
	S133= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S124,S132)
	S134= CtrlConditionReg=0                                    Premise(F405)
	S135= [ConditionReg]=CompareS(a,b)                          ConditionReg-Hold(S126,S134)
	S136= CtrlPIDReg=0                                          Premise(F406)
	S137= [PIDReg]=pid                                          PIDReg-Hold(S128,S136)

POST	S130= CP0[EPC]=addr+4                                       CP0-Hold(S121,S129)
	S131= CP0[ExCode]=5'h0d                                     CP0-Hold(S122,S129)
	S133= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S124,S132)
	S135= [ConditionReg]=CompareS(a,b)                          ConditionReg-Hold(S126,S134)
	S137= [PIDReg]=pid                                          PIDReg-Hold(S128,S136)

