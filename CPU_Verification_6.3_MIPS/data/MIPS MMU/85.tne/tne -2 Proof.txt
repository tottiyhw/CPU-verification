
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rs,rt,code,54}                      Premise(F2)
	S3= GPR[rs]=a                                               Premise(F3)
	S4= GPR[rt]=b                                               Premise(F4)

IF	S5= CP0.ASID=pid                                            ASID-Read(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= CP0.ASID=>IMMU.PID                                      Premise(F5)
	S8= IMMU.PID=pid                                            Path(S5,S7)
	S9= PC.Out=>IMMU.IEA                                        Premise(F6)
	S10= IMMU.IEA=addr                                          Path(S6,S9)
	S11= IMMU.Addr={pid,addr}                                   IMMU-Search(S8,S10)
	S12= IMMU.Addr=>IAddrReg.In                                 Premise(F7)
	S13= IAddrReg.In={pid,addr}                                 Path(S11,S12)
	S14= CtrlPC=0                                               Premise(F40)
	S15= CtrlPCInc=0                                            Premise(F41)
	S16= PC[Out]=addr                                           PC-Hold(S1,S14,S15)
	S17= CtrlIAddrReg=1                                         Premise(F42)
	S18= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S13,S17)
	S19= CtrlIMem=0                                             Premise(F47)
	S20= IMem[{pid,addr}]={0,rs,rt,code,54}                     IMem-Hold(S2,S19)
	S21= CtrlGPR=0                                              Premise(F50)
	S22= GPR[rs]=a                                              GPR-Hold(S3,S21)
	S23= GPR[rt]=b                                              GPR-Hold(S4,S21)

IMMU	S24= PC.Out=addr                                            PC-Out(S16)
	S25= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S18)
	S26= PC.Out=>ICache.IEA                                     Premise(F59)
	S27= ICache.IEA=addr                                        Path(S24,S26)
	S28= IAddrReg.Out=>IMem.RAddr                               Premise(F64)
	S29= IMem.RAddr={pid,addr}                                  Path(S25,S28)
	S30= IMem.Out={0,rs,rt,code,54}                             IMem-Read(S29,S20)
	S31= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S29,S20)
	S32= IMem.Out=>IRMux.MemData                                Premise(F65)
	S33= IRMux.MemData={0,rs,rt,code,54}                        Path(S30,S32)
	S34= IRMux.Out={0,rs,rt,code,54}                            IRMux-Select(S33)
	S35= IRMux.Out=>IR.In                                       Premise(F69)
	S36= IR.In={0,rs,rt,code,54}                                Path(S34,S35)
	S37= IMem.MEM8WordOut=>ICache.WData                         Premise(F70)
	S38= ICache.WData=IMemGet8Word({pid,addr})                  Path(S31,S37)
	S39= CtrlICache=1                                           Premise(F94)
	S40= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S27,S38,S39)
	S41= CtrlIR=1                                               Premise(F99)
	S42= [IR]={0,rs,rt,code,54}                                 IR-Write(S36,S41)
	S43= CtrlGPR=0                                              Premise(F100)
	S44= GPR[rs]=a                                              GPR-Hold(S22,S43)
	S45= GPR[rt]=b                                              GPR-Hold(S23,S43)

ID	S46= IR.Out25_21=rs                                         IR-Out(S42)
	S47= IR.Out20_16=rt                                         IR-Out(S42)
	S48= IR.Out25_21=>GPR.RReg1                                 Premise(F123)
	S49= GPR.RReg1=rs                                           Path(S46,S48)
	S50= GPR.Rdata1=a                                           GPR-Read(S49,S44)
	S51= IR.Out20_16=>GPR.RReg2                                 Premise(F124)
	S52= GPR.RReg2=rt                                           Path(S47,S51)
	S53= GPR.Rdata2=b                                           GPR-Read(S52,S45)
	S54= GPR.Rdata1=>A.In                                       Premise(F126)
	S55= A.In=a                                                 Path(S50,S54)
	S56= GPR.Rdata2=>B.In                                       Premise(F127)
	S57= B.In=b                                                 Path(S53,S56)
	S58= CtrlICache=0                                           Premise(F144)
	S59= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S40,S58)
	S60= CtrlA=1                                                Premise(F151)
	S61= [A]=a                                                  A-Write(S55,S60)
	S62= CtrlB=1                                                Premise(F152)
	S63= [B]=b                                                  B-Write(S57,S62)

EX	S64= A.Out=a                                                A-Out(S61)
	S65= B.Out=b                                                B-Out(S63)
	S66= A.Out=>CMPU.A                                          Premise(F178)
	S67= CMPU.A=a                                               Path(S64,S66)
	S68= B.Out=>CMPU.B                                          Premise(F179)
	S69= CMPU.B=b                                               Path(S65,S68)
	S70= CMPU.zero=CompareS(a,b)                                CMPU-CMPS(S67,S69)
	S71= CMPU.zero=>ConditionReg.In                             Premise(F181)
	S72= ConditionReg.In=CompareS(a,b)                          Path(S70,S71)
	S73= CtrlICache=0                                           Premise(F195)
	S74= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S59,S73)
	S75= CtrlConditionReg=1                                     Premise(F204)
	S76= [ConditionReg]=CompareS(a,b)                           ConditionReg-Write(S72,S75)

MEM	S77= CtrlICache=0                                           Premise(F246)
	S78= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S74,S77)
	S79= CtrlConditionReg=0                                     Premise(F255)
	S80= [ConditionReg]=CompareS(a,b)                           ConditionReg-Hold(S76,S79)

DMMU1	S81= CtrlICache=0                                           Premise(F296)
	S82= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S78,S81)
	S83= CtrlConditionReg=0                                     Premise(F305)
	S84= [ConditionReg]=CompareS(a,b)                           ConditionReg-Hold(S80,S83)

DMMU2	S85= CtrlICache=0                                           Premise(F346)
	S86= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S82,S85)
	S87= CtrlConditionReg=0                                     Premise(F355)
	S88= [ConditionReg]=CompareS(a,b)                           ConditionReg-Hold(S84,S87)

WB	S89= CtrlICache=0                                           Premise(F396)
	S90= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S86,S89)
	S91= CtrlConditionReg=0                                     Premise(F405)
	S92= [ConditionReg]=CompareS(a,b)                           ConditionReg-Hold(S88,S91)

POST	S90= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S86,S89)
	S92= [ConditionReg]=CompareS(a,b)                           ConditionReg-Hold(S88,S91)

