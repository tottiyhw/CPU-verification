
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rS,rT,rD,0,33}                      Premise(F2)
	S3= GPR[rS]=a                                               Premise(F3)
	S4= GPR[rT]=b                                               Premise(F4)

IF	S5= CP0.ASID=pid                                            ASID-Read(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= PC.Out=>IMem.RAddr                                      Premise(F5)
	S8= IMem.RAddr=addr                                         Path(S6,S7)
	S9= CP0.ASID=>IMem.ASID                                     Premise(F6)
	S10= IMem.ASID=pid                                          Path(S5,S9)
	S11= IMem.Out={0,rS,rT,rD,0,33}                             IMem-Read(S10,S8,S2)
	S12= IMem.Out=>IR.In                                        Premise(F7)
	S13= IR.In={0,rS,rT,rD,0,33}                                Path(S11,S12)
	S14= CtrlPC=0                                               Premise(F19)
	S15= CtrlPCInc=1                                            Premise(F20)
	S16= PC[Out]=addr+4                                         PC-Inc(S1,S14,S15)
	S17= CtrlIR=1                                               Premise(F26)
	S18= [IR]={0,rS,rT,rD,0,33}                                 IR-Write(S13,S17)
	S19= CtrlGPR=0                                              Premise(F27)
	S20= GPR[rS]=a                                              GPR-Hold(S3,S19)
	S21= GPR[rT]=b                                              GPR-Hold(S4,S19)

ID	S22= IR.Out25_21=rS                                         IR-Out(S18)
	S23= IR.Out20_16=rT                                         IR-Out(S18)
	S24= IR.Out25_21=>GPR.RReg1                                 Premise(F35)
	S25= GPR.RReg1=rS                                           Path(S22,S24)
	S26= GPR.Rdata1=a                                           GPR-Read(S25,S20)
	S27= IR.Out20_16=>GPR.RReg2                                 Premise(F36)
	S28= GPR.RReg2=rT                                           Path(S23,S27)
	S29= GPR.Rdata2=b                                           GPR-Read(S28,S21)
	S30= GPR.Rdata1=>A.In                                       Premise(F38)
	S31= A.In=a                                                 Path(S26,S30)
	S32= GPR.Rdata2=>B.In                                       Premise(F39)
	S33= B.In=b                                                 Path(S29,S32)
	S34= CtrlPC=0                                               Premise(F45)
	S35= CtrlPCInc=0                                            Premise(F46)
	S36= PC[Out]=addr+4                                         PC-Hold(S16,S34,S35)
	S37= CtrlIR=0                                               Premise(F52)
	S38= [IR]={0,rS,rT,rD,0,33}                                 IR-Hold(S18,S37)
	S39= CtrlA=1                                                Premise(F54)
	S40= [A]=a                                                  A-Write(S31,S39)
	S41= CtrlB=1                                                Premise(F55)
	S42= [B]=b                                                  B-Write(S33,S41)

EX	S43= A.Out=a                                                A-Out(S40)
	S44= B.Out=b                                                B-Out(S42)
	S45= A.Out=>ALU.A                                           Premise(F66)
	S46= ALU.A=a                                                Path(S43,S45)
	S47= B.Out=>ALU.B                                           Premise(F67)
	S48= ALU.B=b                                                Path(S44,S47)
	S49= ALU.Out=a+b                                            ALU(S46,S48)
	S50= ALU.Out=>ALUOut.In                                     Premise(F69)
	S51= ALUOut.In=a+b                                          Path(S49,S50)
	S52= CtrlPC=0                                               Premise(F72)
	S53= CtrlPCInc=0                                            Premise(F73)
	S54= PC[Out]=addr+4                                         PC-Hold(S36,S52,S53)
	S55= CtrlIR=0                                               Premise(F79)
	S56= [IR]={0,rS,rT,rD,0,33}                                 IR-Hold(S38,S55)
	S57= CtrlALUOut=1                                           Premise(F83)
	S58= [ALUOut]=a+b                                           ALUOut-Write(S51,S57)

MEM	S59= CtrlPC=0                                               Premise(F98)
	S60= CtrlPCInc=0                                            Premise(F99)
	S61= PC[Out]=addr+4                                         PC-Hold(S54,S59,S60)
	S62= CtrlIR=0                                               Premise(F105)
	S63= [IR]={0,rS,rT,rD,0,33}                                 IR-Hold(S56,S62)
	S64= CtrlALUOut=0                                           Premise(F109)
	S65= [ALUOut]=a+b                                           ALUOut-Hold(S58,S64)

WB	S66= IR.Out15_11=rD                                         IR-Out(S63)
	S67= ALUOut.Out=a+b                                         ALUOut-Out(S65)
	S68= IR.Out15_11=>GPR.WReg                                  Premise(F122)
	S69= GPR.WReg=rD                                            Path(S66,S68)
	S70= ALUOut.Out=>GPR.WData                                  Premise(F123)
	S71= GPR.WData=a+b                                          Path(S67,S70)
	S72= CtrlPC=0                                               Premise(F124)
	S73= CtrlPCInc=0                                            Premise(F125)
	S74= PC[Out]=addr+4                                         PC-Hold(S61,S72,S73)
	S75= CtrlGPR=1                                              Premise(F132)
	S76= GPR[rD]=a+b                                            GPR-Write(S69,S71,S75)

POST	S74= PC[Out]=addr+4                                         PC-Hold(S61,S72,S73)
	S76= GPR[rD]=a+b                                            GPR-Write(S69,S71,S75)

