
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rS,rT,0,0,24}                       Premise(F2)
	S3= GPR[rS]=a                                               Premise(F3)
	S4= GPR[rT]=b                                               Premise(F4)

IF	S5= CP0.ASID=pid                                            ASID-Read(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= PC.Out=>IMem.RAddr                                      Premise(F5)
	S8= IMem.RAddr=addr                                         Path(S6,S7)
	S9= CP0.ASID=>IMem.ASID                                     Premise(F6)
	S10= IMem.ASID=pid                                          Path(S5,S9)
	S11= IMem.Out={0,rS,rT,0,0,24}                              IMem-Read(S10,S8,S2)
	S12= IMem.Out=>IR.In                                        Premise(F7)
	S13= IR.In={0,rS,rT,0,0,24}                                 Path(S11,S12)
	S14= CtrlPC=0                                               Premise(F18)
	S15= CtrlPCInc=1                                            Premise(F19)
	S16= PC[Out]=addr+4                                         PC-Inc(S1,S14,S15)
	S17= CtrlIR=1                                               Premise(F25)
	S18= [IR]={0,rS,rT,0,0,24}                                  IR-Write(S13,S17)
	S19= CtrlGPR=0                                              Premise(F26)
	S20= GPR[rS]=a                                              GPR-Hold(S3,S19)
	S21= GPR[rT]=b                                              GPR-Hold(S4,S19)

ID	S22= IR.Out25_21=rS                                         IR-Out(S18)
	S23= IR.Out20_16=rT                                         IR-Out(S18)
	S24= IR.Out25_21=>GPR.RReg1                                 Premise(F35)
	S25= GPR.RReg1=rS                                           Path(S22,S24)
	S26= GPR.Rdata1=a                                           GPR-Read(S25,S20)
	S27= IR.Out20_16=>GPR.RReg2                                 Premise(F36)
	S28= GPR.RReg2=rT                                           Path(S23,S27)
	S29= GPR.Rdata2=b                                           GPR-Read(S28,S21)
	S30= GPR.Rdata1=>A.In                                       Premise(F38)
	S31= A.In=a                                                 Path(S26,S30)
	S32= GPR.Rdata2=>B.In                                       Premise(F39)
	S33= B.In=b                                                 Path(S29,S32)
	S34= CtrlPC=0                                               Premise(F44)
	S35= CtrlPCInc=0                                            Premise(F45)
	S36= PC[Out]=addr+4                                         PC-Hold(S16,S34,S35)
	S37= CtrlA=1                                                Premise(F53)
	S38= [A]=a                                                  A-Write(S31,S37)
	S39= CtrlB=1                                                Premise(F54)
	S40= [B]=b                                                  B-Write(S33,S39)

EX	S41= A.Out=a                                                A-Out(S38)
	S42= B.Out=b                                                B-Out(S40)
	S43= A.Out=>MDU.A                                           Premise(F66)
	S44= MDU.A=a                                                Path(S41,S43)
	S45= B.Out=>MDU.B                                           Premise(F67)
	S46= MDU.B=b                                                Path(S42,S45)
	S47= MDU.lo=(a¡Áb)[31:0]                                     MDU(S44,S46)
	S48= MDU.hi=(a¡Áb)[63:32]                                    MDU(S44,S46)
	S49= MDU.hi=>Hi.In                                          Premise(F69)
	S50= Hi.In=(a¡Áb)[63:32]                                     Path(S48,S49)
	S51= MDU.lo=>Lo.In                                          Premise(F70)
	S52= Lo.In=(a¡Áb)[31:0]                                      Path(S47,S51)
	S53= CtrlPC=0                                               Premise(F71)
	S54= CtrlPCInc=0                                            Premise(F72)
	S55= PC[Out]=addr+4                                         PC-Hold(S36,S53,S54)
	S56= CtrlHi=1                                               Premise(F82)
	S57= [Hi]=(a¡Áb)[63:32]                                      Hi-Write(S50,S56)
	S58= CtrlLo=1                                               Premise(F83)
	S59= [Lo]=(a¡Áb)[31:0]                                       Lo-Write(S52,S58)

MEM	S60= CtrlPC=0                                               Premise(F97)
	S61= CtrlPCInc=0                                            Premise(F98)
	S62= PC[Out]=addr+4                                         PC-Hold(S55,S60,S61)
	S63= CtrlHi=0                                               Premise(F108)
	S64= [Hi]=(a¡Áb)[63:32]                                      Hi-Hold(S57,S63)
	S65= CtrlLo=0                                               Premise(F109)
	S66= [Lo]=(a¡Áb)[31:0]                                       Lo-Hold(S59,S65)

WB	S67= CtrlPC=0                                               Premise(F123)
	S68= CtrlPCInc=0                                            Premise(F124)
	S69= PC[Out]=addr+4                                         PC-Hold(S62,S67,S68)
	S70= CtrlHi=0                                               Premise(F134)
	S71= [Hi]=(a¡Áb)[63:32]                                      Hi-Hold(S64,S70)
	S72= CtrlLo=0                                               Premise(F135)
	S73= [Lo]=(a¡Áb)[31:0]                                       Lo-Hold(S66,S72)

POST	S69= PC[Out]=addr+4                                         PC-Hold(S62,S67,S68)
	S71= [Hi]=(a¡Áb)[63:32]                                      Hi-Hold(S64,S70)
	S73= [Lo]=(a¡Áb)[31:0]                                       Lo-Hold(S66,S72)

