
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={1,rS,16,offset}                       Premise(F2)
	S3= GPR[rS]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            ASID-Read(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= PC.Out=>IMem.RAddr                                      Premise(F4)
	S7= IMem.RAddr=addr                                         Path(S5,S6)
	S8= CP0.ASID=>IMem.ASID                                     Premise(F5)
	S9= IMem.ASID=pid                                           Path(S4,S8)
	S10= IMem.Out={1,rS,16,offset}                              IMem-Read(S9,S7,S2)
	S11= IMem.Out=>IR.In                                        Premise(F6)
	S12= IR.In={1,rS,16,offset}                                 Path(S10,S11)
	S13= CtrlPC=0                                               Premise(F22)
	S14= CtrlPCInc=1                                            Premise(F23)
	S15= PC[Out]=addr+4                                         PC-Inc(S1,S13,S14)
	S16= CtrlIR=1                                               Premise(F29)
	S17= [IR]={1,rS,16,offset}                                  IR-Write(S12,S16)
	S18= CtrlGPR=0                                              Premise(F30)
	S19= GPR[rS]=a                                              GPR-Hold(S3,S18)

ID	S20= IR.Out25_21=rS                                         IR-Out(S17)
	S21= IR.Out25_21=>GPR.RReg1                                 Premise(F39)
	S22= GPR.RReg1=rS                                           Path(S20,S21)
	S23= GPR.Rdata1=a                                           GPR-Read(S22,S19)
	S24= GPR.Rdata2=32'b0                                       GPR-ReadGPR0()
	S25= GPR.Rdata1=>A.In                                       Premise(F41)
	S26= A.In=a                                                 Path(S23,S25)
	S27= GPR.Rdata2=>B.In                                       Premise(F42)
	S28= B.In=32'b0                                             Path(S24,S27)
	S29= CtrlPC=0                                               Premise(F53)
	S30= CtrlPCInc=0                                            Premise(F54)
	S31= PC[Out]=addr+4                                         PC-Hold(S15,S29,S30)
	S32= CtrlA=1                                                Premise(F62)
	S33= [A]=a                                                  A-Write(S26,S32)
	S34= CtrlB=1                                                Premise(F63)
	S35= [B]=32'b0                                              B-Write(S28,S34)

EX	S36= PC.Out=addr+4                                          PC-Out(S31)
	S37= A.Out=a                                                A-Out(S33)
	S38= B.Out=32'b0                                            B-Out(S35)
	S39= A.Out=>CMPU.A                                          Premise(F79)
	S40= CMPU.A=a                                               Path(S37,S39)
	S41= B.Out=>CMPU.B                                          Premise(F80)
	S42= CMPU.B=32'b0                                           Path(S38,S41)
	S43= CMPU.lt=CompareS(a,32'b0)                              CMPU-CMPS(S40,S42)
	S44= CMPU.lt=>ConditionReg.In                               Premise(F82)
	S45= ConditionReg.In=CompareS(a,32'b0)                      Path(S43,S44)
	S46= GPR.WReg=5'd31                                         Premise(F83)
	S47= PC.Out=>GPR.WData                                      Premise(F84)
	S48= GPR.WData=addr+4                                       Path(S36,S47)
	S49= CtrlGPR=1                                              Premise(F95)
	S50= GPR[5'd31]=addr+4                                      GPR-Write(S46,S48,S49)
	S51= CtrlConditionReg=1                                     Premise(F99)
	S52= [ConditionReg]=CompareS(a,32'b0)                       ConditionReg-Write(S45,S51)

MEM	S53= CtrlGPR=0                                              Premise(F126)
	S54= GPR[5'd31]=addr+4                                      GPR-Hold(S50,S53)
	S55= CtrlConditionReg=0                                     Premise(F130)
	S56= [ConditionReg]=CompareS(a,32'b0)                       ConditionReg-Hold(S52,S55)

WB	S57= CtrlGPR=0                                              Premise(F157)
	S58= GPR[5'd31]=addr+4                                      GPR-Hold(S54,S57)
	S59= CtrlConditionReg=0                                     Premise(F161)
	S60= [ConditionReg]=CompareS(a,32'b0)                       ConditionReg-Hold(S56,S59)

POST	S58= GPR[5'd31]=addr+4                                      GPR-Hold(S54,S57)
	S60= [ConditionReg]=CompareS(a,32'b0)                       ConditionReg-Hold(S56,S59)

