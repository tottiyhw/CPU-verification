
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={5,rS,rT,offset}                       Premise(F2)
	S3= GPR[rS]=a                                               Premise(F3)
	S4= GPR[rT]=b                                               Premise(F4)

IF	S5= CP0.ASID=pid                                            ASID-Read(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= PC.Out=>IMem.RAddr                                      Premise(F5)
	S8= IMem.RAddr=addr                                         Path(S6,S7)
	S9= CP0.ASID=>IMem.ASID                                     Premise(F6)
	S10= IMem.ASID=pid                                          Path(S5,S9)
	S11= IMem.Out={5,rS,rT,offset}                              IMem-Read(S10,S8,S2)
	S12= IMem.Out=>IR.In                                        Premise(F7)
	S13= IR.In={5,rS,rT,offset}                                 Path(S11,S12)
	S14= CtrlIR=1                                               Premise(F29)
	S15= [IR]={5,rS,rT,offset}                                  IR-Write(S13,S14)
	S16= CtrlGPR=0                                              Premise(F30)
	S17= GPR[rS]=a                                              GPR-Hold(S3,S16)
	S18= GPR[rT]=b                                              GPR-Hold(S4,S16)

ID	S19= IR.Out25_21=rS                                         IR-Out(S15)
	S20= IR.Out20_16=rT                                         IR-Out(S15)
	S21= IR.Out25_21=>GPR.RReg1                                 Premise(F39)
	S22= GPR.RReg1=rS                                           Path(S19,S21)
	S23= GPR.Rdata1=a                                           GPR-Read(S22,S17)
	S24= IR.Out20_16=>GPR.RReg2                                 Premise(F40)
	S25= GPR.RReg2=rT                                           Path(S20,S24)
	S26= GPR.Rdata2=b                                           GPR-Read(S25,S18)
	S27= GPR.Rdata1=>A.In                                       Premise(F41)
	S28= A.In=a                                                 Path(S23,S27)
	S29= GPR.Rdata2=>B.In                                       Premise(F42)
	S30= B.In=b                                                 Path(S26,S29)
	S31= CtrlA=1                                                Premise(F61)
	S32= [A]=a                                                  A-Write(S28,S31)
	S33= CtrlB=1                                                Premise(F62)
	S34= [B]=b                                                  B-Write(S30,S33)

EX	S35= A.Out=a                                                A-Out(S32)
	S36= B.Out=b                                                B-Out(S34)
	S37= A.Out=>CMPU.A                                          Premise(F78)
	S38= CMPU.A=a                                               Path(S35,S37)
	S39= B.Out=>CMPU.B                                          Premise(F79)
	S40= CMPU.B=b                                               Path(S36,S39)
	S41= CMPU.zero=CompareS(a,b)                                CMPU-CMPS(S38,S40)
	S42= CMPU.zero=>ConditionReg.In                             Premise(F81)
	S43= ConditionReg.In=CompareS(a,b)                          Path(S41,S42)
	S44= CtrlConditionReg=1                                     Premise(F96)
	S45= [ConditionReg]=CompareS(a,b)                           ConditionReg-Write(S43,S44)

MEM	S46= CtrlConditionReg=0                                     Premise(F126)
	S47= [ConditionReg]=CompareS(a,b)                           ConditionReg-Hold(S45,S46)

WB	S48= CtrlConditionReg=0                                     Premise(F156)
	S49= [ConditionReg]=CompareS(a,b)                           ConditionReg-Hold(S47,S48)

POST	S49= [ConditionReg]=CompareS(a,b)                           ConditionReg-Hold(S47,S48)

