
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={28,rS,rT,rD,0,32}                     Premise(F2)
	S3= GPR[rS]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            ASID-Read(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= PC.Out=>IMem.RAddr                                      Premise(F4)
	S7= IMem.RAddr=addr                                         Path(S5,S6)
	S8= CP0.ASID=>IMem.ASID                                     Premise(F5)
	S9= IMem.ASID=pid                                           Path(S4,S8)
	S10= IMem.Out={28,rS,rT,rD,0,32}                            IMem-Read(S9,S7,S2)
	S11= IMem.Out=>IR.In                                        Premise(F6)
	S12= IR.In={28,rS,rT,rD,0,32}                               Path(S10,S11)
	S13= CtrlPC=0                                               Premise(F14)
	S14= CtrlPCInc=1                                            Premise(F15)
	S15= PC[Out]=addr+4                                         PC-Inc(S1,S13,S14)
	S16= CtrlIR=1                                               Premise(F21)
	S17= [IR]={28,rS,rT,rD,0,32}                                IR-Write(S12,S16)
	S18= CtrlGPR=0                                              Premise(F22)
	S19= GPR[rS]=a                                              GPR-Hold(S3,S18)

ID	S20= IR.Out25_21=rS                                         IR-Out(S17)
	S21= IR.Out25_21=>GPR.RReg1                                 Premise(F28)
	S22= GPR.RReg1=rS                                           Path(S20,S21)
	S23= GPR.Rdata1=a                                           GPR-Read(S22,S19)
	S24= GPR.Rdata1=>A.In                                       Premise(F30)
	S25= A.In=a                                                 Path(S23,S24)
	S26= CtrlPC=0                                               Premise(F34)
	S27= CtrlPCInc=0                                            Premise(F35)
	S28= PC[Out]=addr+4                                         PC-Hold(S15,S26,S27)
	S29= CtrlIR=0                                               Premise(F41)
	S30= [IR]={28,rS,rT,rD,0,32}                                IR-Hold(S17,S29)
	S31= CtrlA=1                                                Premise(F43)
	S32= [A]=a                                                  A-Write(S25,S31)

EX	S33= IR.Out15_11=rD                                         IR-Out(S30)
	S34= A.Out=a                                                A-Out(S32)
	S35= A.Out=>CountUnit.In                                    Premise(F51)
	S36= CountUnit.In=a                                         Path(S34,S35)
	S37= CountUnit.Out=Count0(a)                                CountUnit_Count0(S36)
	S38= CountUnit.Out=>GPR.WData                               Premise(F53)
	S39= GPR.WData=Count0(a)                                    Path(S37,S38)
	S40= IR.Out15_11=>GPR.WReg                                  Premise(F54)
	S41= GPR.WReg=rD                                            Path(S33,S40)
	S42= CtrlPC=0                                               Premise(F55)
	S43= CtrlPCInc=0                                            Premise(F56)
	S44= PC[Out]=addr+4                                         PC-Hold(S28,S42,S43)
	S45= CtrlGPR=1                                              Premise(F63)
	S46= GPR[rD]=Count0(a)                                      GPR-Write(S41,S39,S45)

MEM	S47= CtrlPC=0                                               Premise(F75)
	S48= CtrlPCInc=0                                            Premise(F76)
	S49= PC[Out]=addr+4                                         PC-Hold(S44,S47,S48)
	S50= CtrlGPR=0                                              Premise(F83)
	S51= GPR[rD]=Count0(a)                                      GPR-Hold(S46,S50)

WB	S52= CtrlPC=0                                               Premise(F95)
	S53= CtrlPCInc=0                                            Premise(F96)
	S54= PC[Out]=addr+4                                         PC-Hold(S49,S52,S53)
	S55= CtrlGPR=0                                              Premise(F103)
	S56= GPR[rD]=Count0(a)                                      GPR-Hold(S51,S55)

POST	S54= PC[Out]=addr+4                                         PC-Hold(S49,S52,S53)
	S56= GPR[rD]=Count0(a)                                      GPR-Hold(S51,S55)

