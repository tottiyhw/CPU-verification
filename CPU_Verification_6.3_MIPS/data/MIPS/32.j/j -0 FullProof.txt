
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S0= PC[Out]=addr                                            Premise(F1)
	S0= IMem[{pid,addr}]={2,imm}                                Premise(F2)

IF	S0= CP0.ASID=pid                                            ASID-Read(S0)
	S0= PC.Out=addr                                             PC-Out(S0)
	S0= PC.Out=>IMem.RAddr                                      Premise(F3)
	S0= IMem.RAddr=addr                                         Path(S0,S0)
	S0= CP0.ASID=>IMem.ASID                                     Premise(F4)
	S0= IMem.ASID=pid                                           Path(S0,S0)
	S0= IMem.Out={2,imm}                                        IMem-Read(S0,S0,S0)
	S0= IMem.Out=>IR.In                                         Premise(F5)
	S0= IR.In={2,imm}                                           Path(S0,S0)
	S0= IR.Out31_26=>CU.Op                                      Premise(F6)
	S0= PC.CIA31_28=>ADDREXT.PCpart                             Premise(F7)
	S0= IR.Out25_0=>ADDREXT.In                                  Premise(F8)
	S0= ADDREXT.Out=>PC.In                                      Premise(F9)
	S0= CtrlPC=0                                                Premise(F10)
	S0= CtrlPCInc=1                                             Premise(F11)
	S0= PC[Out]=addr+4                                          PC-Inc(S0,S0,S0)
	S0= PC[CIA]=addr                                            PC-Inc(S0,S0,S0)
	S0= CtrlIMem=0                                              Premise(F12)
	S0= IMem[{pid,addr}]={2,imm}                                IMem-Hold(S0,S0)
	S0= CtrlASIDIn=0                                            Premise(F13)
	S0= CtrlCP0=0                                               Premise(F14)
	S0= CP0[ASID]=pid                                           CP0-Hold(S0,S0)
	S0= CtrlEPCIn=0                                             Premise(F15)
	S0= CtrlExCodeIn=0                                          Premise(F16)
	S0= CtrlIR=1                                                Premise(F17)
	S0= [IR]={2,imm}                                            IR-Write(S0,S0)

ID	S0= PC.Out=addr+4                                           PC-Out(S0)
	S0= PC.CIA=addr                                             PC-Out(S0)
	S0= PC.CIA31_28=addr[31:28]                                 PC-Out(S0)
	S0= CP0.ASID=pid                                            ASID-Read(S0)
	S0= IR.Out={2,imm}                                          IR-Out(S0)
	S0= IR.Out31_26=2                                           IR-Out(S0)
	S0= IR.Out25_0=imm                                          IR-Out(S0)
	S0= PC.Out=>IMem.RAddr                                      Premise(F18)
	S0= IMem.RAddr=addr+4                                       Path(S0,S0)
	S0= CP0.ASID=>IMem.ASID                                     Premise(F19)
	S0= IMem.ASID=pid                                           Path(S0,S0)
	S0= IMem.Out=>IR.In                                         Premise(F20)
	S0= IR.Out31_26=>CU.Op                                      Premise(F21)
	S0= CU.Op=2                                                 Path(S0,S0)
	S0= PC.CIA31_28=>ADDREXT.PCpart                             Premise(F22)
	S0= ADDREXT.PCpart=addr[31:28]                              Path(S0,S0)
	S0= IR.Out25_0=>ADDREXT.In                                  Premise(F23)
	S0= ADDREXT.In=imm                                          Path(S0,S0)
	S0= ADDREXT.Out={addr[31:28],imm,2'b0}                      ADDREXT-EXT(S0,S0)
	S0= ADDREXT.Out=>PC.In                                      Premise(F24)
	S0= PC.In={addr[31:28],imm,2'b0}                            Path(S0,S0)
	S0= CtrlPC=1                                                Premise(F25)
	S0= CtrlPCInc=0                                             Premise(F26)
	S0= PC[CIA]=addr                                            PC-Hold(S0,S0)
	S0= PC[Out]={addr[31:28],imm,2'b0}                          PC-Write(S0,S0,S0)
	S0= CtrlIMem=0                                              Premise(F27)
	S0= IMem[{pid,addr}]={2,imm}                                IMem-Hold(S0,S0)
	S0= CtrlASIDIn=0                                            Premise(F28)
	S0= CtrlCP0=0                                               Premise(F29)
	S0= CP0[ASID]=pid                                           CP0-Hold(S0,S0)
	S0= CtrlEPCIn=0                                             Premise(F30)
	S0= CtrlExCodeIn=0                                          Premise(F31)
	S0= CtrlIR=0                                                Premise(F32)
	S0= [IR]={2,imm}                                            IR-Hold(S0,S0)

EX	S0= PC.CIA=addr                                             PC-Out(S0)
	S0= PC.CIA31_28=addr[31:28]                                 PC-Out(S0)
	S0= PC.Out={addr[31:28],imm,2'b0}                           PC-Out(S0)
	S0= CP0.ASID=pid                                            ASID-Read(S0)
	S0= IR.Out={2,imm}                                          IR-Out(S0)
	S0= IR.Out31_26=2                                           IR-Out(S0)
	S0= IR.Out25_0=imm                                          IR-Out(S0)
	S0= PC.Out=>IMem.RAddr                                      Premise(F33)
	S0= IMem.RAddr={addr[31:28],imm,2'b0}                       Path(S0,S0)
	S0= CP0.ASID=>IMem.ASID                                     Premise(F34)
	S0= IMem.ASID=pid                                           Path(S0,S0)
	S0= IMem.Out=>IR.In                                         Premise(F35)
	S0= IR.Out31_26=>CU.Op                                      Premise(F36)
	S0= CU.Op=2                                                 Path(S0,S0)
	S0= PC.CIA31_28=>ADDREXT.PCpart                             Premise(F37)
	S0= ADDREXT.PCpart=addr[31:28]                              Path(S0,S0)
	S0= IR.Out25_0=>ADDREXT.In                                  Premise(F38)
	S0= ADDREXT.In=imm                                          Path(S0,S0)
	S0= ADDREXT.Out={addr[31:28],imm,2'b0}                      ADDREXT-EXT(S0,S0)
	S0= ADDREXT.Out=>PC.In                                      Premise(F39)
	S0= PC.In={addr[31:28],imm,2'b0}                            Path(S0,S0)
	S0= CtrlPC=0                                                Premise(F40)
	S0= CtrlPCInc=0                                             Premise(F41)
	S0= PC[CIA]=addr                                            PC-Hold(S0,S0)
	S0= PC[Out]={addr[31:28],imm,2'b0}                          PC-Hold(S0,S0,S0)
	S0= CtrlIMem=0                                              Premise(F42)
	S0= IMem[{pid,addr}]={2,imm}                                IMem-Hold(S0,S0)
	S0= CtrlASIDIn=0                                            Premise(F43)
	S0= CtrlCP0=0                                               Premise(F44)
	S0= CP0[ASID]=pid                                           CP0-Hold(S0,S0)
	S0= CtrlEPCIn=0                                             Premise(F45)
	S0= CtrlExCodeIn=0                                          Premise(F46)
	S0= CtrlIR=0                                                Premise(F47)
	S0= [IR]={2,imm}                                            IR-Hold(S0,S0)

MEM	S0= PC.CIA=addr                                             PC-Out(S0)
	S0= PC.CIA31_28=addr[31:28]                                 PC-Out(S0)
	S0= PC.Out={addr[31:28],imm,2'b0}                           PC-Out(S0)
	S0= CP0.ASID=pid                                            ASID-Read(S0)
	S0= IR.Out={2,imm}                                          IR-Out(S0)
	S0= IR.Out31_26=2                                           IR-Out(S0)
	S0= IR.Out25_0=imm                                          IR-Out(S0)
	S0= PC.Out=>IMem.RAddr                                      Premise(F48)
	S0= IMem.RAddr={addr[31:28],imm,2'b0}                       Path(S0,S0)
	S0= CP0.ASID=>IMem.ASID                                     Premise(F49)
	S0= IMem.ASID=pid                                           Path(S0,S0)
	S0= IMem.Out=>IR.In                                         Premise(F50)
	S0= IR.Out31_26=>CU.Op                                      Premise(F51)
	S0= CU.Op=2                                                 Path(S0,S0)
	S0= PC.CIA31_28=>ADDREXT.PCpart                             Premise(F52)
	S0= ADDREXT.PCpart=addr[31:28]                              Path(S0,S0)
	S0= IR.Out25_0=>ADDREXT.In                                  Premise(F53)
	S0= ADDREXT.In=imm                                          Path(S0,S0)
	S0= ADDREXT.Out={addr[31:28],imm,2'b0}                      ADDREXT-EXT(S0,S0)
	S0= ADDREXT.Out=>PC.In                                      Premise(F54)
	S0= PC.In={addr[31:28],imm,2'b0}                            Path(S0,S0)
	S0= CtrlPC=0                                                Premise(F55)
	S0= CtrlPCInc=0                                             Premise(F56)
	S0= PC[CIA]=addr                                            PC-Hold(S0,S0)
	S0= PC[Out]={addr[31:28],imm,2'b0}                          PC-Hold(S0,S0,S0)
	S0= CtrlIMem=0                                              Premise(F57)
	S0= IMem[{pid,addr}]={2,imm}                                IMem-Hold(S0,S0)
	S0= CtrlASIDIn=0                                            Premise(F58)
	S0= CtrlCP0=0                                               Premise(F59)
	S0= CP0[ASID]=pid                                           CP0-Hold(S0,S0)
	S0= CtrlEPCIn=0                                             Premise(F60)
	S0= CtrlExCodeIn=0                                          Premise(F61)
	S0= CtrlIR=0                                                Premise(F62)
	S0= [IR]={2,imm}                                            IR-Hold(S0,S0)

WB	S0= PC.CIA=addr                                             PC-Out(S0)
	S0= PC.CIA31_28=addr[31:28]                                 PC-Out(S0)
	S0= PC.Out={addr[31:28],imm,2'b0}                           PC-Out(S0)
	S0= CP0.ASID=pid                                            ASID-Read(S0)
	S0= IR.Out={2,imm}                                          IR-Out(S0)
	S0= IR.Out31_26=2                                           IR-Out(S0)
	S0= IR.Out25_0=imm                                          IR-Out(S0)
	S0= PC.Out=>IMem.RAddr                                      Premise(F63)
	S0= IMem.RAddr={addr[31:28],imm,2'b0}                       Path(S0,S0)
	S0= CP0.ASID=>IMem.ASID                                     Premise(F64)
	S0= IMem.ASID=pid                                           Path(S0,S0)
	S0= IMem.Out=>IR.In                                         Premise(F65)
	S0= IR.Out31_26=>CU.Op                                      Premise(F66)
	S0= CU.Op=2                                                 Path(S0,S0)
	S0= PC.CIA31_28=>ADDREXT.PCpart                             Premise(F67)
	S0= ADDREXT.PCpart=addr[31:28]                              Path(S0,S0)
	S0= IR.Out25_0=>ADDREXT.In                                  Premise(F68)
	S0= ADDREXT.In=imm                                          Path(S0,S0)
	S0= ADDREXT.Out={addr[31:28],imm,2'b0}                      ADDREXT-EXT(S0,S0)
	S0= ADDREXT.Out=>PC.In                                      Premise(F69)
	S0= PC.In={addr[31:28],imm,2'b0}                            Path(S0,S0)
	S0= CtrlPC=0                                                Premise(F70)
	S0= CtrlPCInc=0                                             Premise(F71)
	S0= PC[CIA]=addr                                            PC-Hold(S0,S0)
	S0= PC[Out]={addr[31:28],imm,2'b0}                          PC-Hold(S0,S0,S0)
	S0= CtrlIMem=0                                              Premise(F72)
	S0= IMem[{pid,addr}]={2,imm}                                IMem-Hold(S0,S0)
	S0= CtrlASIDIn=0                                            Premise(F73)
	S0= CtrlCP0=0                                               Premise(F74)
	S0= CP0[ASID]=pid                                           CP0-Hold(S0,S0)
	S0= CtrlEPCIn=0                                             Premise(F75)
	S0= CtrlExCodeIn=0                                          Premise(F76)
	S0= CtrlIR=0                                                Premise(F77)
	S0= [IR]={2,imm}                                            IR-Hold(S0,S0)

POST	S0= PC[CIA]=addr                                            PC-Hold(S0,S0)
	S0= PC[Out]={addr[31:28],imm,2'b0}                          PC-Hold(S0,S0,S0)
	S0= IMem[{pid,addr}]={2,imm}                                IMem-Hold(S0,S0)
	S0= CP0[ASID]=pid                                           CP0-Hold(S0,S0)
	S0= [IR]={2,imm}                                            IR-Hold(S0,S0)

