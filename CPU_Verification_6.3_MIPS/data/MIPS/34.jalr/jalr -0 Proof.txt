
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rS,0,rD,hint,9}                     Premise(F2)
	S3= GPR[rS]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            ASID-Read(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= PC.Out=>IMem.RAddr                                      Premise(F4)
	S7= IMem.RAddr=addr                                         Path(S5,S6)
	S8= CP0.ASID=>IMem.ASID                                     Premise(F5)
	S9= IMem.ASID=pid                                           Path(S4,S8)
	S10= IMem.Out={0,rS,0,rD,hint,9}                            IMem-Read(S9,S7,S2)
	S11= IMem.Out=>IR.In                                        Premise(F6)
	S12= IR.In={0,rS,0,rD,hint,9}                               Path(S10,S11)
	S13= CtrlPC=0                                               Premise(F13)
	S14= CtrlPCInc=1                                            Premise(F14)
	S15= PC[Out]=addr+4                                         PC-Inc(S1,S13,S14)
	S16= CtrlIR=1                                               Premise(F20)
	S17= [IR]={0,rS,0,rD,hint,9}                                IR-Write(S12,S16)
	S18= CtrlGPR=0                                              Premise(F21)
	S19= GPR[rS]=a                                              GPR-Hold(S3,S18)

ID	S20= PC.Out=addr+4                                          PC-Out(S15)
	S21= IR.Out25_21=rS                                         IR-Out(S17)
	S22= IR.Out15_11=rD                                         IR-Out(S17)
	S23= IR.Out15_11=>GPR.WReg                                  Premise(F27)
	S24= GPR.WReg=rD                                            Path(S22,S23)
	S25= PC.Out=>GPR.WData                                      Premise(F28)
	S26= GPR.WData=addr+4                                       Path(S20,S25)
	S27= IR.Out25_21=>GPR.RReg1                                 Premise(F29)
	S28= GPR.RReg1=rS                                           Path(S21,S27)
	S29= GPR.Rdata1=a                                           GPR-Read(S28,S19)
	S30= GPR.Rdata1=>PC.In                                      Premise(F30)
	S31= PC.In=a                                                Path(S29,S30)
	S32= CtrlPC=1                                               Premise(F31)
	S33= CtrlPCInc=0                                            Premise(F32)
	S34= PC[Out]=a                                              PC-Write(S31,S32,S33)
	S35= CtrlGPR=1                                              Premise(F39)
	S36= GPR[rD]=addr+4                                         GPR-Write(S24,S26,S35)

EX	S37= CtrlPC=0                                               Premise(F49)
	S38= CtrlPCInc=0                                            Premise(F50)
	S39= PC[Out]=a                                              PC-Hold(S34,S37,S38)
	S40= CtrlGPR=0                                              Premise(F57)
	S41= GPR[rD]=addr+4                                         GPR-Hold(S36,S40)

MEM	S42= CtrlPC=0                                               Premise(F67)
	S43= CtrlPCInc=0                                            Premise(F68)
	S44= PC[Out]=a                                              PC-Hold(S39,S42,S43)
	S45= CtrlGPR=0                                              Premise(F75)
	S46= GPR[rD]=addr+4                                         GPR-Hold(S41,S45)

WB	S47= CtrlPC=0                                               Premise(F85)
	S48= CtrlPCInc=0                                            Premise(F86)
	S49= PC[Out]=a                                              PC-Hold(S44,S47,S48)
	S50= CtrlGPR=0                                              Premise(F93)
	S51= GPR[rD]=addr+4                                         GPR-Hold(S46,S50)

POST	S49= PC[Out]=a                                              PC-Hold(S44,S47,S48)
	S51= GPR[rD]=addr+4                                         GPR-Hold(S46,S50)

