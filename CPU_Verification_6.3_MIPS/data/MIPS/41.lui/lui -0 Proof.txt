
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={15,0,rT,offset}                       Premise(F2)

IF	S3= CP0.ASID=pid                                            ASID-Read(S0)
	S4= PC.Out=addr                                             PC-Out(S1)
	S5= PC.Out=>IMem.RAddr                                      Premise(F3)
	S6= IMem.RAddr=addr                                         Path(S4,S5)
	S7= CP0.ASID=>IMem.ASID                                     Premise(F4)
	S8= IMem.ASID=pid                                           Path(S3,S7)
	S9= IMem.Out={15,0,rT,offset}                               IMem-Read(S8,S6,S2)
	S10= IMem.Out=>IR.In                                        Premise(F5)
	S11= IR.In={15,0,rT,offset}                                 Path(S9,S10)
	S12= CtrlPC=0                                               Premise(F10)
	S13= CtrlPCInc=1                                            Premise(F11)
	S14= PC[Out]=addr+4                                         PC-Inc(S1,S12,S13)
	S15= CtrlIR=1                                               Premise(F17)
	S16= [IR]={15,0,rT,offset}                                  IR-Write(S11,S15)

ID	S17= IR.Out20_16=rT                                         IR-Out(S16)
	S18= IR.Out15_0=offset                                      IR-Out(S16)
	S19= IR.Out15_0=>IMMSEXT.In                                 Premise(F23)
	S20= IMMSEXT.In=offset                                      Path(S18,S19)
	S21= IMMSEXT.Out={offset,16{0}}                             IMMSEXT(S20)
	S22= IMMSEXT.Out=>GPR.WData                                 Premise(F24)
	S23= GPR.WData={offset,16{0}}                               Path(S21,S22)
	S24= IR.Out20_16=>GPR.WReg                                  Premise(F25)
	S25= GPR.WReg=rT                                            Path(S17,S24)
	S26= CtrlPC=0                                               Premise(F26)
	S27= CtrlPCInc=0                                            Premise(F27)
	S28= PC[Out]=addr+4                                         PC-Hold(S14,S26,S27)
	S29= CtrlGPR=1                                              Premise(F34)
	S30= GPR[rT]={offset,16{0}}                                 GPR-Write(S25,S23,S29)

EX	S31= CtrlPC=0                                               Premise(F42)
	S32= CtrlPCInc=0                                            Premise(F43)
	S33= PC[Out]=addr+4                                         PC-Hold(S28,S31,S32)
	S34= CtrlGPR=0                                              Premise(F50)
	S35= GPR[rT]={offset,16{0}}                                 GPR-Hold(S30,S34)

MEM	S36= CtrlPC=0                                               Premise(F58)
	S37= CtrlPCInc=0                                            Premise(F59)
	S38= PC[Out]=addr+4                                         PC-Hold(S33,S36,S37)
	S39= CtrlGPR=0                                              Premise(F66)
	S40= GPR[rT]={offset,16{0}}                                 GPR-Hold(S35,S39)

WB	S41= CtrlPC=0                                               Premise(F74)
	S42= CtrlPCInc=0                                            Premise(F75)
	S43= PC[Out]=addr+4                                         PC-Hold(S38,S41,S42)
	S44= CtrlGPR=0                                              Premise(F82)
	S45= GPR[rT]={offset,16{0}}                                 GPR-Hold(S40,S44)

POST	S43= PC[Out]=addr+4                                         PC-Hold(S38,S41,S42)
	S45= GPR[rT]={offset,16{0}}                                 GPR-Hold(S40,S44)

