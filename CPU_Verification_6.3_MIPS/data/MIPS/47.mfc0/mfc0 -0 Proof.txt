
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={16,0,rT,rD,0,sel}                     Premise(F2)
	S3= CP0[rD]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            ASID-Read(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= PC.Out=>IMem.RAddr                                      Premise(F4)
	S7= IMem.RAddr=addr                                         Path(S5,S6)
	S8= CP0.ASID=>IMem.ASID                                     Premise(F5)
	S9= IMem.ASID=pid                                           Path(S4,S8)
	S10= IMem.Out={16,0,rT,rD,0,sel}                            IMem-Read(S9,S7,S2)
	S11= IMem.Out=>IR.In                                        Premise(F6)
	S12= IR.In={16,0,rT,rD,0,sel}                               Path(S10,S11)
	S13= CtrlPC=0                                               Premise(F12)
	S14= CtrlPCInc=1                                            Premise(F13)
	S15= PC[Out]=addr+4                                         PC-Inc(S1,S13,S14)
	S16= CtrlCP0=0                                              Premise(F16)
	S17= CP0[rD]=a                                              CP0-Hold(S3,S16)
	S18= CtrlIR=1                                               Premise(F19)
	S19= [IR]={16,0,rT,rD,0,sel}                                IR-Write(S12,S18)

ID	S20= IR.Out20_16=rT                                         IR-Out(S19)
	S21= IR.Out15_11=rD                                         IR-Out(S19)
	S22= IR.Out15_11=>CP0.RReg                                  Premise(F26)
	S23= CP0.RReg=rD                                            Path(S21,S22)
	S24= CP0.Rdata=a                                            CP0-Read(S23,S17)
	S25= IR.Out20_16=>GPR.WReg                                  Premise(F27)
	S26= GPR.WReg=rT                                            Path(S20,S25)
	S27= CP0.Rdata=>GPR.WData                                   Premise(F28)
	S28= GPR.WData=a                                            Path(S24,S27)
	S29= CtrlPC=0                                               Premise(F29)
	S30= CtrlPCInc=0                                            Premise(F30)
	S31= PC[Out]=addr+4                                         PC-Hold(S15,S29,S30)
	S32= CtrlGPR=1                                              Premise(F37)
	S33= GPR[rT]=a                                              GPR-Write(S26,S28,S32)

EX	S34= CtrlPC=0                                               Premise(F46)
	S35= CtrlPCInc=0                                            Premise(F47)
	S36= PC[Out]=addr+4                                         PC-Hold(S31,S34,S35)
	S37= CtrlGPR=0                                              Premise(F54)
	S38= GPR[rT]=a                                              GPR-Hold(S33,S37)

MEM	S39= CtrlPC=0                                               Premise(F63)
	S40= CtrlPCInc=0                                            Premise(F64)
	S41= PC[Out]=addr+4                                         PC-Hold(S36,S39,S40)
	S42= CtrlGPR=0                                              Premise(F71)
	S43= GPR[rT]=a                                              GPR-Hold(S38,S42)

WB	S44= CtrlPC=0                                               Premise(F80)
	S45= CtrlPCInc=0                                            Premise(F81)
	S46= PC[Out]=addr+4                                         PC-Hold(S41,S44,S45)
	S47= CtrlGPR=0                                              Premise(F88)
	S48= GPR[rT]=a                                              GPR-Hold(S43,S47)

POST	S46= PC[Out]=addr+4                                         PC-Hold(S41,S44,S45)
	S48= GPR[rT]=a                                              GPR-Hold(S43,S47)

