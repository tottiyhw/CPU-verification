
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S0= PC[Out]=addr                                            Premise(F1)
	S0= IMem[{pid,addr}]={0,rS,rT,rD,0,11}                      Premise(F2)
	S0= GPR[rS]=a                                               Premise(F3)
	S0= GPR[rT]=b                                               Premise(F4)

IF	S0= CP0.ASID=pid                                            ASID-Read(S0)
	S0= PC.Out=addr                                             PC-Out(S0)
	S0= PC.Out=>IMem.RAddr                                      Premise(F5)
	S0= IMem.RAddr=addr                                         Path(S0,S0)
	S0= CP0.ASID=>IMem.ASID                                     Premise(F6)
	S0= IMem.ASID=pid                                           Path(S0,S0)
	S0= IMem.Out={0,rS,rT,rD,0,11}                              IMem-Read(S0,S0,S0)
	S0= IMem.Out=>IR.In                                         Premise(F7)
	S0= IR.In={0,rS,rT,rD,0,11}                                 Path(S0,S0)
	S0= IR.Out31_26=>CU.Op                                      Premise(F8)
	S0= IR.Out25_21=>GPR.RReg1                                  Premise(F9)
	S0= IR.Out20_16=>GPR.RReg2                                  Premise(F10)
	S0= IR.Out5_0=>CU.IRFunc                                    Premise(F11)
	S0= GPR.Rdata1=>A.In                                        Premise(F12)
	S0= GPR.Rdata2=>B.In                                        Premise(F13)
	S0= B.Out=>CMPU.B                                           Premise(F14)
	S0= CMPU.zero=>ConditionReg.In                              Premise(F15)
	S0= IR.Out15_11=>GPR.WReg                                   Premise(F16)
	S0= A.Out=>GPR.WData                                        Premise(F17)
	S0= ConditionReg.Out=>CU.zero                               Premise(F18)
	S0= CtrlPC=0                                                Premise(F19)
	S0= CtrlPCInc=1                                             Premise(F20)
	S0= PC[Out]=addr+4                                          PC-Inc(S0,S0,S0)
	S0= PC[CIA]=addr                                            PC-Inc(S0,S0,S0)
	S0= CtrlIMem=0                                              Premise(F21)
	S0= IMem[{pid,addr}]={0,rS,rT,rD,0,11}                      IMem-Hold(S0,S0)
	S0= CtrlASIDIn=0                                            Premise(F22)
	S0= CtrlCP0=0                                               Premise(F23)
	S0= CP0[ASID]=pid                                           CP0-Hold(S0,S0)
	S0= CtrlEPCIn=0                                             Premise(F24)
	S0= CtrlExCodeIn=0                                          Premise(F25)
	S0= CtrlIR=1                                                Premise(F26)
	S0= [IR]={0,rS,rT,rD,0,11}                                  IR-Write(S0,S0)
	S0= CtrlGPR=0                                               Premise(F27)
	S0= GPR[rS]=a                                               GPR-Hold(S0,S0)
	S0= GPR[rT]=b                                               GPR-Hold(S0,S0)
	S0= CtrlA=0                                                 Premise(F28)
	S0= CtrlB=0                                                 Premise(F29)
	S0= CtrlConditionReg=0                                      Premise(F30)

ID	S0= PC.Out=addr+4                                           PC-Out(S0)
	S0= PC.CIA=addr                                             PC-Out(S0)
	S0= PC.CIA31_28=addr[31:28]                                 PC-Out(S0)
	S0= CP0.ASID=pid                                            ASID-Read(S0)
	S0= IR.Out={0,rS,rT,rD,0,11}                                IR-Out(S0)
	S0= IR.Out31_26=0                                           IR-Out(S0)
	S0= IR.Out25_21=rS                                          IR-Out(S0)
	S0= IR.Out20_16=rT                                          IR-Out(S0)
	S0= IR.Out15_11=rD                                          IR-Out(S0)
	S0= IR.Out10_6=0                                            IR-Out(S0)
	S0= IR.Out5_0=11                                            IR-Out(S0)
	S0= PC.Out=>IMem.RAddr                                      Premise(F31)
	S0= IMem.RAddr=addr+4                                       Path(S0,S0)
	S0= CP0.ASID=>IMem.ASID                                     Premise(F32)
	S0= IMem.ASID=pid                                           Path(S0,S0)
	S0= IMem.Out=>IR.In                                         Premise(F33)
	S0= IR.Out31_26=>CU.Op                                      Premise(F34)
	S0= CU.Op=0                                                 Path(S0,S0)
	S0= IR.Out25_21=>GPR.RReg1                                  Premise(F35)
	S0= GPR.RReg1=rS                                            Path(S0,S0)
	S0= GPR.Rdata1=a                                            GPR-Read(S0,S0)
	S0= IR.Out20_16=>GPR.RReg2                                  Premise(F36)
	S0= GPR.RReg2=rT                                            Path(S0,S0)
	S0= GPR.Rdata2=b                                            GPR-Read(S0,S0)
	S0= IR.Out5_0=>CU.IRFunc                                    Premise(F37)
	S0= CU.IRFunc=11                                            Path(S0,S0)
	S0= GPR.Rdata1=>A.In                                        Premise(F38)
	S0= A.In=a                                                  Path(S0,S0)
	S0= GPR.Rdata2=>B.In                                        Premise(F39)
	S0= B.In=b                                                  Path(S0,S0)
	S0= B.Out=>CMPU.B                                           Premise(F40)
	S0= CMPU.zero=>ConditionReg.In                              Premise(F41)
	S0= IR.Out15_11=>GPR.WReg                                   Premise(F42)
	S0= GPR.WReg=rD                                             Path(S0,S0)
	S0= A.Out=>GPR.WData                                        Premise(F43)
	S0= ConditionReg.Out=>CU.zero                               Premise(F44)
	S0= CtrlPC=0                                                Premise(F45)
	S0= CtrlPCInc=0                                             Premise(F46)
	S0= PC[CIA]=addr                                            PC-Hold(S0,S0)
	S0= PC[Out]=addr+4                                          PC-Hold(S0,S0,S0)
	S0= CtrlIMem=0                                              Premise(F47)
	S0= IMem[{pid,addr}]={0,rS,rT,rD,0,11}                      IMem-Hold(S0,S0)
	S0= CtrlASIDIn=0                                            Premise(F48)
	S0= CtrlCP0=0                                               Premise(F49)
	S0= CP0[ASID]=pid                                           CP0-Hold(S0,S0)
	S0= CtrlEPCIn=0                                             Premise(F50)
	S0= CtrlExCodeIn=0                                          Premise(F51)
	S0= CtrlIR=0                                                Premise(F52)
	S0= [IR]={0,rS,rT,rD,0,11}                                  IR-Hold(S0,S0)
	S0= CtrlGPR=0                                               Premise(F53)
	S0= GPR[rS]=a                                               GPR-Hold(S0,S0)
	S0= GPR[rT]=b                                               GPR-Hold(S0,S0)
	S0= CtrlA=1                                                 Premise(F54)
	S0= [A]=a                                                   A-Write(S0,S0)
	S0= CtrlB=1                                                 Premise(F55)
	S0= [B]=b                                                   B-Write(S0,S0)
	S0= CtrlConditionReg=0                                      Premise(F56)

EX	S0= PC.CIA=addr                                             PC-Out(S0)
	S0= PC.CIA31_28=addr[31:28]                                 PC-Out(S0)
	S0= PC.Out=addr+4                                           PC-Out(S0)
	S0= CP0.ASID=pid                                            ASID-Read(S0)
	S0= IR.Out={0,rS,rT,rD,0,11}                                IR-Out(S0)
	S0= IR.Out31_26=0                                           IR-Out(S0)
	S0= IR.Out25_21=rS                                          IR-Out(S0)
	S0= IR.Out20_16=rT                                          IR-Out(S0)
	S0= IR.Out15_11=rD                                          IR-Out(S0)
	S0= IR.Out10_6=0                                            IR-Out(S0)
	S0= IR.Out5_0=11                                            IR-Out(S0)
	S0= A.Out=a                                                 A-Out(S0)
	S0= A.Out1_0={a}[1:0]                                       A-Out(S0)
	S0= A.Out4_0={a}[4:0]                                       A-Out(S0)
	S0= B.Out=b                                                 B-Out(S0)
	S0= B.Out1_0={b}[1:0]                                       B-Out(S0)
	S0= B.Out4_0={b}[4:0]                                       B-Out(S0)
	S0= PC.Out=>IMem.RAddr                                      Premise(F57)
	S0= IMem.RAddr=addr+4                                       Path(S0,S0)
	S0= CP0.ASID=>IMem.ASID                                     Premise(F58)
	S0= IMem.ASID=pid                                           Path(S0,S0)
	S0= IMem.Out=>IR.In                                         Premise(F59)
	S0= IR.Out31_26=>CU.Op                                      Premise(F60)
	S0= CU.Op=0                                                 Path(S0,S0)
	S0= IR.Out25_21=>GPR.RReg1                                  Premise(F61)
	S0= GPR.RReg1=rS                                            Path(S0,S0)
	S0= GPR.Rdata1=a                                            GPR-Read(S0,S0)
	S0= IR.Out20_16=>GPR.RReg2                                  Premise(F62)
	S0= GPR.RReg2=rT                                            Path(S0,S0)
	S0= GPR.Rdata2=b                                            GPR-Read(S0,S0)
	S0= IR.Out5_0=>CU.IRFunc                                    Premise(F63)
	S0= CU.IRFunc=11                                            Path(S0,S0)
	S0= GPR.Rdata1=>A.In                                        Premise(F64)
	S0= A.In=a                                                  Path(S0,S0)
	S0= GPR.Rdata2=>B.In                                        Premise(F65)
	S0= B.In=b                                                  Path(S0,S0)
	S0= CMPU.A=32'b0                                            Premise(F66)
	S0= B.Out=>CMPU.B                                           Premise(F67)
	S0= CMPU.B=b                                                Path(S0,S0)
	S0= CMPU.Func=6'b000011                                     Premise(F68)
	S0= CMPU.Out=CompareS(32'b0,b)                              CMPU-CMPS(S0,S0)
	S0= CMPU.zero=CompareS(32'b0,b)                             CMPU-CMPS(S0,S0)
	S0= CMPU.gt=CompareS(32'b0,b)                               CMPU-CMPS(S0,S0)
	S0= CMPU.lt=CompareS(32'b0,b)                               CMPU-CMPS(S0,S0)
	S0= CMPU.zero=>ConditionReg.In                              Premise(F69)
	S0= ConditionReg.In=CompareS(32'b0,b)                       Path(S0,S0)
	S0= IR.Out15_11=>GPR.WReg                                   Premise(F70)
	S0= GPR.WReg=rD                                             Path(S0,S0)
	S0= A.Out=>GPR.WData                                        Premise(F71)
	S0= GPR.WData=a                                             Path(S0,S0)
	S0= ConditionReg.Out=>CU.zero                               Premise(F72)
	S0= CtrlPC=0                                                Premise(F73)
	S0= CtrlPCInc=0                                             Premise(F74)
	S0= PC[CIA]=addr                                            PC-Hold(S0,S0)
	S0= PC[Out]=addr+4                                          PC-Hold(S0,S0,S0)
	S0= CtrlIMem=0                                              Premise(F75)
	S0= IMem[{pid,addr}]={0,rS,rT,rD,0,11}                      IMem-Hold(S0,S0)
	S0= CtrlASIDIn=0                                            Premise(F76)
	S0= CtrlCP0=0                                               Premise(F77)
	S0= CP0[ASID]=pid                                           CP0-Hold(S0,S0)
	S0= CtrlEPCIn=0                                             Premise(F78)
	S0= CtrlExCodeIn=0                                          Premise(F79)
	S0= CtrlIR=0                                                Premise(F80)
	S0= [IR]={0,rS,rT,rD,0,11}                                  IR-Hold(S0,S0)
	S0= CtrlGPR=0                                               Premise(F81)
	S0= GPR[rS]=a                                               GPR-Hold(S0,S0)
	S0= GPR[rT]=b                                               GPR-Hold(S0,S0)
	S0= CtrlA=0                                                 Premise(F82)
	S0= [A]=a                                                   A-Hold(S0,S0)
	S0= CtrlB=0                                                 Premise(F83)
	S0= [B]=b                                                   B-Hold(S0,S0)
	S0= CtrlConditionReg=1                                      Premise(F84)
	S0= [ConditionReg]=CompareS(32'b0,b)                        ConditionReg-Write(S0,S0)

MEM	S0= PC.CIA=addr                                             PC-Out(S0)
	S0= PC.CIA31_28=addr[31:28]                                 PC-Out(S0)
	S0= PC.Out=addr+4                                           PC-Out(S0)
	S0= CP0.ASID=pid                                            ASID-Read(S0)
	S0= IR.Out={0,rS,rT,rD,0,11}                                IR-Out(S0)
	S0= IR.Out31_26=0                                           IR-Out(S0)
	S0= IR.Out25_21=rS                                          IR-Out(S0)
	S0= IR.Out20_16=rT                                          IR-Out(S0)
	S0= IR.Out15_11=rD                                          IR-Out(S0)
	S0= IR.Out10_6=0                                            IR-Out(S0)
	S0= IR.Out5_0=11                                            IR-Out(S0)
	S0= A.Out=a                                                 A-Out(S0)
	S0= A.Out1_0={a}[1:0]                                       A-Out(S0)
	S0= A.Out4_0={a}[4:0]                                       A-Out(S0)
	S0= B.Out=b                                                 B-Out(S0)
	S0= B.Out1_0={b}[1:0]                                       B-Out(S0)
	S0= B.Out4_0={b}[4:0]                                       B-Out(S0)
	S0= ConditionReg.Out=CompareS(32'b0,b)                      ConditionReg-Out(S0)
	S0= ConditionReg.Out1_0={CompareS(32'b0,b)}[1:0]            ConditionReg-Out(S0)
	S0= ConditionReg.Out4_0={CompareS(32'b0,b)}[4:0]            ConditionReg-Out(S0)
	S0= PC.Out=>IMem.RAddr                                      Premise(F85)
	S0= IMem.RAddr=addr+4                                       Path(S0,S0)
	S0= CP0.ASID=>IMem.ASID                                     Premise(F86)
	S0= IMem.ASID=pid                                           Path(S0,S0)
	S0= IMem.Out=>IR.In                                         Premise(F87)
	S0= IR.Out31_26=>CU.Op                                      Premise(F88)
	S0= CU.Op=0                                                 Path(S0,S0)
	S0= IR.Out25_21=>GPR.RReg1                                  Premise(F89)
	S0= GPR.RReg1=rS                                            Path(S0,S0)
	S0= GPR.Rdata1=a                                            GPR-Read(S0,S0)
	S0= IR.Out20_16=>GPR.RReg2                                  Premise(F90)
	S0= GPR.RReg2=rT                                            Path(S0,S0)
	S0= GPR.Rdata2=b                                            GPR-Read(S0,S0)
	S0= IR.Out5_0=>CU.IRFunc                                    Premise(F91)
	S0= CU.IRFunc=11                                            Path(S0,S0)
	S0= GPR.Rdata1=>A.In                                        Premise(F92)
	S0= A.In=a                                                  Path(S0,S0)
	S0= GPR.Rdata2=>B.In                                        Premise(F93)
	S0= B.In=b                                                  Path(S0,S0)
	S0= B.Out=>CMPU.B                                           Premise(F94)
	S0= CMPU.B=b                                                Path(S0,S0)
	S0= CMPU.zero=>ConditionReg.In                              Premise(F95)
	S0= IR.Out15_11=>GPR.WReg                                   Premise(F96)
	S0= GPR.WReg=rD                                             Path(S0,S0)
	S0= A.Out=>GPR.WData                                        Premise(F97)
	S0= GPR.WData=a                                             Path(S0,S0)
	S0= ConditionReg.Out=>CU.zero                               Premise(F98)
	S0= CU.zero=CompareS(32'b0,b)                               Path(S0,S0)
	S0= CtrlPC=0                                                Premise(F99)
	S0= CtrlPCInc=0                                             Premise(F100)
	S0= PC[CIA]=addr                                            PC-Hold(S0,S0)
	S0= PC[Out]=addr+4                                          PC-Hold(S0,S0,S0)
	S0= CtrlIMem=0                                              Premise(F101)
	S0= IMem[{pid,addr}]={0,rS,rT,rD,0,11}                      IMem-Hold(S0,S0)
	S0= CtrlASIDIn=0                                            Premise(F102)
	S0= CtrlCP0=0                                               Premise(F103)
	S0= CP0[ASID]=pid                                           CP0-Hold(S0,S0)
	S0= CtrlEPCIn=0                                             Premise(F104)
	S0= CtrlExCodeIn=0                                          Premise(F105)
	S0= CtrlIR=0                                                Premise(F106)
	S0= [IR]={0,rS,rT,rD,0,11}                                  IR-Hold(S0,S0)
	S0= CtrlGPR=0                                               Premise(F107)
	S0= GPR[rS]=a                                               GPR-Hold(S0,S0)
	S0= GPR[rT]=b                                               GPR-Hold(S0,S0)
	S0= CtrlA=0                                                 Premise(F108)
	S0= [A]=a                                                   A-Hold(S0,S0)
	S0= CtrlB=0                                                 Premise(F109)
	S0= [B]=b                                                   B-Hold(S0,S0)
	S0= CtrlConditionReg=0                                      Premise(F110)
	S0= [ConditionReg]=CompareS(32'b0,b)                        ConditionReg-Hold(S0,S0)

WB	S0= PC.CIA=addr                                             PC-Out(S0)
	S0= PC.CIA31_28=addr[31:28]                                 PC-Out(S0)
	S0= PC.Out=addr+4                                           PC-Out(S0)
	S0= CP0.ASID=pid                                            ASID-Read(S0)
	S0= IR.Out={0,rS,rT,rD,0,11}                                IR-Out(S0)
	S0= IR.Out31_26=0                                           IR-Out(S0)
	S0= IR.Out25_21=rS                                          IR-Out(S0)
	S0= IR.Out20_16=rT                                          IR-Out(S0)
	S0= IR.Out15_11=rD                                          IR-Out(S0)
	S0= IR.Out10_6=0                                            IR-Out(S0)
	S0= IR.Out5_0=11                                            IR-Out(S0)
	S0= A.Out=a                                                 A-Out(S0)
	S0= A.Out1_0={a}[1:0]                                       A-Out(S0)
	S0= A.Out4_0={a}[4:0]                                       A-Out(S0)
	S0= B.Out=b                                                 B-Out(S0)
	S0= B.Out1_0={b}[1:0]                                       B-Out(S0)
	S0= B.Out4_0={b}[4:0]                                       B-Out(S0)
	S0= ConditionReg.Out=CompareS(32'b0,b)                      ConditionReg-Out(S0)
	S0= ConditionReg.Out1_0={CompareS(32'b0,b)}[1:0]            ConditionReg-Out(S0)
	S0= ConditionReg.Out4_0={CompareS(32'b0,b)}[4:0]            ConditionReg-Out(S0)
	S0= PC.Out=>IMem.RAddr                                      Premise(F111)
	S0= IMem.RAddr=addr+4                                       Path(S0,S0)
	S0= CP0.ASID=>IMem.ASID                                     Premise(F112)
	S0= IMem.ASID=pid                                           Path(S0,S0)
	S0= IMem.Out=>IR.In                                         Premise(F113)
	S0= IR.Out31_26=>CU.Op                                      Premise(F114)
	S0= CU.Op=0                                                 Path(S0,S0)
	S0= IR.Out25_21=>GPR.RReg1                                  Premise(F115)
	S0= GPR.RReg1=rS                                            Path(S0,S0)
	S0= GPR.Rdata1=a                                            GPR-Read(S0,S0)
	S0= IR.Out20_16=>GPR.RReg2                                  Premise(F116)
	S0= GPR.RReg2=rT                                            Path(S0,S0)
	S0= GPR.Rdata2=b                                            GPR-Read(S0,S0)
	S0= IR.Out5_0=>CU.IRFunc                                    Premise(F117)
	S0= CU.IRFunc=11                                            Path(S0,S0)
	S0= GPR.Rdata1=>A.In                                        Premise(F118)
	S0= A.In=a                                                  Path(S0,S0)
	S0= GPR.Rdata2=>B.In                                        Premise(F119)
	S0= B.In=b                                                  Path(S0,S0)
	S0= B.Out=>CMPU.B                                           Premise(F120)
	S0= CMPU.B=b                                                Path(S0,S0)
	S0= CMPU.zero=>ConditionReg.In                              Premise(F121)
	S0= IR.Out15_11=>GPR.WReg                                   Premise(F122)
	S0= GPR.WReg=rD                                             Path(S0,S0)
	S0= A.Out=>GPR.WData                                        Premise(F123)
	S0= GPR.WData=a                                             Path(S0,S0)
	S0= ConditionReg.Out=>CU.zero                               Premise(F124)
	S0= CU.zero=CompareS(32'b0,b)                               Path(S0,S0)
	S0= CtrlPC=0                                                Premise(F125)
	S0= CtrlPCInc=0                                             Premise(F126)
	S0= PC[CIA]=addr                                            PC-Hold(S0,S0)
	S0= PC[Out]=addr+4                                          PC-Hold(S0,S0,S0)
	S0= CtrlIMem=0                                              Premise(F127)
	S0= IMem[{pid,addr}]={0,rS,rT,rD,0,11}                      IMem-Hold(S0,S0)
	S0= CtrlASIDIn=0                                            Premise(F128)
	S0= CtrlCP0=0                                               Premise(F129)
	S0= CP0[ASID]=pid                                           CP0-Hold(S0,S0)
	S0= CtrlEPCIn=0                                             Premise(F130)
	S0= CtrlExCodeIn=0                                          Premise(F131)
	S0= CtrlIR=0                                                Premise(F132)
	S0= [IR]={0,rS,rT,rD,0,11}                                  IR-Hold(S0,S0)
	S0= CtrlGPR=1                                               Premise(F133)
	S0= GPR[rD]=a                                               GPR-Write(S0,S0,S0)
	S0= CtrlA=0                                                 Premise(F134)
	S0= [A]=a                                                   A-Hold(S0,S0)
	S0= CtrlB=0                                                 Premise(F135)
	S0= [B]=b                                                   B-Hold(S0,S0)
	S0= CtrlConditionReg=0                                      Premise(F136)
	S0= [ConditionReg]=CompareS(32'b0,b)                        ConditionReg-Hold(S0,S0)

POST	S0= PC[CIA]=addr                                            PC-Hold(S0,S0)
	S0= PC[Out]=addr+4                                          PC-Hold(S0,S0,S0)
	S0= IMem[{pid,addr}]={0,rS,rT,rD,0,11}                      IMem-Hold(S0,S0)
	S0= CP0[ASID]=pid                                           CP0-Hold(S0,S0)
	S0= [IR]={0,rS,rT,rD,0,11}                                  IR-Hold(S0,S0)
	S0= GPR[rD]=a                                               GPR-Write(S0,S0,S0)
	S0= [A]=a                                                   A-Hold(S0,S0)
	S0= [B]=b                                                   B-Hold(S0,S0)
	S0= [ConditionReg]=CompareS(32'b0,b)                        ConditionReg-Hold(S0,S0)

