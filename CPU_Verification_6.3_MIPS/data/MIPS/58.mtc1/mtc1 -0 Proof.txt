
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={17,4,rT,rD,0}                         Premise(F2)
	S3= GPR[rT]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            ASID-Read(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= PC.Out=>IMem.RAddr                                      Premise(F4)
	S7= IMem.RAddr=addr                                         Path(S5,S6)
	S8= CP0.ASID=>IMem.ASID                                     Premise(F5)
	S9= IMem.ASID=pid                                           Path(S4,S8)
	S10= IMem.Out={17,4,rT,rD,0}                                IMem-Read(S9,S7,S2)
	S11= IMem.Out=>IR.In                                        Premise(F6)
	S12= IR.In={17,4,rT,rD,0}                                   Path(S10,S11)
	S13= CtrlPC=0                                               Premise(F13)
	S14= CtrlPCInc=1                                            Premise(F14)
	S15= PC[Out]=addr+4                                         PC-Inc(S1,S13,S14)
	S16= CtrlIR=1                                               Premise(F20)
	S17= [IR]={17,4,rT,rD,0}                                    IR-Write(S12,S16)
	S18= CtrlGPR=0                                              Premise(F21)
	S19= GPR[rT]=a                                              GPR-Hold(S3,S18)

ID	S20= IR.Out20_16=rT                                         IR-Out(S17)
	S21= IR.Out20_16=>GPR.RReg1                                 Premise(F29)
	S22= GPR.RReg1=rT                                           Path(S20,S21)
	S23= GPR.Rdata1=a                                           GPR-Read(S22,S19)
	S24= GPR.Rdata1=>A.In                                       Premise(F30)
	S25= A.In=a                                                 Path(S23,S24)
	S26= CtrlPC=0                                               Premise(F33)
	S27= CtrlPCInc=0                                            Premise(F34)
	S28= PC[Out]=addr+4                                         PC-Hold(S15,S26,S27)
	S29= CtrlIR=0                                               Premise(F40)
	S30= [IR]={17,4,rT,rD,0}                                    IR-Hold(S17,S29)
	S31= CtrlA=1                                                Premise(F42)
	S32= [A]=a                                                  A-Write(S25,S31)

EX	S33= IR.Out15_11=rD                                         IR-Out(S30)
	S34= A.Out=a                                                A-Out(S32)
	S35= IR.Out15_11=>CP1.WReg                                  Premise(F51)
	S36= CP1.WReg=rD                                            Path(S33,S35)
	S37= A.Out=>CP1.Wdata                                       Premise(F52)
	S38= CP1.Wdata=a                                            Path(S34,S37)
	S39= CtrlPC=0                                               Premise(F53)
	S40= CtrlPCInc=0                                            Premise(F54)
	S41= PC[Out]=addr+4                                         PC-Hold(S28,S39,S40)
	S42= CtrlCP1=1                                              Premise(F63)
	S43= CP1[rD]=a                                              CP1-Write(S36,S38,S42)

MEM	S44= CtrlPC=0                                               Premise(F73)
	S45= CtrlPCInc=0                                            Premise(F74)
	S46= PC[Out]=addr+4                                         PC-Hold(S41,S44,S45)
	S47= CtrlCP1=0                                              Premise(F83)
	S48= CP1[rD]=a                                              CP1-Hold(S43,S47)

WB	S49= CtrlPC=0                                               Premise(F93)
	S50= CtrlPCInc=0                                            Premise(F94)
	S51= PC[Out]=addr+4                                         PC-Hold(S46,S49,S50)
	S52= CtrlCP1=0                                              Premise(F103)
	S53= CP1[rD]=a                                              CP1-Hold(S48,S52)

POST	S51= PC[Out]=addr+4                                         PC-Hold(S46,S49,S50)
	S53= CP1[rD]=a                                              CP1-Hold(S48,S52)

