
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S0= PC[Out]=addr                                            Premise(F1)
	S0= IMem[{pid,addr}]={40,rS,rT,offset}                      Premise(F2)
	S0= GPR[rS]=base                                            Premise(F3)
	S0= GPR[rT]=a                                               Premise(F4)

IF	S0= CP0.ASID=pid                                            ASID-Read(S0)
	S0= PC.Out=addr                                             PC-Out(S0)
	S0= PC.Out=>IMem.RAddr                                      Premise(F5)
	S0= IMem.RAddr=addr                                         Path(S0,S0)
	S0= CP0.ASID=>IMem.ASID                                     Premise(F6)
	S0= IMem.ASID=pid                                           Path(S0,S0)
	S0= IMem.Out={40,rS,rT,offset}                              IMem-Read(S0,S0,S0)
	S0= IMem.Out=>IR.In                                         Premise(F7)
	S0= IR.In={40,rS,rT,offset}                                 Path(S0,S0)
	S0= IR.Out31_26=>CU.Op                                      Premise(F8)
	S0= IR.Out25_21=>GPR.RReg1                                  Premise(F9)
	S0= IR.Out15_0=>IMMEXT.In                                   Premise(F10)
	S0= GPR.Rdata1=>A.In                                        Premise(F11)
	S0= IMMEXT.Out=>B.In                                        Premise(F12)
	S0= A.Out=>ALU.A                                            Premise(F13)
	S0= B.Out=>ALU.B                                            Premise(F14)
	S0= ALU.Out=>ALUOut.In                                      Premise(F15)
	S0= IR.Out20_16=>GPR.RReg2                                  Premise(F16)
	S0= GPR.Rdata2=>MemDataSel.In                               Premise(F17)
	S0= ALU.Out1_0=>MemDataSel.Addr                             Premise(F18)
	S0= MemDataSel.Out=>DR.In                                   Premise(F19)
	S0= DR.Out=>DMem.WData                                      Premise(F20)
	S0= CP0.ASID=>DMem.ASID                                     Premise(F21)
	S0= DMem.ASID=pid                                           Path(S0,S0)
	S0= ALUOut.Out=>DMem.WAddr                                  Premise(F22)
	S0= CtrlPC=0                                                Premise(F23)
	S0= CtrlPCInc=1                                             Premise(F24)
	S0= PC[Out]=addr+4                                          PC-Inc(S0,S0,S0)
	S0= PC[CIA]=addr                                            PC-Inc(S0,S0,S0)
	S0= CtrlIMem=0                                              Premise(F25)
	S0= IMem[{pid,addr}]={40,rS,rT,offset}                      IMem-Hold(S0,S0)
	S0= CtrlASIDIn=0                                            Premise(F26)
	S0= CtrlCP0=0                                               Premise(F27)
	S0= CP0[ASID]=pid                                           CP0-Hold(S0,S0)
	S0= CtrlEPCIn=0                                             Premise(F28)
	S0= CtrlExCodeIn=0                                          Premise(F29)
	S0= CtrlIR=1                                                Premise(F30)
	S0= [IR]={40,rS,rT,offset}                                  IR-Write(S0,S0)
	S0= CtrlGPR=0                                               Premise(F31)
	S0= GPR[rS]=base                                            GPR-Hold(S0,S0)
	S0= GPR[rT]=a                                               GPR-Hold(S0,S0)
	S0= CtrlA=0                                                 Premise(F32)
	S0= CtrlB=0                                                 Premise(F33)
	S0= CtrlALUOut=0                                            Premise(F34)
	S0= CtrlDR=0                                                Premise(F35)
	S0= CtrlDMem=0                                              Premise(F36)
	S0= CtrlDMem8Word=0                                         Premise(F37)

ID	S0= PC.Out=addr+4                                           PC-Out(S0)
	S0= PC.CIA=addr                                             PC-Out(S0)
	S0= PC.CIA31_28=addr[31:28]                                 PC-Out(S0)
	S0= CP0.ASID=pid                                            ASID-Read(S0)
	S0= IR.Out={40,rS,rT,offset}                                IR-Out(S0)
	S0= IR.Out31_26=40                                          IR-Out(S0)
	S0= IR.Out25_21=rS                                          IR-Out(S0)
	S0= IR.Out20_16=rT                                          IR-Out(S0)
	S0= IR.Out15_0=offset                                       IR-Out(S0)
	S0= PC.Out=>IMem.RAddr                                      Premise(F38)
	S0= IMem.RAddr=addr+4                                       Path(S0,S0)
	S0= CP0.ASID=>IMem.ASID                                     Premise(F39)
	S0= IMem.ASID=pid                                           Path(S0,S0)
	S0= IMem.Out=>IR.In                                         Premise(F40)
	S0= IR.Out31_26=>CU.Op                                      Premise(F41)
	S0= CU.Op=40                                                Path(S0,S0)
	S0= CU.Func=alu_add                                         CU(S0)
	S0= CU.MemDataSelFunc=mds_lhz                               CU(S0)
	S0= IR.Out25_21=>GPR.RReg1                                  Premise(F42)
	S0= GPR.RReg1=rS                                            Path(S0,S0)
	S0= GPR.Rdata1=base                                         GPR-Read(S0,S0)
	S0= IR.Out15_0=>IMMEXT.In                                   Premise(F43)
	S0= IMMEXT.In=offset                                        Path(S0,S0)
	S0= IMMEXT.Out={16{offset[15]},offset}                      IMMEXT(S0)
	S0= GPR.Rdata1=>A.In                                        Premise(F44)
	S0= A.In=base                                               Path(S0,S0)
	S0= IMMEXT.Out=>B.In                                        Premise(F45)
	S0= B.In={16{offset[15]},offset}                            Path(S0,S0)
	S0= A.Out=>ALU.A                                            Premise(F46)
	S0= B.Out=>ALU.B                                            Premise(F47)
	S0= ALU.Out=>ALUOut.In                                      Premise(F48)
	S0= IR.Out20_16=>GPR.RReg2                                  Premise(F49)
	S0= GPR.RReg2=rT                                            Path(S0,S0)
	S0= GPR.Rdata2=a                                            GPR-Read(S0,S0)
	S0= GPR.Rdata2=>MemDataSel.In                               Premise(F50)
	S0= MemDataSel.In=a                                         Path(S0,S0)
	S0= ALU.Out1_0=>MemDataSel.Addr                             Premise(F51)
	S0= MemDataSel.Out=>DR.In                                   Premise(F52)
	S0= DR.Out=>DMem.WData                                      Premise(F53)
	S0= CP0.ASID=>DMem.ASID                                     Premise(F54)
	S0= DMem.ASID=pid                                           Path(S0,S0)
	S0= ALUOut.Out=>DMem.WAddr                                  Premise(F55)
	S0= CtrlPC=0                                                Premise(F56)
	S0= CtrlPCInc=0                                             Premise(F57)
	S0= PC[CIA]=addr                                            PC-Hold(S0,S0)
	S0= PC[Out]=addr+4                                          PC-Hold(S0,S0,S0)
	S0= CtrlIMem=0                                              Premise(F58)
	S0= IMem[{pid,addr}]={40,rS,rT,offset}                      IMem-Hold(S0,S0)
	S0= CtrlASIDIn=0                                            Premise(F59)
	S0= CtrlCP0=0                                               Premise(F60)
	S0= CP0[ASID]=pid                                           CP0-Hold(S0,S0)
	S0= CtrlEPCIn=0                                             Premise(F61)
	S0= CtrlExCodeIn=0                                          Premise(F62)
	S0= CtrlIR=0                                                Premise(F63)
	S0= [IR]={40,rS,rT,offset}                                  IR-Hold(S0,S0)
	S0= CtrlGPR=0                                               Premise(F64)
	S0= GPR[rS]=base                                            GPR-Hold(S0,S0)
	S0= GPR[rT]=a                                               GPR-Hold(S0,S0)
	S0= CtrlA=1                                                 Premise(F65)
	S0= [A]=base                                                A-Write(S0,S0)
	S0= CtrlB=1                                                 Premise(F66)
	S0= [B]={16{offset[15]},offset}                             B-Write(S0,S0)
	S0= CtrlALUOut=0                                            Premise(F67)
	S0= CtrlDR=0                                                Premise(F68)
	S0= CtrlDMem=0                                              Premise(F69)
	S0= CtrlDMem8Word=0                                         Premise(F70)

EX	S0= PC.CIA=addr                                             PC-Out(S0)
	S0= PC.CIA31_28=addr[31:28]                                 PC-Out(S0)
	S0= PC.Out=addr+4                                           PC-Out(S0)
	S0= CP0.ASID=pid                                            ASID-Read(S0)
	S0= IR.Out={40,rS,rT,offset}                                IR-Out(S0)
	S0= IR.Out31_26=40                                          IR-Out(S0)
	S0= IR.Out25_21=rS                                          IR-Out(S0)
	S0= IR.Out20_16=rT                                          IR-Out(S0)
	S0= IR.Out15_0=offset                                       IR-Out(S0)
	S0= A.Out=base                                              A-Out(S0)
	S0= A.Out1_0={base}[1:0]                                    A-Out(S0)
	S0= A.Out4_0={base}[4:0]                                    A-Out(S0)
	S0= B.Out={16{offset[15]},offset}                           B-Out(S0)
	S0= B.Out1_0={{16{offset[15]},offset}}[1:0]                 B-Out(S0)
	S0= B.Out4_0={{16{offset[15]},offset}}[4:0]                 B-Out(S0)
	S0= PC.Out=>IMem.RAddr                                      Premise(F71)
	S0= IMem.RAddr=addr+4                                       Path(S0,S0)
	S0= CP0.ASID=>IMem.ASID                                     Premise(F72)
	S0= IMem.ASID=pid                                           Path(S0,S0)
	S0= IMem.Out=>IR.In                                         Premise(F73)
	S0= IR.Out31_26=>CU.Op                                      Premise(F74)
	S0= CU.Op=40                                                Path(S0,S0)
	S0= CU.Func=alu_add                                         CU(S0)
	S0= CU.MemDataSelFunc=mds_lhz                               CU(S0)
	S0= IR.Out25_21=>GPR.RReg1                                  Premise(F75)
	S0= GPR.RReg1=rS                                            Path(S0,S0)
	S0= GPR.Rdata1=base                                         GPR-Read(S0,S0)
	S0= IR.Out15_0=>IMMEXT.In                                   Premise(F76)
	S0= IMMEXT.In=offset                                        Path(S0,S0)
	S0= IMMEXT.Out={16{offset[15]},offset}                      IMMEXT(S0)
	S0= GPR.Rdata1=>A.In                                        Premise(F77)
	S0= A.In=base                                               Path(S0,S0)
	S0= IMMEXT.Out=>B.In                                        Premise(F78)
	S0= B.In={16{offset[15]},offset}                            Path(S0,S0)
	S0= A.Out=>ALU.A                                            Premise(F79)
	S0= ALU.A=base                                              Path(S0,S0)
	S0= B.Out=>ALU.B                                            Premise(F80)
	S0= ALU.B={16{offset[15]},offset}                           Path(S0,S0)
	S0= ALU.Func=6'b010010                                      Premise(F81)
	S0= ALU.Out=base+{16{offset[15]},offset}                    ALU(S0,S0)
	S0= ALU.Out1_0={base+{16{offset[15]},offset}}[1:0]          ALU(S0,S0)
	S0= ALU.CMP=Compare0(base+{16{offset[15]},offset})          ALU(S0,S0)
	S0= ALU.OV=OverFlow(base+{16{offset[15]},offset})           ALU(S0,S0)
	S0= ALU.CA=Carry(base+{16{offset[15]},offset})              ALU(S0,S0)
	S0= ALU.Out=>ALUOut.In                                      Premise(F82)
	S0= ALUOut.In=base+{16{offset[15]},offset}                  Path(S0,S0)
	S0= IR.Out20_16=>GPR.RReg2                                  Premise(F83)
	S0= GPR.RReg2=rT                                            Path(S0,S0)
	S0= GPR.Rdata2=a                                            GPR-Read(S0,S0)
	S0= GPR.Rdata2=>MemDataSel.In                               Premise(F84)
	S0= MemDataSel.In=a                                         Path(S0,S0)
	S0= ALU.Out1_0=>MemDataSel.Addr                             Premise(F85)
	S0= MemDataSel.Addr={base+{16{offset[15]},offset}}[1:0]     Path(S0,S0)
	S0= MemDataSel.Func=6'b010000                               Premise(F86)
	S0= MemDataSel.Out={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}MemDataSel(S0,S0)
	S0= MemDataSel.Out=>DR.In                                   Premise(F87)
	S0= DR.In={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}Path(S0,S0)
	S0= DR.Out=>DMem.WData                                      Premise(F88)
	S0= CP0.ASID=>DMem.ASID                                     Premise(F89)
	S0= DMem.ASID=pid                                           Path(S0,S0)
	S0= ALUOut.Out=>DMem.WAddr                                  Premise(F90)
	S0= CtrlPC=0                                                Premise(F91)
	S0= CtrlPCInc=0                                             Premise(F92)
	S0= PC[CIA]=addr                                            PC-Hold(S0,S0)
	S0= PC[Out]=addr+4                                          PC-Hold(S0,S0,S0)
	S0= CtrlIMem=0                                              Premise(F93)
	S0= IMem[{pid,addr}]={40,rS,rT,offset}                      IMem-Hold(S0,S0)
	S0= CtrlASIDIn=0                                            Premise(F94)
	S0= CtrlCP0=0                                               Premise(F95)
	S0= CP0[ASID]=pid                                           CP0-Hold(S0,S0)
	S0= CtrlEPCIn=0                                             Premise(F96)
	S0= CtrlExCodeIn=0                                          Premise(F97)
	S0= CtrlIR=0                                                Premise(F98)
	S0= [IR]={40,rS,rT,offset}                                  IR-Hold(S0,S0)
	S0= CtrlGPR=0                                               Premise(F99)
	S0= GPR[rS]=base                                            GPR-Hold(S0,S0)
	S0= GPR[rT]=a                                               GPR-Hold(S0,S0)
	S0= CtrlA=0                                                 Premise(F100)
	S0= [A]=base                                                A-Hold(S0,S0)
	S0= CtrlB=0                                                 Premise(F101)
	S0= [B]={16{offset[15]},offset}                             B-Hold(S0,S0)
	S0= CtrlALUOut=1                                            Premise(F102)
	S0= [ALUOut]=base+{16{offset[15]},offset}                   ALUOut-Write(S0,S0)
	S0= CtrlDR=1                                                Premise(F103)
	S0= [DR]={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DR-Write(S0,S0)
	S0= CtrlDMem=0                                              Premise(F104)
	S0= CtrlDMem8Word=0                                         Premise(F105)

MEM	S0= PC.CIA=addr                                             PC-Out(S0)
	S0= PC.CIA31_28=addr[31:28]                                 PC-Out(S0)
	S0= PC.Out=addr+4                                           PC-Out(S0)
	S0= CP0.ASID=pid                                            ASID-Read(S0)
	S0= IR.Out={40,rS,rT,offset}                                IR-Out(S0)
	S0= IR.Out31_26=40                                          IR-Out(S0)
	S0= IR.Out25_21=rS                                          IR-Out(S0)
	S0= IR.Out20_16=rT                                          IR-Out(S0)
	S0= IR.Out15_0=offset                                       IR-Out(S0)
	S0= A.Out=base                                              A-Out(S0)
	S0= A.Out1_0={base}[1:0]                                    A-Out(S0)
	S0= A.Out4_0={base}[4:0]                                    A-Out(S0)
	S0= B.Out={16{offset[15]},offset}                           B-Out(S0)
	S0= B.Out1_0={{16{offset[15]},offset}}[1:0]                 B-Out(S0)
	S0= B.Out4_0={{16{offset[15]},offset}}[4:0]                 B-Out(S0)
	S0= ALUOut.Out=base+{16{offset[15]},offset}                 ALUOut-Out(S0)
	S0= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]       ALUOut-Out(S0)
	S0= ALUOut.Out4_0={base+{16{offset[15]},offset}}[4:0]       ALUOut-Out(S0)
	S0= DR.Out={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DR-Out(S0)
	S0= DR.Out1_0={{a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}}[1:0]DR-Out(S0)
	S0= DR.Out4_0={{a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}}[4:0]DR-Out(S0)
	S0= PC.Out=>IMem.RAddr                                      Premise(F106)
	S0= IMem.RAddr=addr+4                                       Path(S0,S0)
	S0= CP0.ASID=>IMem.ASID                                     Premise(F107)
	S0= IMem.ASID=pid                                           Path(S0,S0)
	S0= IMem.Out=>IR.In                                         Premise(F108)
	S0= IR.Out31_26=>CU.Op                                      Premise(F109)
	S0= CU.Op=40                                                Path(S0,S0)
	S0= CU.Func=alu_add                                         CU(S0)
	S0= CU.MemDataSelFunc=mds_lhz                               CU(S0)
	S0= IR.Out25_21=>GPR.RReg1                                  Premise(F110)
	S0= GPR.RReg1=rS                                            Path(S0,S0)
	S0= GPR.Rdata1=base                                         GPR-Read(S0,S0)
	S0= IR.Out15_0=>IMMEXT.In                                   Premise(F111)
	S0= IMMEXT.In=offset                                        Path(S0,S0)
	S0= IMMEXT.Out={16{offset[15]},offset}                      IMMEXT(S0)
	S0= GPR.Rdata1=>A.In                                        Premise(F112)
	S0= A.In=base                                               Path(S0,S0)
	S0= IMMEXT.Out=>B.In                                        Premise(F113)
	S0= B.In={16{offset[15]},offset}                            Path(S0,S0)
	S0= A.Out=>ALU.A                                            Premise(F114)
	S0= ALU.A=base                                              Path(S0,S0)
	S0= B.Out=>ALU.B                                            Premise(F115)
	S0= ALU.B={16{offset[15]},offset}                           Path(S0,S0)
	S0= ALU.Out=>ALUOut.In                                      Premise(F116)
	S0= IR.Out20_16=>GPR.RReg2                                  Premise(F117)
	S0= GPR.RReg2=rT                                            Path(S0,S0)
	S0= GPR.Rdata2=a                                            GPR-Read(S0,S0)
	S0= GPR.Rdata2=>MemDataSel.In                               Premise(F118)
	S0= MemDataSel.In=a                                         Path(S0,S0)
	S0= ALU.Out1_0=>MemDataSel.Addr                             Premise(F119)
	S0= MemDataSel.Out=>DR.In                                   Premise(F120)
	S0= DR.Out=>DMem.WData                                      Premise(F121)
	S0= DMem.WData={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}Path(S0,S0)
	S0= CP0.ASID=>DMem.ASID                                     Premise(F122)
	S0= DMem.ASID=pid                                           Path(S0,S0)
	S0= ALUOut.Out=>DMem.WAddr                                  Premise(F123)
	S0= DMem.WAddr=base+{16{offset[15]},offset}                 Path(S0,S0)
	S0= CtrlPC=0                                                Premise(F124)
	S0= CtrlPCInc=0                                             Premise(F125)
	S0= PC[CIA]=addr                                            PC-Hold(S0,S0)
	S0= PC[Out]=addr+4                                          PC-Hold(S0,S0,S0)
	S0= CtrlIMem=0                                              Premise(F126)
	S0= IMem[{pid,addr}]={40,rS,rT,offset}                      IMem-Hold(S0,S0)
	S0= CtrlASIDIn=0                                            Premise(F127)
	S0= CtrlCP0=0                                               Premise(F128)
	S0= CP0[ASID]=pid                                           CP0-Hold(S0,S0)
	S0= CtrlEPCIn=0                                             Premise(F129)
	S0= CtrlExCodeIn=0                                          Premise(F130)
	S0= CtrlIR=0                                                Premise(F131)
	S0= [IR]={40,rS,rT,offset}                                  IR-Hold(S0,S0)
	S0= CtrlGPR=0                                               Premise(F132)
	S0= GPR[rS]=base                                            GPR-Hold(S0,S0)
	S0= GPR[rT]=a                                               GPR-Hold(S0,S0)
	S0= CtrlA=0                                                 Premise(F133)
	S0= [A]=base                                                A-Hold(S0,S0)
	S0= CtrlB=0                                                 Premise(F134)
	S0= [B]={16{offset[15]},offset}                             B-Hold(S0,S0)
	S0= CtrlALUOut=0                                            Premise(F135)
	S0= [ALUOut]=base+{16{offset[15]},offset}                   ALUOut-Hold(S0,S0)
	S0= CtrlDR=0                                                Premise(F136)
	S0= [DR]={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DR-Hold(S0,S0)
	S0= CtrlDMem=1                                              Premise(F137)
	S0= DMem[{pid,base+{16{offset[15]},offset}}]={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DMem-Write(S0,S0,S0,S0)
	S0= CtrlDMem8Word=0                                         Premise(F138)

WB	S0= PC.CIA=addr                                             PC-Out(S0)
	S0= PC.CIA31_28=addr[31:28]                                 PC-Out(S0)
	S0= PC.Out=addr+4                                           PC-Out(S0)
	S0= CP0.ASID=pid                                            ASID-Read(S0)
	S0= IR.Out={40,rS,rT,offset}                                IR-Out(S0)
	S0= IR.Out31_26=40                                          IR-Out(S0)
	S0= IR.Out25_21=rS                                          IR-Out(S0)
	S0= IR.Out20_16=rT                                          IR-Out(S0)
	S0= IR.Out15_0=offset                                       IR-Out(S0)
	S0= A.Out=base                                              A-Out(S0)
	S0= A.Out1_0={base}[1:0]                                    A-Out(S0)
	S0= A.Out4_0={base}[4:0]                                    A-Out(S0)
	S0= B.Out={16{offset[15]},offset}                           B-Out(S0)
	S0= B.Out1_0={{16{offset[15]},offset}}[1:0]                 B-Out(S0)
	S0= B.Out4_0={{16{offset[15]},offset}}[4:0]                 B-Out(S0)
	S0= ALUOut.Out=base+{16{offset[15]},offset}                 ALUOut-Out(S0)
	S0= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]       ALUOut-Out(S0)
	S0= ALUOut.Out4_0={base+{16{offset[15]},offset}}[4:0]       ALUOut-Out(S0)
	S0= DR.Out={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DR-Out(S0)
	S0= DR.Out1_0={{a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}}[1:0]DR-Out(S0)
	S0= DR.Out4_0={{a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}}[4:0]DR-Out(S0)
	S0= PC.Out=>IMem.RAddr                                      Premise(F139)
	S0= IMem.RAddr=addr+4                                       Path(S0,S0)
	S0= CP0.ASID=>IMem.ASID                                     Premise(F140)
	S0= IMem.ASID=pid                                           Path(S0,S0)
	S0= IMem.Out=>IR.In                                         Premise(F141)
	S0= IR.Out31_26=>CU.Op                                      Premise(F142)
	S0= CU.Op=40                                                Path(S0,S0)
	S0= CU.Func=alu_add                                         CU(S0)
	S0= CU.MemDataSelFunc=mds_lhz                               CU(S0)
	S0= IR.Out25_21=>GPR.RReg1                                  Premise(F143)
	S0= GPR.RReg1=rS                                            Path(S0,S0)
	S0= GPR.Rdata1=base                                         GPR-Read(S0,S0)
	S0= IR.Out15_0=>IMMEXT.In                                   Premise(F144)
	S0= IMMEXT.In=offset                                        Path(S0,S0)
	S0= IMMEXT.Out={16{offset[15]},offset}                      IMMEXT(S0)
	S0= GPR.Rdata1=>A.In                                        Premise(F145)
	S0= A.In=base                                               Path(S0,S0)
	S0= IMMEXT.Out=>B.In                                        Premise(F146)
	S0= B.In={16{offset[15]},offset}                            Path(S0,S0)
	S0= A.Out=>ALU.A                                            Premise(F147)
	S0= ALU.A=base                                              Path(S0,S0)
	S0= B.Out=>ALU.B                                            Premise(F148)
	S0= ALU.B={16{offset[15]},offset}                           Path(S0,S0)
	S0= ALU.Out=>ALUOut.In                                      Premise(F149)
	S0= IR.Out20_16=>GPR.RReg2                                  Premise(F150)
	S0= GPR.RReg2=rT                                            Path(S0,S0)
	S0= GPR.Rdata2=a                                            GPR-Read(S0,S0)
	S0= GPR.Rdata2=>MemDataSel.In                               Premise(F151)
	S0= MemDataSel.In=a                                         Path(S0,S0)
	S0= ALU.Out1_0=>MemDataSel.Addr                             Premise(F152)
	S0= MemDataSel.Out=>DR.In                                   Premise(F153)
	S0= DR.Out=>DMem.WData                                      Premise(F154)
	S0= DMem.WData={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}Path(S0,S0)
	S0= CP0.ASID=>DMem.ASID                                     Premise(F155)
	S0= DMem.ASID=pid                                           Path(S0,S0)
	S0= ALUOut.Out=>DMem.WAddr                                  Premise(F156)
	S0= DMem.WAddr=base+{16{offset[15]},offset}                 Path(S0,S0)
	S0= CtrlPC=0                                                Premise(F157)
	S0= CtrlPCInc=0                                             Premise(F158)
	S0= PC[CIA]=addr                                            PC-Hold(S0,S0)
	S0= PC[Out]=addr+4                                          PC-Hold(S0,S0,S0)
	S0= CtrlIMem=0                                              Premise(F159)
	S0= IMem[{pid,addr}]={40,rS,rT,offset}                      IMem-Hold(S0,S0)
	S0= CtrlASIDIn=0                                            Premise(F160)
	S0= CtrlCP0=0                                               Premise(F161)
	S0= CP0[ASID]=pid                                           CP0-Hold(S0,S0)
	S0= CtrlEPCIn=0                                             Premise(F162)
	S0= CtrlExCodeIn=0                                          Premise(F163)
	S0= CtrlIR=0                                                Premise(F164)
	S0= [IR]={40,rS,rT,offset}                                  IR-Hold(S0,S0)
	S0= CtrlGPR=0                                               Premise(F165)
	S0= GPR[rS]=base                                            GPR-Hold(S0,S0)
	S0= GPR[rT]=a                                               GPR-Hold(S0,S0)
	S0= CtrlA=0                                                 Premise(F166)
	S0= [A]=base                                                A-Hold(S0,S0)
	S0= CtrlB=0                                                 Premise(F167)
	S0= [B]={16{offset[15]},offset}                             B-Hold(S0,S0)
	S0= CtrlALUOut=0                                            Premise(F168)
	S0= [ALUOut]=base+{16{offset[15]},offset}                   ALUOut-Hold(S0,S0)
	S0= CtrlDR=0                                                Premise(F169)
	S0= [DR]={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DR-Hold(S0,S0)
	S0= CtrlDMem=0                                              Premise(F170)
	S0= DMem[{pid,base+{16{offset[15]},offset}}]={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DMem-Hold(S0,S0)
	S0= CtrlDMem8Word=0                                         Premise(F171)

POST	S0= PC[CIA]=addr                                            PC-Hold(S0,S0)
	S0= PC[Out]=addr+4                                          PC-Hold(S0,S0,S0)
	S0= IMem[{pid,addr}]={40,rS,rT,offset}                      IMem-Hold(S0,S0)
	S0= CP0[ASID]=pid                                           CP0-Hold(S0,S0)
	S0= [IR]={40,rS,rT,offset}                                  IR-Hold(S0,S0)
	S0= GPR[rS]=base                                            GPR-Hold(S0,S0)
	S0= GPR[rT]=a                                               GPR-Hold(S0,S0)
	S0= [A]=base                                                A-Hold(S0,S0)
	S0= [B]={16{offset[15]},offset}                             B-Hold(S0,S0)
	S0= [ALUOut]=base+{16{offset[15]},offset}                   ALUOut-Hold(S0,S0)
	S0= [DR]={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DR-Hold(S0,S0)
	S0= DMem[{pid,base+{16{offset[15]},offset}}]={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DMem-Hold(S0,S0)

