
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,0,rT,rD,sa,3}                       Premise(F2)
	S3= GPR[rT]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            ASID-Read(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= PC.Out=>IMem.RAddr                                      Premise(F4)
	S7= IMem.RAddr=addr                                         Path(S5,S6)
	S8= CP0.ASID=>IMem.ASID                                     Premise(F5)
	S9= IMem.ASID=pid                                           Path(S4,S8)
	S10= IMem.Out={0,0,rT,rD,sa,3}                              IMem-Read(S9,S7,S2)
	S11= IMem.Out=>IR.In                                        Premise(F6)
	S12= IR.In={0,0,rT,rD,sa,3}                                 Path(S10,S11)
	S13= CtrlPC=0                                               Premise(F16)
	S14= CtrlPCInc=1                                            Premise(F17)
	S15= PC[Out]=addr+4                                         PC-Inc(S1,S13,S14)
	S16= CtrlIR=1                                               Premise(F23)
	S17= [IR]={0,0,rT,rD,sa,3}                                  IR-Write(S12,S16)
	S18= CtrlGPR=0                                              Premise(F24)
	S19= GPR[rT]=a                                              GPR-Hold(S3,S18)

ID	S20= IR.Out20_16=rT                                         IR-Out(S17)
	S21= IR.Out20_16=>GPR.RReg2                                 Premise(F31)
	S22= GPR.RReg2=rT                                           Path(S20,S21)
	S23= GPR.Rdata2=a                                           GPR-Read(S22,S19)
	S24= GPR.Rdata2=>B.In                                       Premise(F33)
	S25= B.In=a                                                 Path(S23,S24)
	S26= CtrlPC=0                                               Premise(F39)
	S27= CtrlPCInc=0                                            Premise(F40)
	S28= PC[Out]=addr+4                                         PC-Hold(S15,S26,S27)
	S29= CtrlIR=0                                               Premise(F46)
	S30= [IR]={0,0,rT,rD,sa,3}                                  IR-Hold(S17,S29)
	S31= CtrlB=1                                                Premise(F48)
	S32= [B]=a                                                  B-Write(S25,S31)

EX	S33= IR.Out10_6=sa                                          IR-Out(S30)
	S34= B.Out=a                                                B-Out(S32)
	S35= IR.Out10_6=>SU.Shamt                                   Premise(F57)
	S36= SU.Shamt=sa                                            Path(S33,S35)
	S37= B.Out=>SU.Data                                         Premise(F58)
	S38= SU.Data=a                                              Path(S34,S37)
	S39= SU.Out=a>>>sa                                          SU(S38,S36)
	S40= SU.Out=>ALUOut.In                                      Premise(F60)
	S41= ALUOut.In=a>>>sa                                       Path(S39,S40)
	S42= CtrlPC=0                                               Premise(F63)
	S43= CtrlPCInc=0                                            Premise(F64)
	S44= PC[Out]=addr+4                                         PC-Hold(S28,S42,S43)
	S45= CtrlIR=0                                               Premise(F70)
	S46= [IR]={0,0,rT,rD,sa,3}                                  IR-Hold(S30,S45)
	S47= CtrlALUOut=1                                           Premise(F73)
	S48= [ALUOut]=a>>>sa                                        ALUOut-Write(S41,S47)

MEM	S49= CtrlPC=0                                               Premise(F86)
	S50= CtrlPCInc=0                                            Premise(F87)
	S51= PC[Out]=addr+4                                         PC-Hold(S44,S49,S50)
	S52= CtrlIR=0                                               Premise(F93)
	S53= [IR]={0,0,rT,rD,sa,3}                                  IR-Hold(S46,S52)
	S54= CtrlALUOut=0                                           Premise(F96)
	S55= [ALUOut]=a>>>sa                                        ALUOut-Hold(S48,S54)

WB	S56= IR.Out15_11=rD                                         IR-Out(S53)
	S57= ALUOut.Out=a>>>sa                                      ALUOut-Out(S55)
	S58= IR.Out15_11=>GPR.WReg                                  Premise(F107)
	S59= GPR.WReg=rD                                            Path(S56,S58)
	S60= ALUOut.Out=>GPR.WData                                  Premise(F108)
	S61= GPR.WData=a>>>sa                                       Path(S57,S60)
	S62= CtrlPC=0                                               Premise(F109)
	S63= CtrlPCInc=0                                            Premise(F110)
	S64= PC[Out]=addr+4                                         PC-Hold(S51,S62,S63)
	S65= CtrlGPR=1                                              Premise(F117)
	S66= GPR[rD]=a>>>sa                                         GPR-Write(S59,S61,S65)

POST	S64= PC[Out]=addr+4                                         PC-Hold(S51,S62,S63)
	S66= GPR[rD]=a>>>sa                                         GPR-Write(S59,S61,S65)

