
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={43,rS,rT,offset}                      Premise(F2)
	S3= GPR[rS]=base                                            Premise(F3)
	S4= GPR[rT]=a                                               Premise(F4)

IF	S5= CP0.ASID=pid                                            ASID-Read(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= PC.Out=>IMem.RAddr                                      Premise(F5)
	S8= IMem.RAddr=addr                                         Path(S6,S7)
	S9= CP0.ASID=>IMem.ASID                                     Premise(F6)
	S10= IMem.ASID=pid                                          Path(S5,S9)
	S11= IMem.Out={43,rS,rT,offset}                             IMem-Read(S10,S8,S2)
	S12= IMem.Out=>IR.In                                        Premise(F7)
	S13= IR.In={43,rS,rT,offset}                                Path(S11,S12)
	S14= CtrlPC=0                                               Premise(F23)
	S15= CtrlPCInc=1                                            Premise(F24)
	S16= PC[Out]=addr+4                                         PC-Inc(S1,S14,S15)
	S17= CtrlCP0=0                                              Premise(F27)
	S18= CP0[ASID]=pid                                          CP0-Hold(S0,S17)
	S19= CtrlIR=1                                               Premise(F30)
	S20= [IR]={43,rS,rT,offset}                                 IR-Write(S13,S19)
	S21= CtrlGPR=0                                              Premise(F31)
	S22= GPR[rS]=base                                           GPR-Hold(S3,S21)
	S23= GPR[rT]=a                                              GPR-Hold(S4,S21)

ID	S24= IR.Out25_21=rS                                         IR-Out(S20)
	S25= IR.Out15_0=offset                                      IR-Out(S20)
	S26= IR.Out25_21=>GPR.RReg1                                 Premise(F42)
	S27= GPR.RReg1=rS                                           Path(S24,S26)
	S28= GPR.Rdata1=base                                        GPR-Read(S27,S22)
	S29= IR.Out15_0=>IMMEXT.In                                  Premise(F43)
	S30= IMMEXT.In=offset                                       Path(S25,S29)
	S31= IMMEXT.Out={16{offset[15]},offset}                     IMMEXT(S30)
	S32= GPR.Rdata1=>A.In                                       Premise(F44)
	S33= A.In=base                                              Path(S28,S32)
	S34= IMMEXT.Out=>B.In                                       Premise(F45)
	S35= B.In={16{offset[15]},offset}                           Path(S31,S34)
	S36= CtrlPC=0                                               Premise(F56)
	S37= CtrlPCInc=0                                            Premise(F57)
	S38= PC[Out]=addr+4                                         PC-Hold(S16,S36,S37)
	S39= CtrlCP0=0                                              Premise(F60)
	S40= CP0[ASID]=pid                                          CP0-Hold(S18,S39)
	S41= CtrlIR=0                                               Premise(F63)
	S42= [IR]={43,rS,rT,offset}                                 IR-Hold(S20,S41)
	S43= CtrlGPR=0                                              Premise(F64)
	S44= GPR[rT]=a                                              GPR-Hold(S23,S43)
	S45= CtrlA=1                                                Premise(F65)
	S46= [A]=base                                               A-Write(S33,S45)
	S47= CtrlB=1                                                Premise(F66)
	S48= [B]={16{offset[15]},offset}                            B-Write(S35,S47)

EX	S49= IR.Out20_16=rT                                         IR-Out(S42)
	S50= A.Out=base                                             A-Out(S46)
	S51= B.Out={16{offset[15]},offset}                          B-Out(S48)
	S52= A.Out=>ALU.A                                           Premise(F79)
	S53= ALU.A=base                                             Path(S50,S52)
	S54= B.Out=>ALU.B                                           Premise(F80)
	S55= ALU.B={16{offset[15]},offset}                          Path(S51,S54)
	S56= ALU.Out=base+{16{offset[15]},offset}                   ALU(S53,S55)
	S57= ALU.Out1_0={base+{16{offset[15]},offset}}[1:0]         ALU(S53,S55)
	S58= ALU.Out=>ALUOut.In                                     Premise(F82)
	S59= ALUOut.In=base+{16{offset[15]},offset}                 Path(S56,S58)
	S60= IR.Out20_16=>GPR.RReg2                                 Premise(F83)
	S61= GPR.RReg2=rT                                           Path(S49,S60)
	S62= GPR.Rdata2=a                                           GPR-Read(S61,S44)
	S63= GPR.Rdata2=>MemDataSel.In                              Premise(F84)
	S64= MemDataSel.In=a                                        Path(S62,S63)
	S65= ALU.Out1_0=>MemDataSel.Addr                            Premise(F85)
	S66= MemDataSel.Addr={base+{16{offset[15]},offset}}[1:0]    Path(S57,S65)
	S67= MemDataSel.Out=a                                       MemDataSel(S64,S66)
	S68= MemDataSel.Out=>DR.In                                  Premise(F87)
	S69= DR.In=a                                                Path(S67,S68)
	S70= CtrlPC=0                                               Premise(F91)
	S71= CtrlPCInc=0                                            Premise(F92)
	S72= PC[Out]=addr+4                                         PC-Hold(S38,S70,S71)
	S73= CtrlCP0=0                                              Premise(F95)
	S74= CP0[ASID]=pid                                          CP0-Hold(S40,S73)
	S75= CtrlALUOut=1                                           Premise(F102)
	S76= [ALUOut]=base+{16{offset[15]},offset}                  ALUOut-Write(S59,S75)
	S77= CtrlDR=1                                               Premise(F103)
	S78= [DR]=a                                                 DR-Write(S69,S77)

MEM	S79= CP0.ASID=pid                                           ASID-Read(S74)
	S80= ALUOut.Out=base+{16{offset[15]},offset}                ALUOut-Out(S76)
	S81= DR.Out=a                                               DR-Out(S78)
	S82= DR.Out=>DMem.WData                                     Premise(F121)
	S83= DMem.WData=a                                           Path(S81,S82)
	S84= CP0.ASID=>DMem.ASID                                    Premise(F122)
	S85= DMem.ASID=pid                                          Path(S79,S84)
	S86= ALUOut.Out=>DMem.WAddr                                 Premise(F123)
	S87= DMem.WAddr=base+{16{offset[15]},offset}                Path(S80,S86)
	S88= CtrlPC=0                                               Premise(F124)
	S89= CtrlPCInc=0                                            Premise(F125)
	S90= PC[Out]=addr+4                                         PC-Hold(S72,S88,S89)
	S91= CtrlDMem=1                                             Premise(F137)
	S92= DMem[{pid,base+{16{offset[15]},offset}}]=a             DMem-Write(S85,S87,S83,S91)

WB	S93= CtrlPC=0                                               Premise(F157)
	S94= CtrlPCInc=0                                            Premise(F158)
	S95= PC[Out]=addr+4                                         PC-Hold(S90,S93,S94)
	S96= CtrlDMem=0                                             Premise(F170)
	S97= DMem[{pid,base+{16{offset[15]},offset}}]=a             DMem-Hold(S92,S96)

POST	S95= PC[Out]=addr+4                                         PC-Hold(S90,S93,S94)
	S97= DMem[{pid,base+{16{offset[15]},offset}}]=a             DMem-Hold(S92,S96)

