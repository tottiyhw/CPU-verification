
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rs,rt,code,54}                      Premise(F2)
	S3= GPR[rs]=a                                               Premise(F3)
	S4= GPR[rt]=b                                               Premise(F4)

IF	S5= CP0.ASID=pid                                            ASID-Read(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= PC.Out=>IMem.RAddr                                      Premise(F5)
	S8= IMem.RAddr=addr                                         Path(S6,S7)
	S9= CP0.ASID=>IMem.ASID                                     Premise(F6)
	S10= IMem.ASID=pid                                          Path(S5,S9)
	S11= IMem.Out={0,rs,rt,code,54}                             IMem-Read(S10,S8,S2)
	S12= IMem.Out=>IR.In                                        Premise(F7)
	S13= IR.In={0,rs,rt,code,54}                                Path(S11,S12)
	S14= CtrlPC=0                                               Premise(F21)
	S15= CtrlPCInc=1                                            Premise(F22)
	S16= PC[Out]=addr+4                                         PC-Inc(S1,S14,S15)
	S17= CtrlCP0=0                                              Premise(F25)
	S18= CP0[ASID]=pid                                          CP0-Hold(S0,S17)
	S19= CtrlIR=1                                               Premise(F28)
	S20= [IR]={0,rs,rt,code,54}                                 IR-Write(S13,S19)
	S21= CtrlGPR=0                                              Premise(F29)
	S22= GPR[rs]=a                                              GPR-Hold(S3,S21)
	S23= GPR[rt]=b                                              GPR-Hold(S4,S21)

ID	S24= IR.Out25_21=rs                                         IR-Out(S20)
	S25= IR.Out20_16=rt                                         IR-Out(S20)
	S26= IR.Out25_21=>GPR.RReg1                                 Premise(F38)
	S27= GPR.RReg1=rs                                           Path(S24,S26)
	S28= GPR.Rdata1=a                                           GPR-Read(S27,S22)
	S29= IR.Out20_16=>GPR.RReg2                                 Premise(F39)
	S30= GPR.RReg2=rt                                           Path(S25,S29)
	S31= GPR.Rdata2=b                                           GPR-Read(S30,S23)
	S32= GPR.Rdata1=>A.In                                       Premise(F41)
	S33= A.In=a                                                 Path(S28,S32)
	S34= GPR.Rdata2=>B.In                                       Premise(F42)
	S35= B.In=b                                                 Path(S31,S34)
	S36= CtrlPC=0                                               Premise(F50)
	S37= CtrlPCInc=0                                            Premise(F51)
	S38= PC[Out]=addr+4                                         PC-Hold(S16,S36,S37)
	S39= CtrlCP0=0                                              Premise(F54)
	S40= CP0[ASID]=pid                                          CP0-Hold(S18,S39)
	S41= CtrlA=1                                                Premise(F59)
	S42= [A]=a                                                  A-Write(S33,S41)
	S43= CtrlB=1                                                Premise(F60)
	S44= [B]=b                                                  B-Write(S35,S43)

EX	S45= A.Out=a                                                A-Out(S42)
	S46= B.Out=b                                                B-Out(S44)
	S47= A.Out=>CMPU.A                                          Premise(F72)
	S48= CMPU.A=a                                               Path(S45,S47)
	S49= B.Out=>CMPU.B                                          Premise(F73)
	S50= CMPU.B=b                                               Path(S46,S49)
	S51= CMPU.zero=CompareS(a,b)                                CMPU-CMPS(S48,S50)
	S52= CMPU.zero=>ConditionReg.In                             Premise(F75)
	S53= ConditionReg.In=CompareS(a,b)                          Path(S51,S52)
	S54= CtrlPC=0                                               Premise(F80)
	S55= CtrlPCInc=0                                            Premise(F81)
	S56= PC[Out]=addr+4                                         PC-Hold(S38,S54,S55)
	S57= CtrlCP0=0                                              Premise(F84)
	S58= CP0[ASID]=pid                                          CP0-Hold(S40,S57)
	S59= CtrlConditionReg=1                                     Premise(F91)
	S60= [ConditionReg]=CompareS(a,b)                           ConditionReg-Write(S53,S59)

MEM	S61= PC.Out=addr+4                                          PC-Out(S56)
	S62= CP0.ASID=pid                                           ASID-Read(S58)
	S63= PC.Out=>CP0.EPCIn                                      Premise(F105)
	S64= CP0.EPCIn=addr+4                                       Path(S61,S63)
	S65= CP0.ExCodeIn=5'h0d                                     Premise(F106)
	S66= CP0.ASID=>PIDReg.In                                    Premise(F108)
	S67= PIDReg.In=pid                                          Path(S62,S66)
	S68= CtrlEPCIn=1                                            Premise(F115)
	S69= CP0[EPC]=addr+4                                        CP0-Write-EPC(S64,S68)
	S70= CtrlExCodeIn=1                                         Premise(F116)
	S71= CP0[ExCode]=5'h0d                                      CP0-Write-ExCode(S65,S70)
	S72= CtrlConditionReg=0                                     Premise(F121)
	S73= [ConditionReg]=CompareS(a,b)                           ConditionReg-Hold(S60,S72)
	S74= CtrlPIDReg=1                                           Premise(F122)
	S75= [PIDReg]=pid                                           PIDReg-Write(S67,S74)

WB	S76= CtrlCP0=0                                              Premise(F143)
	S77= CP0[EPC]=addr+4                                        CP0-Hold(S69,S76)
	S78= CP0[ExCode]=5'h0d                                      CP0-Hold(S71,S76)
	S79= CtrlConditionReg=0                                     Premise(F150)
	S80= [ConditionReg]=CompareS(a,b)                           ConditionReg-Hold(S73,S79)
	S81= CtrlPIDReg=0                                           Premise(F151)
	S82= [PIDReg]=pid                                           PIDReg-Hold(S75,S81)

POST	S77= CP0[EPC]=addr+4                                        CP0-Hold(S69,S76)
	S78= CP0[ExCode]=5'h0d                                      CP0-Hold(S71,S76)
	S80= [ConditionReg]=CompareS(a,b)                           ConditionReg-Hold(S73,S79)
	S82= [PIDReg]=pid                                           PIDReg-Hold(S75,S81)

