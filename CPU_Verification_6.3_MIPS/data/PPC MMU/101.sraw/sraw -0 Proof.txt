
------------------------------------- Proof -------------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rS,rA,rB,1584}                     Premise(F2)
	S3= ICache[addr]={31,rS,rA,rB,1584}                         Premise(F3)
	S4= GPRegs[rS]=a                                            Premise(F4)
	S5= GPRegs[rB]=b                                            Premise(F5)

IF	S6= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S7= PC.Out=addr                                             PC-Out(S1)
	S8= PIDReg.Out=>IMMU.PID                                    Premise(F6)
	S9= IMMU.PID=pid                                            Path(S6,S8)
	S10= PC.Out=>IMMU.IEA                                       Premise(F7)
	S11= IMMU.IEA=addr                                          Path(S7,S10)
	S12= IMMU.Addr={pid,addr}                                   IMMU-Search(S9,S11)
	S13= IMMU.Addr=>IAddrReg.In                                 Premise(F8)
	S14= IAddrReg.In={pid,addr}                                 Path(S12,S13)
	S15= PC.Out=>ICache.IEA                                     Premise(F10)
	S16= ICache.IEA=addr                                        Path(S7,S15)
	S17= ICache.Out={31,rS,rA,rB,1584}                          ICache-Search(S16,S3)
	S18= ICache.Out=>ICacheReg.In                               Premise(F11)
	S19= ICacheReg.In={31,rS,rA,rB,1584}                        Path(S17,S18)
	S20= CtrlPC=0                                               Premise(F39)
	S21= CtrlPCInc=0                                            Premise(F40)
	S22= PC[Out]=addr                                           PC-Hold(S1,S20,S21)
	S23= CtrlIAddrReg=1                                         Premise(F41)
	S24= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S14,S23)
	S25= CtrlICacheReg=1                                        Premise(F44)
	S26= [ICacheReg]={31,rS,rA,rB,1584}                         ICacheReg-Write(S19,S25)
	S27= CtrlIMem=0                                             Premise(F46)
	S28= IMem[{pid,addr}]={31,rS,rA,rB,1584}                    IMem-Hold(S2,S27)
	S29= CtrlGPRegs=0                                           Premise(F49)
	S30= GPRegs[rS]=a                                           GPRegs-Hold(S4,S29)
	S31= GPRegs[rB]=b                                           GPRegs-Hold(S5,S29)

IMMU	S32= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S24)
	S33= ICacheReg.Out={31,rS,rA,rB,1584}                       ICacheReg-Out(S26)
	S34= IAddrReg.Out=>IMem.RAddr                               Premise(F66)
	S35= IMem.RAddr={pid,addr}                                  Path(S32,S34)
	S36= IMem.Out={31,rS,rA,rB,1584}                            IMem-Read(S35,S28)
	S37= IMem.Out=>IRMux.MemData                                Premise(F67)
	S38= IRMux.MemData={31,rS,rA,rB,1584}                       Path(S36,S37)
	S39= ICacheReg.Out=>IRMux.CacheData                         Premise(F68)
	S40= IRMux.CacheData={31,rS,rA,rB,1584}                     Path(S33,S39)
	S41= IRMux.Out={31,rS,rA,rB,1584}                           IRMux-Select(S38,S40)
	S42= IRMux.Out=>IR.In                                       Premise(F71)
	S43= IR.In={31,rS,rA,rB,1584}                               Path(S41,S42)
	S44= CtrlPC=0                                               Premise(F90)
	S45= CtrlPCInc=1                                            Premise(F91)
	S46= PC[Out]=addr+4                                         PC-Inc(S22,S44,S45)
	S47= CtrlIR=1                                               Premise(F99)
	S48= [IR]={31,rS,rA,rB,1584}                                IR-Write(S43,S47)
	S49= CtrlGPRegs=0                                           Premise(F100)
	S50= GPRegs[rS]=a                                           GPRegs-Hold(S30,S49)
	S51= GPRegs[rB]=b                                           GPRegs-Hold(S31,S49)

ID	S52= IR.Out6_10=rS                                          IR-Out(S48)
	S53= IR.Out16_20=rB                                         IR-Out(S48)
	S54= IR.Out6_10=>GPRegs.RReg1                               Premise(F126)
	S55= GPRegs.RReg1=rS                                        Path(S52,S54)
	S56= GPRegs.Rdata1=a                                        GPRegs-Read(S55,S50)
	S57= IR.Out16_20=>GPRegs.RReg2                              Premise(F127)
	S58= GPRegs.RReg2=rB                                        Path(S53,S57)
	S59= GPRegs.Rdata2=b                                        GPRegs-Read(S58,S51)
	S60= GPRegs.Rdata1=>A.In                                    Premise(F129)
	S61= A.In=a                                                 Path(S56,S60)
	S62= GPRegs.Rdata2=>B.In                                    Premise(F130)
	S63= B.In=b                                                 Path(S59,S62)
	S64= CtrlPC=0                                               Premise(F141)
	S65= CtrlPCInc=0                                            Premise(F142)
	S66= PC[Out]=addr+4                                         PC-Hold(S46,S64,S65)
	S67= CtrlIR=0                                               Premise(F150)
	S68= [IR]={31,rS,rA,rB,1584}                                IR-Hold(S48,S67)
	S69= CtrlA=1                                                Premise(F152)
	S70= [A]=a                                                  A-Write(S61,S69)
	S71= CtrlB=1                                                Premise(F153)
	S72= [B]=b                                                  B-Write(S63,S71)

EX	S73= A.Out=a                                                A-Out(S70)
	S74= B.Out26_31=b[26:31]                                    B-Out(S72)
	S75= A.Out=>SU.Data                                         Premise(F182)
	S76= SU.Data=a                                              Path(S73,S75)
	S77= B.Out26_31=>SU.Shamt                                   Premise(F183)
	S78= SU.Shamt=b[26:31]                                      Path(S74,S77)
	S79= SU.Out=a>>b[26:31]                                     SU(S76,S78)
	S80= SU.CA=Carry(a>>b[26:31])                               SU(S76,S78)
	S81= SU.Out=>ALUOut.In                                      Premise(F185)
	S82= ALUOut.In=a>>b[26:31]                                  Path(S79,S81)
	S83= SU.CA=>CAReg.In                                        Premise(F186)
	S84= CAReg.In=Carry(a>>b[26:31])                            Path(S80,S83)
	S85= CtrlPC=0                                               Premise(F192)
	S86= CtrlPCInc=0                                            Premise(F193)
	S87= PC[Out]=addr+4                                         PC-Hold(S66,S85,S86)
	S88= CtrlIR=0                                               Premise(F201)
	S89= [IR]={31,rS,rA,rB,1584}                                IR-Hold(S68,S88)
	S90= CtrlALUOut=1                                           Premise(F205)
	S91= [ALUOut]=a>>b[26:31]                                   ALUOut-Write(S82,S90)
	S92= CtrlCAReg=1                                            Premise(F206)
	S93= [CAReg]=Carry(a>>b[26:31])                             CAReg-Write(S84,S92)

MEM	S94= CtrlPC=0                                               Premise(F243)
	S95= CtrlPCInc=0                                            Premise(F244)
	S96= PC[Out]=addr+4                                         PC-Hold(S87,S94,S95)
	S97= CtrlIR=0                                               Premise(F252)
	S98= [IR]={31,rS,rA,rB,1584}                                IR-Hold(S89,S97)
	S99= CtrlALUOut=0                                           Premise(F256)
	S100= [ALUOut]=a>>b[26:31]                                  ALUOut-Hold(S91,S99)
	S101= CtrlCAReg=0                                           Premise(F257)
	S102= [CAReg]=Carry(a>>b[26:31])                            CAReg-Hold(S93,S101)

DMMU1	S103= CtrlPC=0                                              Premise(F294)
	S104= CtrlPCInc=0                                           Premise(F295)
	S105= PC[Out]=addr+4                                        PC-Hold(S96,S103,S104)
	S106= CtrlIR=0                                              Premise(F303)
	S107= [IR]={31,rS,rA,rB,1584}                               IR-Hold(S98,S106)
	S108= CtrlALUOut=0                                          Premise(F307)
	S109= [ALUOut]=a>>b[26:31]                                  ALUOut-Hold(S100,S108)
	S110= CtrlCAReg=0                                           Premise(F308)
	S111= [CAReg]=Carry(a>>b[26:31])                            CAReg-Hold(S102,S110)

DMMU2	S112= CtrlPC=0                                              Premise(F345)
	S113= CtrlPCInc=0                                           Premise(F346)
	S114= PC[Out]=addr+4                                        PC-Hold(S105,S112,S113)
	S115= CtrlIR=0                                              Premise(F354)
	S116= [IR]={31,rS,rA,rB,1584}                               IR-Hold(S107,S115)
	S117= CtrlALUOut=0                                          Premise(F358)
	S118= [ALUOut]=a>>b[26:31]                                  ALUOut-Hold(S109,S117)
	S119= CtrlCAReg=0                                           Premise(F359)
	S120= [CAReg]=Carry(a>>b[26:31])                            CAReg-Hold(S111,S119)

WB	S121= IR.Out11_15=rA                                        IR-Out(S116)
	S122= ALUOut.Out=a>>b[26:31]                                ALUOut-Out(S118)
	S123= CAReg.Out=Carry(a>>b[26:31])                          CAReg-Out(S120)
	S124= IR.Out11_15=>GPRegs.WReg                              Premise(F391)
	S125= GPRegs.WReg=rA                                        Path(S121,S124)
	S126= ALUOut.Out=>GPRegs.WData                              Premise(F392)
	S127= GPRegs.WData=a>>b[26:31]                              Path(S122,S126)
	S128= CAReg.Out=>XER.CAIn                                   Premise(F393)
	S129= XER.CAIn=Carry(a>>b[26:31])                           Path(S123,S128)
	S130= CtrlPC=0                                              Premise(F396)
	S131= CtrlPCInc=0                                           Premise(F397)
	S132= PC[Out]=addr+4                                        PC-Hold(S114,S130,S131)
	S133= CtrlGPRegs=1                                          Premise(F406)
	S134= GPRegs[rA]=a>>b[26:31]                                GPRegs-Write(S125,S127,S133)
	S135= CtrlXERCA=1                                           Premise(F413)
	S136= XER[CA]=Carry(a>>b[26:31])                            XER-CA-Write(S129,S135)

POST	S132= PC[Out]=addr+4                                        PC-Hold(S114,S130,S131)
	S134= GPRegs[rA]=a>>b[26:31]                                GPRegs-Write(S125,S127,S133)
	S136= XER[CA]=Carry(a>>b[26:31])                            XER-CA-Write(S129,S135)

