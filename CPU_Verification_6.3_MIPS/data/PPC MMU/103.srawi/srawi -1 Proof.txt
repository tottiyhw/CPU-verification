
------------------------------------- Proof -------------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rS,rA,SH,1648}                     Premise(F2)
	S3= GPRegs[rS]=a                                            Premise(F3)

IF	S4= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= PIDReg.Out=>IMMU.PID                                    Premise(F4)
	S7= IMMU.PID=pid                                            Path(S4,S6)
	S8= PC.Out=>IMMU.IEA                                        Premise(F5)
	S9= IMMU.IEA=addr                                           Path(S5,S8)
	S10= IMMU.Addr={pid,addr}                                   IMMU-Search(S7,S9)
	S11= IMMU.Addr=>IAddrReg.In                                 Premise(F6)
	S12= IAddrReg.In={pid,addr}                                 Path(S10,S11)
	S13= CtrlPC=0                                               Premise(F36)
	S14= CtrlPCInc=0                                            Premise(F37)
	S15= PC[Out]=addr                                           PC-Hold(S1,S13,S14)
	S16= CtrlIAddrReg=1                                         Premise(F38)
	S17= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S12,S16)
	S18= CtrlIMem=0                                             Premise(F43)
	S19= IMem[{pid,addr}]={31,rS,rA,SH,1648}                    IMem-Hold(S2,S18)
	S20= CtrlGPRegs=0                                           Premise(F46)
	S21= GPRegs[rS]=a                                           GPRegs-Hold(S3,S20)

IMMU	S22= PC.Out=addr                                            PC-Out(S15)
	S23= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S17)
	S24= PC.Out=>ICache.IEA                                     Premise(F58)
	S25= ICache.IEA=addr                                        Path(S22,S24)
	S26= IAddrReg.Out=>IMem.RAddr                               Premise(F63)
	S27= IMem.RAddr={pid,addr}                                  Path(S23,S26)
	S28= IMem.Out={31,rS,rA,SH,1648}                            IMem-Read(S27,S19)
	S29= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S27,S19)
	S30= IMem.Out=>IRMux.MemData                                Premise(F64)
	S31= IRMux.MemData={31,rS,rA,SH,1648}                       Path(S28,S30)
	S32= IRMux.Out={31,rS,rA,SH,1648}                           IRMux-Select(S31)
	S33= IRMux.Out=>IR.In                                       Premise(F68)
	S34= IR.In={31,rS,rA,SH,1648}                               Path(S32,S33)
	S35= IMem.MEM8WordOut=>ICache.WData                         Premise(F69)
	S36= ICache.WData=IMemGet8Word({pid,addr})                  Path(S29,S35)
	S37= CtrlPC=0                                               Premise(F86)
	S38= CtrlPCInc=1                                            Premise(F87)
	S39= PC[Out]=addr+4                                         PC-Inc(S15,S37,S38)
	S40= CtrlICache=1                                           Premise(F90)
	S41= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S25,S36,S40)
	S42= CtrlIR=1                                               Premise(F95)
	S43= [IR]={31,rS,rA,SH,1648}                                IR-Write(S34,S42)
	S44= CtrlGPRegs=0                                           Premise(F96)
	S45= GPRegs[rS]=a                                           GPRegs-Hold(S21,S44)

ID	S46= IR.Out6_10=rS                                          IR-Out(S43)
	S47= IR.Out16_20=SH                                         IR-Out(S43)
	S48= IR.Out6_10=>GPRegs.RReg1                               Premise(F122)
	S49= GPRegs.RReg1=rS                                        Path(S46,S48)
	S50= GPRegs.Rdata1=a                                        GPRegs-Read(S49,S45)
	S51= GPRegs.Rdata1=>A.In                                    Premise(F124)
	S52= A.In=a                                                 Path(S50,S51)
	S53= IR.Out16_20=>ShamtReg.In                               Premise(F125)
	S54= ShamtReg.In=SH                                         Path(S47,S53)
	S55= CtrlPC=0                                               Premise(F136)
	S56= CtrlPCInc=0                                            Premise(F137)
	S57= PC[Out]=addr+4                                         PC-Hold(S39,S55,S56)
	S58= CtrlICache=0                                           Premise(F140)
	S59= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S41,S58)
	S60= CtrlIR=0                                               Premise(F145)
	S61= [IR]={31,rS,rA,SH,1648}                                IR-Hold(S43,S60)
	S62= CtrlA=1                                                Premise(F147)
	S63= [A]=a                                                  A-Write(S52,S62)
	S64= CtrlShamtReg=1                                         Premise(F148)
	S65= [ShamtReg]=SH                                          ShamtReg-Write(S54,S64)

EX	S66= A.Out=a                                                A-Out(S63)
	S67= ShamtReg.Out=SH                                        ShamtReg-Out(S65)
	S68= A.Out=>SU.Data                                         Premise(F176)
	S69= SU.Data=a                                              Path(S66,S68)
	S70= ShamtReg.Out=>SU.Shamt                                 Premise(F177)
	S71= SU.Shamt=SH                                            Path(S67,S70)
	S72= SU.Out=a>>SH                                           SU(S69,S71)
	S73= SU.CA=Carry(a>>SH)                                     SU(S69,S71)
	S74= SU.Out=>ALUOut.In                                      Premise(F179)
	S75= ALUOut.In=a>>SH                                        Path(S72,S74)
	S76= SU.CA=>CAReg.In                                        Premise(F180)
	S77= CAReg.In=Carry(a>>SH)                                  Path(S73,S76)
	S78= CtrlPC=0                                               Premise(F186)
	S79= CtrlPCInc=0                                            Premise(F187)
	S80= PC[Out]=addr+4                                         PC-Hold(S57,S78,S79)
	S81= CtrlICache=0                                           Premise(F190)
	S82= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S59,S81)
	S83= CtrlIR=0                                               Premise(F195)
	S84= [IR]={31,rS,rA,SH,1648}                                IR-Hold(S61,S83)
	S85= CtrlALUOut=1                                           Premise(F199)
	S86= [ALUOut]=a>>SH                                         ALUOut-Write(S75,S85)
	S87= CtrlCAReg=1                                            Premise(F200)
	S88= [CAReg]=Carry(a>>SH)                                   CAReg-Write(S77,S87)

MEM	S89= CtrlPC=0                                               Premise(F236)
	S90= CtrlPCInc=0                                            Premise(F237)
	S91= PC[Out]=addr+4                                         PC-Hold(S80,S89,S90)
	S92= CtrlICache=0                                           Premise(F240)
	S93= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S82,S92)
	S94= CtrlIR=0                                               Premise(F245)
	S95= [IR]={31,rS,rA,SH,1648}                                IR-Hold(S84,S94)
	S96= CtrlALUOut=0                                           Premise(F249)
	S97= [ALUOut]=a>>SH                                         ALUOut-Hold(S86,S96)
	S98= CtrlCAReg=0                                            Premise(F250)
	S99= [CAReg]=Carry(a>>SH)                                   CAReg-Hold(S88,S98)

DMMU1	S100= CtrlPC=0                                              Premise(F286)
	S101= CtrlPCInc=0                                           Premise(F287)
	S102= PC[Out]=addr+4                                        PC-Hold(S91,S100,S101)
	S103= CtrlICache=0                                          Premise(F290)
	S104= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S93,S103)
	S105= CtrlIR=0                                              Premise(F295)
	S106= [IR]={31,rS,rA,SH,1648}                               IR-Hold(S95,S105)
	S107= CtrlALUOut=0                                          Premise(F299)
	S108= [ALUOut]=a>>SH                                        ALUOut-Hold(S97,S107)
	S109= CtrlCAReg=0                                           Premise(F300)
	S110= [CAReg]=Carry(a>>SH)                                  CAReg-Hold(S99,S109)

DMMU2	S111= CtrlPC=0                                              Premise(F336)
	S112= CtrlPCInc=0                                           Premise(F337)
	S113= PC[Out]=addr+4                                        PC-Hold(S102,S111,S112)
	S114= CtrlICache=0                                          Premise(F340)
	S115= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S104,S114)
	S116= CtrlIR=0                                              Premise(F345)
	S117= [IR]={31,rS,rA,SH,1648}                               IR-Hold(S106,S116)
	S118= CtrlALUOut=0                                          Premise(F349)
	S119= [ALUOut]=a>>SH                                        ALUOut-Hold(S108,S118)
	S120= CtrlCAReg=0                                           Premise(F350)
	S121= [CAReg]=Carry(a>>SH)                                  CAReg-Hold(S110,S120)

WB	S122= IR.Out11_15=rA                                        IR-Out(S117)
	S123= ALUOut.Out=a>>SH                                      ALUOut-Out(S119)
	S124= CAReg.Out=Carry(a>>SH)                                CAReg-Out(S121)
	S125= IR.Out11_15=>GPRegs.WReg                              Premise(F381)
	S126= GPRegs.WReg=rA                                        Path(S122,S125)
	S127= ALUOut.Out=>GPRegs.WData                              Premise(F382)
	S128= GPRegs.WData=a>>SH                                    Path(S123,S127)
	S129= CAReg.Out=>XER.CAIn                                   Premise(F383)
	S130= XER.CAIn=Carry(a>>SH)                                 Path(S124,S129)
	S131= CtrlPC=0                                              Premise(F386)
	S132= CtrlPCInc=0                                           Premise(F387)
	S133= PC[Out]=addr+4                                        PC-Hold(S113,S131,S132)
	S134= CtrlICache=0                                          Premise(F390)
	S135= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S115,S134)
	S136= CtrlGPRegs=1                                          Premise(F396)
	S137= GPRegs[rA]=a>>SH                                      GPRegs-Write(S126,S128,S136)
	S138= CtrlXERCA=1                                           Premise(F403)
	S139= XER[CA]=Carry(a>>SH)                                  XER-CA-Write(S130,S138)

POST	S133= PC[Out]=addr+4                                        PC-Hold(S113,S131,S132)
	S135= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S115,S134)
	S137= GPRegs[rA]=a>>SH                                      GPRegs-Write(S126,S128,S136)
	S139= XER[CA]=Carry(a>>SH)                                  XER-CA-Write(S130,S138)

