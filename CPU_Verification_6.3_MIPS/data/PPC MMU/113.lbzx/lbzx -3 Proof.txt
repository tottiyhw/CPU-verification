
------------------------------------- Proof -------------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rT,rA,rB,174}                      Premise(F2)
	S3= ICache[addr]={31,rT,rA,rB,174}                          Premise(F3)
	S4= GPRegs[rA]=a                                            Premise(F4)
	S5= GPRegs[rB]=b                                            Premise(F5)
	S6= DMem[{pid,AddrSel(rA,a)+b}]={B1,B2,B3,B4}               Premise(F6)

IF	S7= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S8= PC.Out=addr                                             PC-Out(S1)
	S9= PIDReg.Out=>IMMU.PID                                    Premise(F8)
	S10= IMMU.PID=pid                                           Path(S7,S9)
	S11= PC.Out=>IMMU.IEA                                       Premise(F9)
	S12= IMMU.IEA=addr                                          Path(S8,S11)
	S13= IMMU.Addr={pid,addr}                                   IMMU-Search(S10,S12)
	S14= IMMU.Addr=>IAddrReg.In                                 Premise(F10)
	S15= IAddrReg.In={pid,addr}                                 Path(S13,S14)
	S16= PC.Out=>ICache.IEA                                     Premise(F12)
	S17= ICache.IEA=addr                                        Path(S8,S16)
	S18= ICache.Out={31,rT,rA,rB,174}                           ICache-Search(S17,S3)
	S19= ICache.Out=>ICacheReg.In                               Premise(F13)
	S20= ICacheReg.In={31,rT,rA,rB,174}                         Path(S18,S19)
	S21= CtrlPIDReg=0                                           Premise(F61)
	S22= [PIDReg]=pid                                           PIDReg-Hold(S0,S21)
	S23= CtrlPC=0                                               Premise(F63)
	S24= CtrlPCInc=0                                            Premise(F64)
	S25= PC[Out]=addr                                           PC-Hold(S1,S23,S24)
	S26= CtrlIAddrReg=1                                         Premise(F65)
	S27= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S15,S26)
	S28= CtrlICacheReg=1                                        Premise(F68)
	S29= [ICacheReg]={31,rT,rA,rB,174}                          ICacheReg-Write(S20,S28)
	S30= CtrlIMem=0                                             Premise(F70)
	S31= IMem[{pid,addr}]={31,rT,rA,rB,174}                     IMem-Hold(S2,S30)
	S32= CtrlGPRegs=0                                           Premise(F73)
	S33= GPRegs[rA]=a                                           GPRegs-Hold(S4,S32)
	S34= GPRegs[rB]=b                                           GPRegs-Hold(S5,S32)
	S35= CtrlDMem=0                                             Premise(F84)
	S36= DMem[{pid,AddrSel(rA,a)+b}]={B1,B2,B3,B4}              DMem-Hold(S6,S35)

IMMU	S37= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S27)
	S38= ICacheReg.Out={31,rT,rA,rB,174}                        ICacheReg-Out(S29)
	S39= IAddrReg.Out=>IMem.RAddr                               Premise(F95)
	S40= IMem.RAddr={pid,addr}                                  Path(S37,S39)
	S41= IMem.Out={31,rT,rA,rB,174}                             IMem-Read(S40,S31)
	S42= IMem.Out=>IRMux.MemData                                Premise(F96)
	S43= IRMux.MemData={31,rT,rA,rB,174}                        Path(S41,S42)
	S44= ICacheReg.Out=>IRMux.CacheData                         Premise(F97)
	S45= IRMux.CacheData={31,rT,rA,rB,174}                      Path(S38,S44)
	S46= IRMux.Out={31,rT,rA,rB,174}                            IRMux-Select(S43,S45)
	S47= IRMux.Out=>IR.In                                       Premise(F100)
	S48= IR.In={31,rT,rA,rB,174}                                Path(S46,S47)
	S49= CtrlPIDReg=0                                           Premise(F139)
	S50= [PIDReg]=pid                                           PIDReg-Hold(S22,S49)
	S51= CtrlPC=0                                               Premise(F141)
	S52= CtrlPCInc=1                                            Premise(F142)
	S53= PC[Out]=addr+4                                         PC-Inc(S25,S51,S52)
	S54= CtrlIR=1                                               Premise(F150)
	S55= [IR]={31,rT,rA,rB,174}                                 IR-Write(S48,S54)
	S56= CtrlGPRegs=0                                           Premise(F151)
	S57= GPRegs[rA]=a                                           GPRegs-Hold(S33,S56)
	S58= GPRegs[rB]=b                                           GPRegs-Hold(S34,S56)
	S59= CtrlDMem=0                                             Premise(F162)
	S60= DMem[{pid,AddrSel(rA,a)+b}]={B1,B2,B3,B4}              DMem-Hold(S36,S59)

ID	S61= IR.Out11_15=rA                                         IR-Out(S55)
	S62= IR.Out16_20=rB                                         IR-Out(S55)
	S63= IR.Out11_15=>GPRegs.RReg1                              Premise(F183)
	S64= GPRegs.RReg1=rA                                        Path(S61,S63)
	S65= GPRegs.Rdata1=a                                        GPRegs-Read(S64,S57)
	S66= IR.Out16_20=>GPRegs.RReg2                              Premise(F184)
	S67= GPRegs.RReg2=rB                                        Path(S62,S66)
	S68= GPRegs.Rdata2=b                                        GPRegs-Read(S67,S58)
	S69= IR.Out11_15=>AddrSelMux.Sel                            Premise(F185)
	S70= AddrSelMux.Sel=rA                                      Path(S61,S69)
	S71= GPRegs.Rdata1=>AddrSelMux.Data                         Premise(F186)
	S72= AddrSelMux.Data=a                                      Path(S65,S71)
	S73= AddrSelMux.Out=AddrSel(rA,a)                           AddrSelMux(S70,S72)
	S74= AddrSelMux.Out=>A.In                                   Premise(F187)
	S75= A.In=AddrSel(rA,a)                                     Path(S73,S74)
	S76= GPRegs.Rdata2=>B.In                                    Premise(F188)
	S77= B.In=b                                                 Path(S68,S76)
	S78= CtrlPIDReg=0                                           Premise(F217)
	S79= [PIDReg]=pid                                           PIDReg-Hold(S50,S78)
	S80= CtrlPC=0                                               Premise(F219)
	S81= CtrlPCInc=0                                            Premise(F220)
	S82= PC[Out]=addr+4                                         PC-Hold(S53,S80,S81)
	S83= CtrlIR=0                                               Premise(F228)
	S84= [IR]={31,rT,rA,rB,174}                                 IR-Hold(S55,S83)
	S85= CtrlA=1                                                Premise(F230)
	S86= [A]=AddrSel(rA,a)                                      A-Write(S75,S85)
	S87= CtrlB=1                                                Premise(F231)
	S88= [B]=b                                                  B-Write(S77,S87)
	S89= CtrlDMem=0                                             Premise(F240)
	S90= DMem[{pid,AddrSel(rA,a)+b}]={B1,B2,B3,B4}              DMem-Hold(S60,S89)

EX	S91= A.Out=AddrSel(rA,a)                                    A-Out(S86)
	S92= B.Out=b                                                B-Out(S88)
	S93= A.Out=>ALU.A                                           Premise(F267)
	S94= ALU.A=AddrSel(rA,a)                                    Path(S91,S93)
	S95= B.Out=>ALU.B                                           Premise(F268)
	S96= ALU.B=b                                                Path(S92,S95)
	S97= ALU.Out=AddrSel(rA,a)+b                                ALU(S94,S96)
	S98= ALU.Out=>ALUOut.In                                     Premise(F270)
	S99= ALUOut.In=AddrSel(rA,a)+b                              Path(S97,S98)
	S100= CtrlPIDReg=0                                          Premise(F295)
	S101= [PIDReg]=pid                                          PIDReg-Hold(S79,S100)
	S102= CtrlPC=0                                              Premise(F297)
	S103= CtrlPCInc=0                                           Premise(F298)
	S104= PC[Out]=addr+4                                        PC-Hold(S82,S102,S103)
	S105= CtrlIR=0                                              Premise(F306)
	S106= [IR]={31,rT,rA,rB,174}                                IR-Hold(S84,S105)
	S107= CtrlALUOut=1                                          Premise(F310)
	S108= [ALUOut]=AddrSel(rA,a)+b                              ALUOut-Write(S99,S107)
	S109= CtrlDMem=0                                            Premise(F318)
	S110= DMem[{pid,AddrSel(rA,a)+b}]={B1,B2,B3,B4}             DMem-Hold(S90,S109)

MEM	S111= PIDReg.Out=pid                                        PIDReg-Out(S101)
	S112= ALUOut.Out=AddrSel(rA,a)+b                            ALUOut-Out(S108)
	S113= PIDReg.Out=>DMMU.PID                                  Premise(F349)
	S114= DMMU.PID=pid                                          Path(S111,S113)
	S115= ALUOut.Out=>DMMU.IEA                                  Premise(F350)
	S116= DMMU.IEA=AddrSel(rA,a)+b                              Path(S112,S115)
	S117= DMMU.Addr={pid,AddrSel(rA,a)+b}                       DMMU-Search(S114,S116)
	S118= DMMU.Addr=>DAddrReg.In                                Premise(F351)
	S119= DAddrReg.In={pid,AddrSel(rA,a)+b}                     Path(S117,S118)
	S120= CtrlPC=0                                              Premise(F375)
	S121= CtrlPCInc=0                                           Premise(F376)
	S122= PC[Out]=addr+4                                        PC-Hold(S104,S120,S121)
	S123= CtrlIR=0                                              Premise(F384)
	S124= [IR]={31,rT,rA,rB,174}                                IR-Hold(S106,S123)
	S125= CtrlALUOut=0                                          Premise(F388)
	S126= [ALUOut]=AddrSel(rA,a)+b                              ALUOut-Hold(S108,S125)
	S127= CtrlDAddrReg=1                                        Premise(F390)
	S128= [DAddrReg]={pid,AddrSel(rA,a)+b}                      DAddrReg-Write(S119,S127)
	S129= CtrlDMem=0                                            Premise(F396)
	S130= DMem[{pid,AddrSel(rA,a)+b}]={B1,B2,B3,B4}             DMem-Hold(S110,S129)

DMMU1	S131= CtrlPC=0                                              Premise(F453)
	S132= CtrlPCInc=0                                           Premise(F454)
	S133= PC[Out]=addr+4                                        PC-Hold(S122,S131,S132)
	S134= CtrlIR=0                                              Premise(F462)
	S135= [IR]={31,rT,rA,rB,174}                                IR-Hold(S124,S134)
	S136= CtrlALUOut=0                                          Premise(F466)
	S137= [ALUOut]=AddrSel(rA,a)+b                              ALUOut-Hold(S126,S136)
	S138= CtrlDAddrReg=0                                        Premise(F468)
	S139= [DAddrReg]={pid,AddrSel(rA,a)+b}                      DAddrReg-Hold(S128,S138)
	S140= CtrlDMem=0                                            Premise(F474)
	S141= DMem[{pid,AddrSel(rA,a)+b}]={B1,B2,B3,B4}             DMem-Hold(S130,S140)

DMMU2	S142= ALUOut.Out=AddrSel(rA,a)+b                            ALUOut-Out(S137)
	S143= DAddrReg.Out={pid,AddrSel(rA,a)+b}                    DAddrReg-Out(S139)
	S144= ALUOut.Out=>DCache.IEA                                Premise(F509)
	S145= DCache.IEA=AddrSel(rA,a)+b                            Path(S142,S144)
	S146= DAddrReg.Out=>DMem.RAddr                              Premise(F521)
	S147= DMem.RAddr={pid,AddrSel(rA,a)+b}                      Path(S143,S146)
	S148= DMem.MEM8WordOut=>DCache.WData                        Premise(F522)
	S149= CtrlPC=0                                              Premise(F531)
	S150= CtrlPCInc=0                                           Premise(F532)
	S151= PC[Out]=addr+4                                        PC-Hold(S133,S149,S150)
	S152= CtrlIR=0                                              Premise(F540)
	S153= [IR]={31,rT,rA,rB,174}                                IR-Hold(S135,S152)
	S154= CtrlDCache=1                                          Premise(F548)
	S155= CtrlDMem=0                                            Premise(F552)
	S156= CtrlDMem8Word=0                                       Premise(F553)
	S157= DMem.MEM8WordOut=DMemGet8Word({pid,AddrSel(rA,a)+b})  DMem-Read(S147,S141,S155,S156)
	S158= DCache.WData=DMemGet8Word({pid,AddrSel(rA,a)+b})      Path(S157,S148)
	S159= DCache[line_AddrSel(rA,a)+b]=DMemGet8Word({pid,AddrSel(rA,a)+b})DCache-Write8Word(S145,S158,S154)

WB	S160= IR.Out6_10=rT                                         IR-Out(S153)
	S161= MemDataSel.Out={24'b0,B4}                             MemDataSel()
	S162= MemDataSel.Out=>GPRegs.WData                          Premise(F605)
	S163= GPRegs.WData={24'b0,B4}                               Path(S161,S162)
	S164= IR.Out6_10=>GPRegs.WReg                               Premise(F606)
	S165= GPRegs.WReg=rT                                        Path(S160,S164)
	S166= CtrlPC=0                                              Premise(F609)
	S167= CtrlPCInc=0                                           Premise(F610)
	S168= PC[Out]=addr+4                                        PC-Hold(S151,S166,S167)
	S169= CtrlGPRegs=1                                          Premise(F619)
	S170= GPRegs[rT]={24'b0,B4}                                 GPRegs-Write(S165,S163,S169)
	S171= CtrlDCache=0                                          Premise(F626)
	S172= DCache[line_AddrSel(rA,a)+b]=DMemGet8Word({pid,AddrSel(rA,a)+b})DCache-Hold(S159,S171)

POST	S168= PC[Out]=addr+4                                        PC-Hold(S151,S166,S167)
	S170= GPRegs[rT]={24'b0,B4}                                 GPRegs-Write(S165,S163,S169)
	S172= DCache[line_AddrSel(rA,a)+b]=DMemGet8Word({pid,AddrSel(rA,a)+b})DCache-Hold(S159,S171)

