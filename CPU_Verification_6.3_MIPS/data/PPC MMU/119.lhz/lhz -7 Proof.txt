
------------------------------------- Proof -------------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={40,rT,rA,d}                           Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= DMem[{pid,AddrSel(rA,a)+{16{d[0]},d}}]={B1,B2,B3,B4}    Premise(F4)

IF	S5= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= PIDReg.Out=>IMMU.PID                                    Premise(F6)
	S8= IMMU.PID=pid                                            Path(S5,S7)
	S9= PC.Out=>IMMU.IEA                                        Premise(F7)
	S10= IMMU.IEA=addr                                          Path(S6,S9)
	S11= IMMU.Addr={pid,addr}                                   IMMU-Search(S8,S10)
	S12= IMMU.Addr=>IAddrReg.In                                 Premise(F8)
	S13= IAddrReg.In={pid,addr}                                 Path(S11,S12)
	S14= CtrlPIDReg=0                                           Premise(F58)
	S15= [PIDReg]=pid                                           PIDReg-Hold(S0,S14)
	S16= CtrlPC=0                                               Premise(F60)
	S17= CtrlPCInc=0                                            Premise(F61)
	S18= PC[Out]=addr                                           PC-Hold(S1,S16,S17)
	S19= CtrlIAddrReg=1                                         Premise(F62)
	S20= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S13,S19)
	S21= CtrlIMem=0                                             Premise(F67)
	S22= IMem[{pid,addr}]={40,rT,rA,d}                          IMem-Hold(S2,S21)
	S23= CtrlGPRegs=0                                           Premise(F70)
	S24= GPRegs[rA]=a                                           GPRegs-Hold(S3,S23)
	S25= CtrlDMem=0                                             Premise(F81)
	S26= DMem[{pid,AddrSel(rA,a)+{16{d[0]},d}}]={B1,B2,B3,B4}   DMem-Hold(S4,S25)

IMMU	S27= PC.Out=addr                                            PC-Out(S18)
	S28= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S20)
	S29= PC.Out=>ICache.IEA                                     Premise(F87)
	S30= ICache.IEA=addr                                        Path(S27,S29)
	S31= IAddrReg.Out=>IMem.RAddr                               Premise(F92)
	S32= IMem.RAddr={pid,addr}                                  Path(S28,S31)
	S33= IMem.Out={40,rT,rA,d}                                  IMem-Read(S32,S22)
	S34= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S32,S22)
	S35= IMem.Out=>IRMux.MemData                                Premise(F93)
	S36= IRMux.MemData={40,rT,rA,d}                             Path(S33,S35)
	S37= IRMux.Out={40,rT,rA,d}                                 IRMux-Select(S36)
	S38= IRMux.Out=>IR.In                                       Premise(F97)
	S39= IR.In={40,rT,rA,d}                                     Path(S37,S38)
	S40= IMem.MEM8WordOut=>ICache.WData                         Premise(F98)
	S41= ICache.WData=IMemGet8Word({pid,addr})                  Path(S34,S40)
	S42= CtrlPIDReg=0                                           Premise(F135)
	S43= [PIDReg]=pid                                           PIDReg-Hold(S15,S42)
	S44= CtrlPC=0                                               Premise(F137)
	S45= CtrlPCInc=1                                            Premise(F138)
	S46= PC[Out]=addr+4                                         PC-Inc(S18,S44,S45)
	S47= CtrlICache=1                                           Premise(F141)
	S48= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S30,S41,S47)
	S49= CtrlIR=1                                               Premise(F146)
	S50= [IR]={40,rT,rA,d}                                      IR-Write(S39,S49)
	S51= CtrlGPRegs=0                                           Premise(F147)
	S52= GPRegs[rA]=a                                           GPRegs-Hold(S24,S51)
	S53= CtrlDMem=0                                             Premise(F158)
	S54= DMem[{pid,AddrSel(rA,a)+{16{d[0]},d}}]={B1,B2,B3,B4}   DMem-Hold(S26,S53)

ID	S55= IR.Out11_15=rA                                         IR-Out(S50)
	S56= IR.Out16_31=d                                          IR-Out(S50)
	S57= IR.Out11_15=>GPRegs.RReg1                              Premise(F178)
	S58= GPRegs.RReg1=rA                                        Path(S55,S57)
	S59= GPRegs.Rdata1=a                                        GPRegs-Read(S58,S52)
	S60= IR.Out11_15=>AddrSelMux.Sel                            Premise(F179)
	S61= AddrSelMux.Sel=rA                                      Path(S55,S60)
	S62= GPRegs.Rdata1=>AddrSelMux.Data                         Premise(F180)
	S63= AddrSelMux.Data=a                                      Path(S59,S62)
	S64= AddrSelMux.Out=AddrSel(rA,a)                           AddrSelMux(S61,S63)
	S65= AddrSelMux.Out=>A.In                                   Premise(F181)
	S66= A.In=AddrSel(rA,a)                                     Path(S64,S65)
	S67= IR.Out16_31=>IMMEXT.In                                 Premise(F182)
	S68= IMMEXT.In=d                                            Path(S56,S67)
	S69= IMMEXT.Out={16{d[0]},d}                                IMMEXT(S68)
	S70= IMMEXT.Out=>B.In                                       Premise(F183)
	S71= B.In={16{d[0]},d}                                      Path(S69,S70)
	S72= CtrlPIDReg=0                                           Premise(F212)
	S73= [PIDReg]=pid                                           PIDReg-Hold(S43,S72)
	S74= CtrlPC=0                                               Premise(F214)
	S75= CtrlPCInc=0                                            Premise(F215)
	S76= PC[Out]=addr+4                                         PC-Hold(S46,S74,S75)
	S77= CtrlICache=0                                           Premise(F218)
	S78= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S48,S77)
	S79= CtrlIR=0                                               Premise(F223)
	S80= [IR]={40,rT,rA,d}                                      IR-Hold(S50,S79)
	S81= CtrlA=1                                                Premise(F225)
	S82= [A]=AddrSel(rA,a)                                      A-Write(S66,S81)
	S83= CtrlB=1                                                Premise(F226)
	S84= [B]={16{d[0]},d}                                       B-Write(S71,S83)
	S85= CtrlDMem=0                                             Premise(F235)
	S86= DMem[{pid,AddrSel(rA,a)+{16{d[0]},d}}]={B1,B2,B3,B4}   DMem-Hold(S54,S85)

EX	S87= A.Out=AddrSel(rA,a)                                    A-Out(S82)
	S88= B.Out={16{d[0]},d}                                     B-Out(S84)
	S89= A.Out=>ALU.A                                           Premise(F261)
	S90= ALU.A=AddrSel(rA,a)                                    Path(S87,S89)
	S91= B.Out=>ALU.B                                           Premise(F262)
	S92= ALU.B={16{d[0]},d}                                     Path(S88,S91)
	S93= ALU.Out=AddrSel(rA,a)+{16{d[0]},d}                     ALU(S90,S92)
	S94= ALU.Out=>ALUOut.In                                     Premise(F264)
	S95= ALUOut.In=AddrSel(rA,a)+{16{d[0]},d}                   Path(S93,S94)
	S96= CtrlPIDReg=0                                           Premise(F289)
	S97= [PIDReg]=pid                                           PIDReg-Hold(S73,S96)
	S98= CtrlPC=0                                               Premise(F291)
	S99= CtrlPCInc=0                                            Premise(F292)
	S100= PC[Out]=addr+4                                        PC-Hold(S76,S98,S99)
	S101= CtrlICache=0                                          Premise(F295)
	S102= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S78,S101)
	S103= CtrlIR=0                                              Premise(F300)
	S104= [IR]={40,rT,rA,d}                                     IR-Hold(S80,S103)
	S105= CtrlALUOut=1                                          Premise(F304)
	S106= [ALUOut]=AddrSel(rA,a)+{16{d[0]},d}                   ALUOut-Write(S95,S105)
	S107= CtrlDMem=0                                            Premise(F312)
	S108= DMem[{pid,AddrSel(rA,a)+{16{d[0]},d}}]={B1,B2,B3,B4}  DMem-Hold(S86,S107)

MEM	S109= PIDReg.Out=pid                                        PIDReg-Out(S97)
	S110= ALUOut.Out=AddrSel(rA,a)+{16{d[0]},d}                 ALUOut-Out(S106)
	S111= PIDReg.Out=>DMMU.PID                                  Premise(F342)
	S112= DMMU.PID=pid                                          Path(S109,S111)
	S113= ALUOut.Out=>DMMU.IEA                                  Premise(F343)
	S114= DMMU.IEA=AddrSel(rA,a)+{16{d[0]},d}                   Path(S110,S113)
	S115= DMMU.Addr={pid,AddrSel(rA,a)+{16{d[0]},d}}            DMMU-Search(S112,S114)
	S116= DMMU.Addr=>DAddrReg.In                                Premise(F344)
	S117= DAddrReg.In={pid,AddrSel(rA,a)+{16{d[0]},d}}          Path(S115,S116)
	S118= CtrlPC=0                                              Premise(F368)
	S119= CtrlPCInc=0                                           Premise(F369)
	S120= PC[Out]=addr+4                                        PC-Hold(S100,S118,S119)
	S121= CtrlICache=0                                          Premise(F372)
	S122= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S102,S121)
	S123= CtrlIR=0                                              Premise(F377)
	S124= [IR]={40,rT,rA,d}                                     IR-Hold(S104,S123)
	S125= CtrlALUOut=0                                          Premise(F381)
	S126= [ALUOut]=AddrSel(rA,a)+{16{d[0]},d}                   ALUOut-Hold(S106,S125)
	S127= CtrlDAddrReg=1                                        Premise(F383)
	S128= [DAddrReg]={pid,AddrSel(rA,a)+{16{d[0]},d}}           DAddrReg-Write(S117,S127)
	S129= CtrlDMem=0                                            Premise(F389)
	S130= DMem[{pid,AddrSel(rA,a)+{16{d[0]},d}}]={B1,B2,B3,B4}  DMem-Hold(S108,S129)

DMMU1	S131= CtrlPC=0                                              Premise(F445)
	S132= CtrlPCInc=0                                           Premise(F446)
	S133= PC[Out]=addr+4                                        PC-Hold(S120,S131,S132)
	S134= CtrlICache=0                                          Premise(F449)
	S135= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S122,S134)
	S136= CtrlIR=0                                              Premise(F454)
	S137= [IR]={40,rT,rA,d}                                     IR-Hold(S124,S136)
	S138= CtrlALUOut=0                                          Premise(F458)
	S139= [ALUOut]=AddrSel(rA,a)+{16{d[0]},d}                   ALUOut-Hold(S126,S138)
	S140= CtrlDAddrReg=0                                        Premise(F460)
	S141= [DAddrReg]={pid,AddrSel(rA,a)+{16{d[0]},d}}           DAddrReg-Hold(S128,S140)
	S142= CtrlDMem=0                                            Premise(F466)
	S143= DMem[{pid,AddrSel(rA,a)+{16{d[0]},d}}]={B1,B2,B3,B4}  DMem-Hold(S130,S142)

DMMU2	S144= ALUOut.Out=AddrSel(rA,a)+{16{d[0]},d}                 ALUOut-Out(S139)
	S145= DAddrReg.Out={pid,AddrSel(rA,a)+{16{d[0]},d}}         DAddrReg-Out(S141)
	S146= ALUOut.Out=>DCache.IEA                                Premise(F500)
	S147= DCache.IEA=AddrSel(rA,a)+{16{d[0]},d}                 Path(S144,S146)
	S148= DAddrReg.Out=>DMem.RAddr                              Premise(F512)
	S149= DMem.RAddr={pid,AddrSel(rA,a)+{16{d[0]},d}}           Path(S145,S148)
	S150= DMem.MEM8WordOut=>DCache.WData                        Premise(F513)
	S151= CtrlPC=0                                              Premise(F522)
	S152= CtrlPCInc=0                                           Premise(F523)
	S153= PC[Out]=addr+4                                        PC-Hold(S133,S151,S152)
	S154= CtrlICache=0                                          Premise(F526)
	S155= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S135,S154)
	S156= CtrlIR=0                                              Premise(F531)
	S157= [IR]={40,rT,rA,d}                                     IR-Hold(S137,S156)
	S158= CtrlDCache=1                                          Premise(F539)
	S159= CtrlDMem=0                                            Premise(F543)
	S160= CtrlDMem8Word=0                                       Premise(F544)
	S161= DMem.MEM8WordOut=DMemGet8Word({pid,AddrSel(rA,a)+{16{d[0]},d}})DMem-Read(S149,S143,S159,S160)
	S162= DCache.WData=DMemGet8Word({pid,AddrSel(rA,a)+{16{d[0]},d}})Path(S161,S150)
	S163= DCache[line_AddrSel(rA,a)+{16{d[0]},d}]=DMemGet8Word({pid,AddrSel(rA,a)+{16{d[0]},d}})DCache-Write8Word(S147,S162,S158)

WB	S164= IR.Out6_10=rT                                         IR-Out(S157)
	S165= MemDataSel.Out={16'b0,B3,B4}                          MemDataSel()
	S166= MemDataSel.Out=>GPRegs.WData                          Premise(F595)
	S167= GPRegs.WData={16'b0,B3,B4}                            Path(S165,S166)
	S168= IR.Out6_10=>GPRegs.WReg                               Premise(F596)
	S169= GPRegs.WReg=rT                                        Path(S164,S168)
	S170= CtrlPC=0                                              Premise(F599)
	S171= CtrlPCInc=0                                           Premise(F600)
	S172= PC[Out]=addr+4                                        PC-Hold(S153,S170,S171)
	S173= CtrlICache=0                                          Premise(F603)
	S174= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S155,S173)
	S175= CtrlGPRegs=1                                          Premise(F609)
	S176= GPRegs[rT]={16'b0,B3,B4}                              GPRegs-Write(S169,S167,S175)
	S177= CtrlDCache=0                                          Premise(F616)
	S178= DCache[line_AddrSel(rA,a)+{16{d[0]},d}]=DMemGet8Word({pid,AddrSel(rA,a)+{16{d[0]},d}})DCache-Hold(S163,S177)

POST	S172= PC[Out]=addr+4                                        PC-Hold(S153,S170,S171)
	S174= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S155,S173)
	S176= GPRegs[rT]={16'b0,B3,B4}                              GPRegs-Write(S169,S167,S175)
	S178= DCache[line_AddrSel(rA,a)+{16{d[0]},d}]=DMemGet8Word({pid,AddrSel(rA,a)+{16{d[0]},d}})DCache-Hold(S163,S177)

