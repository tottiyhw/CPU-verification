
------------------------------------- Proof -------------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rT,rA,rB,1068}                     Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= GPRegs[rB]=b                                            Premise(F4)
	S5= DMem[{pid,AddrSel(rA,a)+b}]={B1,B2,B3,B4}               Premise(F5)

IF	S6= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S7= PC.Out=addr                                             PC-Out(S1)
	S8= PIDReg.Out=>IMMU.PID                                    Premise(F7)
	S9= IMMU.PID=pid                                            Path(S6,S8)
	S10= PC.Out=>IMMU.IEA                                       Premise(F8)
	S11= IMMU.IEA=addr                                          Path(S7,S10)
	S12= IMMU.Addr={pid,addr}                                   IMMU-Search(S9,S11)
	S13= IMMU.Addr=>IAddrReg.In                                 Premise(F9)
	S14= IAddrReg.In={pid,addr}                                 Path(S12,S13)
	S15= CtrlPIDReg=0                                           Premise(F60)
	S16= [PIDReg]=pid                                           PIDReg-Hold(S0,S15)
	S17= CtrlPC=0                                               Premise(F62)
	S18= CtrlPCInc=0                                            Premise(F63)
	S19= PC[Out]=addr                                           PC-Hold(S1,S17,S18)
	S20= CtrlIAddrReg=1                                         Premise(F64)
	S21= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S14,S20)
	S22= CtrlIMem=0                                             Premise(F69)
	S23= IMem[{pid,addr}]={31,rT,rA,rB,1068}                    IMem-Hold(S2,S22)
	S24= CtrlGPRegs=0                                           Premise(F72)
	S25= GPRegs[rA]=a                                           GPRegs-Hold(S3,S24)
	S26= GPRegs[rB]=b                                           GPRegs-Hold(S4,S24)
	S27= CtrlDMem=0                                             Premise(F83)
	S28= DMem[{pid,AddrSel(rA,a)+b}]={B1,B2,B3,B4}              DMem-Hold(S5,S27)

IMMU	S29= PC.Out=addr                                            PC-Out(S19)
	S30= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S21)
	S31= PC.Out=>ICache.IEA                                     Premise(F89)
	S32= ICache.IEA=addr                                        Path(S29,S31)
	S33= IAddrReg.Out=>IMem.RAddr                               Premise(F94)
	S34= IMem.RAddr={pid,addr}                                  Path(S30,S33)
	S35= IMem.Out={31,rT,rA,rB,1068}                            IMem-Read(S34,S23)
	S36= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S34,S23)
	S37= IMem.Out=>IRMux.MemData                                Premise(F95)
	S38= IRMux.MemData={31,rT,rA,rB,1068}                       Path(S35,S37)
	S39= IRMux.Out={31,rT,rA,rB,1068}                           IRMux-Select(S38)
	S40= IRMux.Out=>IR.In                                       Premise(F99)
	S41= IR.In={31,rT,rA,rB,1068}                               Path(S39,S40)
	S42= IMem.MEM8WordOut=>ICache.WData                         Premise(F100)
	S43= ICache.WData=IMemGet8Word({pid,addr})                  Path(S36,S42)
	S44= CtrlPIDReg=0                                           Premise(F138)
	S45= [PIDReg]=pid                                           PIDReg-Hold(S16,S44)
	S46= CtrlPC=0                                               Premise(F140)
	S47= CtrlPCInc=1                                            Premise(F141)
	S48= PC[Out]=addr+4                                         PC-Inc(S19,S46,S47)
	S49= CtrlICache=1                                           Premise(F144)
	S50= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S32,S43,S49)
	S51= CtrlIR=1                                               Premise(F149)
	S52= [IR]={31,rT,rA,rB,1068}                                IR-Write(S41,S51)
	S53= CtrlGPRegs=0                                           Premise(F150)
	S54= GPRegs[rA]=a                                           GPRegs-Hold(S25,S53)
	S55= GPRegs[rB]=b                                           GPRegs-Hold(S26,S53)
	S56= CtrlDMem=0                                             Premise(F161)
	S57= DMem[{pid,AddrSel(rA,a)+b}]={B1,B2,B3,B4}              DMem-Hold(S28,S56)

ID	S58= IR.Out11_15=rA                                         IR-Out(S52)
	S59= IR.Out16_20=rB                                         IR-Out(S52)
	S60= IR.Out11_15=>GPRegs.RReg1                              Premise(F182)
	S61= GPRegs.RReg1=rA                                        Path(S58,S60)
	S62= GPRegs.Rdata1=a                                        GPRegs-Read(S61,S54)
	S63= IR.Out16_20=>GPRegs.RReg2                              Premise(F183)
	S64= GPRegs.RReg2=rB                                        Path(S59,S63)
	S65= GPRegs.Rdata2=b                                        GPRegs-Read(S64,S55)
	S66= IR.Out11_15=>AddrSelMux.Sel                            Premise(F184)
	S67= AddrSelMux.Sel=rA                                      Path(S58,S66)
	S68= GPRegs.Rdata1=>AddrSelMux.Data                         Premise(F185)
	S69= AddrSelMux.Data=a                                      Path(S62,S68)
	S70= AddrSelMux.Out=AddrSel(rA,a)                           AddrSelMux(S67,S69)
	S71= AddrSelMux.Out=>A.In                                   Premise(F186)
	S72= A.In=AddrSel(rA,a)                                     Path(S70,S71)
	S73= GPRegs.Rdata2=>B.In                                    Premise(F187)
	S74= B.In=b                                                 Path(S65,S73)
	S75= CtrlPIDReg=0                                           Premise(F216)
	S76= [PIDReg]=pid                                           PIDReg-Hold(S45,S75)
	S77= CtrlPC=0                                               Premise(F218)
	S78= CtrlPCInc=0                                            Premise(F219)
	S79= PC[Out]=addr+4                                         PC-Hold(S48,S77,S78)
	S80= CtrlICache=0                                           Premise(F222)
	S81= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S50,S80)
	S82= CtrlIR=0                                               Premise(F227)
	S83= [IR]={31,rT,rA,rB,1068}                                IR-Hold(S52,S82)
	S84= CtrlA=1                                                Premise(F229)
	S85= [A]=AddrSel(rA,a)                                      A-Write(S72,S84)
	S86= CtrlB=1                                                Premise(F230)
	S87= [B]=b                                                  B-Write(S74,S86)
	S88= CtrlDMem=0                                             Premise(F239)
	S89= DMem[{pid,AddrSel(rA,a)+b}]={B1,B2,B3,B4}              DMem-Hold(S57,S88)

EX	S90= A.Out=AddrSel(rA,a)                                    A-Out(S85)
	S91= B.Out=b                                                B-Out(S87)
	S92= A.Out=>ALU.A                                           Premise(F266)
	S93= ALU.A=AddrSel(rA,a)                                    Path(S90,S92)
	S94= B.Out=>ALU.B                                           Premise(F267)
	S95= ALU.B=b                                                Path(S91,S94)
	S96= ALU.Out=AddrSel(rA,a)+b                                ALU(S93,S95)
	S97= ALU.Out=>ALUOut.In                                     Premise(F269)
	S98= ALUOut.In=AddrSel(rA,a)+b                              Path(S96,S97)
	S99= CtrlPIDReg=0                                           Premise(F294)
	S100= [PIDReg]=pid                                          PIDReg-Hold(S76,S99)
	S101= CtrlPC=0                                              Premise(F296)
	S102= CtrlPCInc=0                                           Premise(F297)
	S103= PC[Out]=addr+4                                        PC-Hold(S79,S101,S102)
	S104= CtrlICache=0                                          Premise(F300)
	S105= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S81,S104)
	S106= CtrlIR=0                                              Premise(F305)
	S107= [IR]={31,rT,rA,rB,1068}                               IR-Hold(S83,S106)
	S108= CtrlALUOut=1                                          Premise(F309)
	S109= [ALUOut]=AddrSel(rA,a)+b                              ALUOut-Write(S98,S108)
	S110= CtrlDMem=0                                            Premise(F317)
	S111= DMem[{pid,AddrSel(rA,a)+b}]={B1,B2,B3,B4}             DMem-Hold(S89,S110)

MEM	S112= PIDReg.Out=pid                                        PIDReg-Out(S100)
	S113= ALUOut.Out=AddrSel(rA,a)+b                            ALUOut-Out(S109)
	S114= PIDReg.Out=>DMMU.PID                                  Premise(F348)
	S115= DMMU.PID=pid                                          Path(S112,S114)
	S116= ALUOut.Out=>DMMU.IEA                                  Premise(F349)
	S117= DMMU.IEA=AddrSel(rA,a)+b                              Path(S113,S116)
	S118= DMMU.Addr={pid,AddrSel(rA,a)+b}                       DMMU-Search(S115,S117)
	S119= DMMU.Addr=>DAddrReg.In                                Premise(F350)
	S120= DAddrReg.In={pid,AddrSel(rA,a)+b}                     Path(S118,S119)
	S121= CtrlPIDReg=0                                          Premise(F372)
	S122= [PIDReg]=pid                                          PIDReg-Hold(S100,S121)
	S123= CtrlPC=0                                              Premise(F374)
	S124= CtrlPCInc=0                                           Premise(F375)
	S125= PC[Out]=addr+4                                        PC-Hold(S103,S123,S124)
	S126= CtrlICache=0                                          Premise(F378)
	S127= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S105,S126)
	S128= CtrlIR=0                                              Premise(F383)
	S129= [IR]={31,rT,rA,rB,1068}                               IR-Hold(S107,S128)
	S130= CtrlALUOut=0                                          Premise(F387)
	S131= [ALUOut]=AddrSel(rA,a)+b                              ALUOut-Hold(S109,S130)
	S132= CtrlDAddrReg=1                                        Premise(F389)
	S133= [DAddrReg]={pid,AddrSel(rA,a)+b}                      DAddrReg-Write(S120,S132)
	S134= CtrlDMem=0                                            Premise(F395)
	S135= DMem[{pid,AddrSel(rA,a)+b}]={B1,B2,B3,B4}             DMem-Hold(S111,S134)

DMMU1	S136= PIDReg.Out=pid                                        PIDReg-Out(S122)
	S137= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S138= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S139= PIDReg.Out=>DMMU.PID                                  Premise(F426)
	S140= DMMU.PID=pid                                          Path(S136,S139)
	S141= DCache.RLineEA=>DMMU.IEAR                             Premise(F438)
	S142= DMMU.IEAR=DCacheRLineEA()                             Path(S137,S141)
	S143= DMMU.AddrR={pid,DCacheRLineEA()}                      DMMU-RSearch(S140,S142)
	S144= DMMU.AddrR=>DMem.MEM8WordWAddr                        Premise(F439)
	S145= DMem.MEM8WordWAddr={pid,DCacheRLineEA()}              Path(S143,S144)
	S146= DCache.RLineData=>DMem.MEM8WordWData                  Premise(F440)
	S147= DMem.MEM8WordWData=DCacheRLineData()                  Path(S138,S146)
	S148= CtrlPC=0                                              Premise(F452)
	S149= CtrlPCInc=0                                           Premise(F453)
	S150= PC[Out]=addr+4                                        PC-Hold(S125,S148,S149)
	S151= CtrlICache=0                                          Premise(F456)
	S152= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S127,S151)
	S153= CtrlIR=0                                              Premise(F461)
	S154= [IR]={31,rT,rA,rB,1068}                               IR-Hold(S129,S153)
	S155= CtrlALUOut=0                                          Premise(F465)
	S156= [ALUOut]=AddrSel(rA,a)+b                              ALUOut-Hold(S131,S155)
	S157= CtrlDAddrReg=0                                        Premise(F467)
	S158= [DAddrReg]={pid,AddrSel(rA,a)+b}                      DAddrReg-Hold(S133,S157)
	S159= CtrlDMem=0                                            Premise(F473)
	S160= DMem[{pid,AddrSel(rA,a)+b}]={B1,B2,B3,B4}             DMem-Hold(S135,S159)
	S161= CtrlDMem8Word=1                                       Premise(F474)
	S162= DMem[line_{pid,DCacheRLineEA()}]=DCacheRLineData()    DMem-Write8Word(S145,S147,S161)

DMMU2	S163= ALUOut.Out=AddrSel(rA,a)+b                            ALUOut-Out(S156)
	S164= DAddrReg.Out={pid,AddrSel(rA,a)+b}                    DAddrReg-Out(S158)
	S165= ALUOut.Out=>DCache.IEA                                Premise(F508)
	S166= DCache.IEA=AddrSel(rA,a)+b                            Path(S163,S165)
	S167= DAddrReg.Out=>DMem.RAddr                              Premise(F520)
	S168= DMem.RAddr={pid,AddrSel(rA,a)+b}                      Path(S164,S167)
	S169= DMem.MEM8WordOut=>DCache.WData                        Premise(F521)
	S170= CtrlPC=0                                              Premise(F530)
	S171= CtrlPCInc=0                                           Premise(F531)
	S172= PC[Out]=addr+4                                        PC-Hold(S150,S170,S171)
	S173= CtrlICache=0                                          Premise(F534)
	S174= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S152,S173)
	S175= CtrlIR=0                                              Premise(F539)
	S176= [IR]={31,rT,rA,rB,1068}                               IR-Hold(S154,S175)
	S177= CtrlDCache=1                                          Premise(F547)
	S178= CtrlDMem=0                                            Premise(F551)
	S179= CtrlDMem8Word=0                                       Premise(F552)
	S180= DMem[line_{pid,DCacheRLineEA()}]=DCacheRLineData()    DMem-Hold8Word(S162,S179)
	S181= DMem.MEM8WordOut=DMemGet8Word({pid,AddrSel(rA,a)+b})  DMem-Read(S168,S160,S178,S179)
	S182= DCache.WData=DMemGet8Word({pid,AddrSel(rA,a)+b})      Path(S181,S169)
	S183= DCache[line_AddrSel(rA,a)+b]=DMemGet8Word({pid,AddrSel(rA,a)+b})DCache-Write8Word(S166,S182,S177)

WB	S184= IR.Out6_10=rT                                         IR-Out(S176)
	S185= MemDataSel.Out={B4,B3,B2,B1}                          MemDataSel()
	S186= MemDataSel.Out=>GPRegs.WData                          Premise(F604)
	S187= GPRegs.WData={B4,B3,B2,B1}                            Path(S185,S186)
	S188= IR.Out6_10=>GPRegs.WReg                               Premise(F605)
	S189= GPRegs.WReg=rT                                        Path(S184,S188)
	S190= CtrlPC=0                                              Premise(F608)
	S191= CtrlPCInc=0                                           Premise(F609)
	S192= PC[Out]=addr+4                                        PC-Hold(S172,S190,S191)
	S193= CtrlICache=0                                          Premise(F612)
	S194= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S174,S193)
	S195= CtrlGPRegs=1                                          Premise(F618)
	S196= GPRegs[rT]={B4,B3,B2,B1}                              GPRegs-Write(S189,S187,S195)
	S197= CtrlDCache=0                                          Premise(F625)
	S198= DCache[line_AddrSel(rA,a)+b]=DMemGet8Word({pid,AddrSel(rA,a)+b})DCache-Hold(S183,S197)
	S199= CtrlDMem8Word=0                                       Premise(F630)
	S200= DMem[line_{pid,DCacheRLineEA()}]=DCacheRLineData()    DMem-Hold8Word(S180,S199)

POST	S192= PC[Out]=addr+4                                        PC-Hold(S172,S190,S191)
	S194= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S174,S193)
	S196= GPRegs[rT]={B4,B3,B2,B1}                              GPRegs-Write(S189,S187,S195)
	S198= DCache[line_AddrSel(rA,a)+b]=DMemGet8Word({pid,AddrSel(rA,a)+b})DCache-Hold(S183,S197)
	S200= DMem[line_{pid,DCacheRLineEA()}]=DCacheRLineData()    DMem-Hold8Word(S180,S199)

