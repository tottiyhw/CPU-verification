
------------------------------------- Proof -------------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={25,rS,rA,UIMM}                        Premise(F2)
	S3= GPRegs[rS]=a                                            Premise(F3)

IF	S4= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= PIDReg.Out=>IMMU.PID                                    Premise(F4)
	S7= IMMU.PID=pid                                            Path(S4,S6)
	S8= PC.Out=>IMMU.IEA                                        Premise(F5)
	S9= IMMU.IEA=addr                                           Path(S5,S8)
	S10= IMMU.Addr={pid,addr}                                   IMMU-Search(S7,S9)
	S11= IMMU.Addr=>IAddrReg.In                                 Premise(F6)
	S12= IAddrReg.In={pid,addr}                                 Path(S10,S11)
	S13= CtrlPC=0                                               Premise(F38)
	S14= CtrlPCInc=0                                            Premise(F39)
	S15= PC[Out]=addr                                           PC-Hold(S1,S13,S14)
	S16= CtrlIAddrReg=1                                         Premise(F40)
	S17= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S12,S16)
	S18= CtrlIMem=0                                             Premise(F45)
	S19= IMem[{pid,addr}]={25,rS,rA,UIMM}                       IMem-Hold(S2,S18)
	S20= CtrlGPRegs=0                                           Premise(F48)
	S21= GPRegs[rS]=a                                           GPRegs-Hold(S3,S20)

IMMU	S22= PC.Out=addr                                            PC-Out(S15)
	S23= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S17)
	S24= PC.Out=>ICache.IEA                                     Premise(F64)
	S25= ICache.IEA=addr                                        Path(S22,S24)
	S26= IAddrReg.Out=>IMem.RAddr                               Premise(F69)
	S27= IMem.RAddr={pid,addr}                                  Path(S23,S26)
	S28= IMem.Out={25,rS,rA,UIMM}                               IMem-Read(S27,S19)
	S29= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S27,S19)
	S30= IMem.Out=>IRMux.MemData                                Premise(F70)
	S31= IRMux.MemData={25,rS,rA,UIMM}                          Path(S28,S30)
	S32= IRMux.Out={25,rS,rA,UIMM}                              IRMux-Select(S31)
	S33= IRMux.Out=>IR.In                                       Premise(F74)
	S34= IR.In={25,rS,rA,UIMM}                                  Path(S32,S33)
	S35= IMem.MEM8WordOut=>ICache.WData                         Premise(F75)
	S36= ICache.WData=IMemGet8Word({pid,addr})                  Path(S29,S35)
	S37= CtrlPC=0                                               Premise(F94)
	S38= CtrlPCInc=1                                            Premise(F95)
	S39= PC[Out]=addr+4                                         PC-Inc(S15,S37,S38)
	S40= CtrlICache=1                                           Premise(F98)
	S41= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S25,S36,S40)
	S42= CtrlIR=1                                               Premise(F103)
	S43= [IR]={25,rS,rA,UIMM}                                   IR-Write(S34,S42)
	S44= CtrlGPRegs=0                                           Premise(F104)
	S45= GPRegs[rS]=a                                           GPRegs-Hold(S21,S44)

ID	S46= IR.Out6_10=rS                                          IR-Out(S43)
	S47= IR.Out16_31=UIMM                                       IR-Out(S43)
	S48= IR.Out6_10=>GPRegs.RReg1                               Premise(F134)
	S49= GPRegs.RReg1=rS                                        Path(S46,S48)
	S50= GPRegs.Rdata1=a                                        GPRegs-Read(S49,S45)
	S51= IR.Out16_31=>IMMSEXT.In                                Premise(F135)
	S52= IMMSEXT.In=UIMM                                        Path(S47,S51)
	S53= IMMSEXT.Out={UIMM,16'b0}                               IMMSEXT(S52)
	S54= GPRegs.Rdata1=>A.In                                    Premise(F136)
	S55= A.In=a                                                 Path(S50,S54)
	S56= IMMSEXT.Out=>B.In                                      Premise(F137)
	S57= B.In={UIMM,16'b0}                                      Path(S53,S56)
	S58= CtrlPC=0                                               Premise(F150)
	S59= CtrlPCInc=0                                            Premise(F151)
	S60= PC[Out]=addr+4                                         PC-Hold(S39,S58,S59)
	S61= CtrlICache=0                                           Premise(F154)
	S62= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S41,S61)
	S63= CtrlIR=0                                               Premise(F159)
	S64= [IR]={25,rS,rA,UIMM}                                   IR-Hold(S43,S63)
	S65= CtrlA=1                                                Premise(F161)
	S66= [A]=a                                                  A-Write(S55,S65)
	S67= CtrlB=1                                                Premise(F162)
	S68= [B]={UIMM,16'b0}                                       B-Write(S57,S67)

EX	S69= A.Out=a                                                A-Out(S66)
	S70= B.Out={UIMM,16'b0}                                     B-Out(S68)
	S71= A.Out=>ALU.A                                           Premise(F194)
	S72= ALU.A=a                                                Path(S69,S71)
	S73= B.Out=>ALU.B                                           Premise(F195)
	S74= ALU.B={UIMM,16'b0}                                     Path(S70,S73)
	S75= ALU.Out=a|{UIMM,16'b0}                                 ALU(S72,S74)
	S76= ALU.Out=>ALUOut.In                                     Premise(F197)
	S77= ALUOut.In=a|{UIMM,16'b0}                               Path(S75,S76)
	S78= CtrlPC=0                                               Premise(F206)
	S79= CtrlPCInc=0                                            Premise(F207)
	S80= PC[Out]=addr+4                                         PC-Hold(S60,S78,S79)
	S81= CtrlICache=0                                           Premise(F210)
	S82= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S62,S81)
	S83= CtrlIR=0                                               Premise(F215)
	S84= [IR]={25,rS,rA,UIMM}                                   IR-Hold(S64,S83)
	S85= CtrlALUOut=1                                           Premise(F219)
	S86= [ALUOut]=a|{UIMM,16'b0}                                ALUOut-Write(S77,S85)

MEM	S87= CtrlPC=0                                               Premise(F262)
	S88= CtrlPCInc=0                                            Premise(F263)
	S89= PC[Out]=addr+4                                         PC-Hold(S80,S87,S88)
	S90= CtrlICache=0                                           Premise(F266)
	S91= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S82,S90)
	S92= CtrlIR=0                                               Premise(F271)
	S93= [IR]={25,rS,rA,UIMM}                                   IR-Hold(S84,S92)
	S94= CtrlALUOut=0                                           Premise(F275)
	S95= [ALUOut]=a|{UIMM,16'b0}                                ALUOut-Hold(S86,S94)

DMMU1	S96= CtrlPC=0                                               Premise(F318)
	S97= CtrlPCInc=0                                            Premise(F319)
	S98= PC[Out]=addr+4                                         PC-Hold(S89,S96,S97)
	S99= CtrlICache=0                                           Premise(F322)
	S100= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S91,S99)
	S101= CtrlIR=0                                              Premise(F327)
	S102= [IR]={25,rS,rA,UIMM}                                  IR-Hold(S93,S101)
	S103= CtrlALUOut=0                                          Premise(F331)
	S104= [ALUOut]=a|{UIMM,16'b0}                               ALUOut-Hold(S95,S103)

DMMU2	S105= CtrlPC=0                                              Premise(F374)
	S106= CtrlPCInc=0                                           Premise(F375)
	S107= PC[Out]=addr+4                                        PC-Hold(S98,S105,S106)
	S108= CtrlICache=0                                          Premise(F378)
	S109= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S100,S108)
	S110= CtrlIR=0                                              Premise(F383)
	S111= [IR]={25,rS,rA,UIMM}                                  IR-Hold(S102,S110)
	S112= CtrlALUOut=0                                          Premise(F387)
	S113= [ALUOut]=a|{UIMM,16'b0}                               ALUOut-Hold(S104,S112)

WB	S114= IR.Out11_15=rA                                        IR-Out(S111)
	S115= ALUOut.Out=a|{UIMM,16'b0}                             ALUOut-Out(S113)
	S116= IR.Out11_15=>GPRegs.WReg                              Premise(F425)
	S117= GPRegs.WReg=rA                                        Path(S114,S116)
	S118= ALUOut.Out=>GPRegs.WData                              Premise(F426)
	S119= GPRegs.WData=a|{UIMM,16'b0}                           Path(S115,S118)
	S120= CtrlPC=0                                              Premise(F430)
	S121= CtrlPCInc=0                                           Premise(F431)
	S122= PC[Out]=addr+4                                        PC-Hold(S107,S120,S121)
	S123= CtrlICache=0                                          Premise(F434)
	S124= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S109,S123)
	S125= CtrlGPRegs=1                                          Premise(F440)
	S126= GPRegs[rA]=a|{UIMM,16'b0}                             GPRegs-Write(S117,S119,S125)

POST	S122= PC[Out]=addr+4                                        PC-Hold(S107,S120,S121)
	S124= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S109,S123)
	S126= GPRegs[rA]=a|{UIMM,16'b0}                             GPRegs-Write(S117,S119,S125)

