
------------------------------------- Proof -------------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rT,rA,rB,1040}                     Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= GPRegs[rB]=b                                            Premise(F4)
	S5= XER[SO]=so                                              Premise(F5)

IF	S6= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S7= PC.Out=addr                                             PC-Out(S1)
	S8= PIDReg.Out=>IMMU.PID                                    Premise(F6)
	S9= IMMU.PID=pid                                            Path(S6,S8)
	S10= PC.Out=>IMMU.IEA                                       Premise(F7)
	S11= IMMU.IEA=addr                                          Path(S7,S10)
	S12= IMMU.Addr={pid,addr}                                   IMMU-Search(S9,S11)
	S13= IMMU.Addr=>IAddrReg.In                                 Premise(F8)
	S14= IAddrReg.In={pid,addr}                                 Path(S12,S13)
	S15= CtrlPC=0                                               Premise(F45)
	S16= CtrlPCInc=0                                            Premise(F46)
	S17= PC[Out]=addr                                           PC-Hold(S1,S15,S16)
	S18= CtrlIAddrReg=1                                         Premise(F47)
	S19= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S14,S18)
	S20= CtrlIMem=0                                             Premise(F52)
	S21= IMem[{pid,addr}]={31,rT,rA,rB,1040}                    IMem-Hold(S2,S20)
	S22= CtrlGPRegs=0                                           Premise(F55)
	S23= GPRegs[rA]=a                                           GPRegs-Hold(S3,S22)
	S24= GPRegs[rB]=b                                           GPRegs-Hold(S4,S22)
	S25= CtrlXERSO=0                                            Premise(F61)
	S26= XER[SO]=so                                             XER-SO-Hold(S5,S25)

IMMU	S27= PC.Out=addr                                            PC-Out(S17)
	S28= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S19)
	S29= PC.Out=>ICache.IEA                                     Premise(F69)
	S30= ICache.IEA=addr                                        Path(S27,S29)
	S31= IAddrReg.Out=>IMem.RAddr                               Premise(F74)
	S32= IMem.RAddr={pid,addr}                                  Path(S28,S31)
	S33= IMem.Out={31,rT,rA,rB,1040}                            IMem-Read(S32,S21)
	S34= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S32,S21)
	S35= IMem.Out=>IRMux.MemData                                Premise(F75)
	S36= IRMux.MemData={31,rT,rA,rB,1040}                       Path(S33,S35)
	S37= IRMux.Out={31,rT,rA,rB,1040}                           IRMux-Select(S36)
	S38= IRMux.Out=>IR.In                                       Premise(F79)
	S39= IR.In={31,rT,rA,rB,1040}                               Path(S37,S38)
	S40= IMem.MEM8WordOut=>ICache.WData                         Premise(F80)
	S41= ICache.WData=IMemGet8Word({pid,addr})                  Path(S34,S40)
	S42= CtrlPC=0                                               Premise(F104)
	S43= CtrlPCInc=1                                            Premise(F105)
	S44= PC[Out]=addr+4                                         PC-Inc(S17,S42,S43)
	S45= CtrlICache=1                                           Premise(F108)
	S46= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S30,S41,S45)
	S47= CtrlIR=1                                               Premise(F113)
	S48= [IR]={31,rT,rA,rB,1040}                                IR-Write(S39,S47)
	S49= CtrlGPRegs=0                                           Premise(F114)
	S50= GPRegs[rA]=a                                           GPRegs-Hold(S23,S49)
	S51= GPRegs[rB]=b                                           GPRegs-Hold(S24,S49)
	S52= CtrlXERSO=0                                            Premise(F120)
	S53= XER[SO]=so                                             XER-SO-Hold(S26,S52)

ID	S54= IR.Out11_15=rA                                         IR-Out(S48)
	S55= IR.Out16_20=rB                                         IR-Out(S48)
	S56= IR.Out11_15=>GPRegs.RReg1                              Premise(F142)
	S57= GPRegs.RReg1=rA                                        Path(S54,S56)
	S58= GPRegs.Rdata1=a                                        GPRegs-Read(S57,S50)
	S59= IR.Out16_20=>GPRegs.RReg2                              Premise(F143)
	S60= GPRegs.RReg2=rB                                        Path(S55,S59)
	S61= GPRegs.Rdata2=b                                        GPRegs-Read(S60,S51)
	S62= GPRegs.Rdata1=>A.In                                    Premise(F145)
	S63= A.In=a                                                 Path(S58,S62)
	S64= GPRegs.Rdata2=>B.In                                    Premise(F146)
	S65= B.In=b                                                 Path(S61,S64)
	S66= CtrlPC=0                                               Premise(F163)
	S67= CtrlPCInc=0                                            Premise(F164)
	S68= PC[Out]=addr+4                                         PC-Hold(S44,S66,S67)
	S69= CtrlICache=0                                           Premise(F167)
	S70= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S46,S69)
	S71= CtrlIR=0                                               Premise(F172)
	S72= [IR]={31,rT,rA,rB,1040}                                IR-Hold(S48,S71)
	S73= CtrlA=1                                                Premise(F174)
	S74= [A]=a                                                  A-Write(S63,S73)
	S75= CtrlB=1                                                Premise(F175)
	S76= [B]=b                                                  B-Write(S65,S75)
	S77= CtrlXERSO=0                                            Premise(F179)
	S78= XER[SO]=so                                             XER-SO-Hold(S53,S77)

EX	S79= A.Out=a                                                A-Out(S74)
	S80= B.Out=b                                                B-Out(S76)
	S81= XER.SOOut=so                                           XER-SO-Out(S78)
	S82= A.Out=>ALU.A                                           Premise(F206)
	S83= ALU.A=a                                                Path(S79,S82)
	S84= B.Out=>ALU.B                                           Premise(F207)
	S85= ALU.B=b                                                Path(S80,S84)
	S86= ALU.Out=b-a                                            ALU(S83,S85)
	S87= ALU.OV=OverFlow(b-a)                                   ALU(S83,S85)
	S88= ALU.CA=Carry(b-a)                                      ALU(S83,S85)
	S89= ALU.Out=>ALUOut.In                                     Premise(F209)
	S90= ALUOut.In=b-a                                          Path(S86,S89)
	S91= ALU.CA=>CAReg.In                                       Premise(F210)
	S92= CAReg.In=Carry(b-a)                                    Path(S88,S91)
	S93= ALU.OV=>OVReg.In                                       Premise(F211)
	S94= OVReg.In=OverFlow(b-a)                                 Path(S87,S93)
	S95= XER.SOOut=>ORGate.A                                    Premise(F212)
	S96= ORGate.A=so                                            Path(S81,S95)
	S97= ALU.OV=>ORGate.B                                       Premise(F213)
	S98= ORGate.B=OverFlow(b-a)                                 Path(S87,S97)
	S99= ORGate.Out=so|OverFlow(b-a)                            ORGate(S96,S98)
	S100= ORGate.Out=>DR1bit.In                                 Premise(F214)
	S101= DR1bit.In=so|OverFlow(b-a)                            Path(S99,S100)
	S102= CtrlPC=0                                              Premise(F222)
	S103= CtrlPCInc=0                                           Premise(F223)
	S104= PC[Out]=addr+4                                        PC-Hold(S68,S102,S103)
	S105= CtrlICache=0                                          Premise(F226)
	S106= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S70,S105)
	S107= CtrlIR=0                                              Premise(F231)
	S108= [IR]={31,rT,rA,rB,1040}                               IR-Hold(S72,S107)
	S109= CtrlALUOut=1                                          Premise(F235)
	S110= [ALUOut]=b-a                                          ALUOut-Write(S90,S109)
	S111= CtrlCAReg=1                                           Premise(F236)
	S112= [CAReg]=Carry(b-a)                                    CAReg-Write(S92,S111)
	S113= CtrlOVReg=1                                           Premise(F237)
	S114= [OVReg]=OverFlow(b-a)                                 OVReg-Write(S94,S113)
	S115= CtrlDR1bit=1                                          Premise(F241)
	S116= [DR1bit]=so|OverFlow(b-a)                             DR1bit-Write(S101,S115)

MEM	S117= CtrlPC=0                                              Premise(F281)
	S118= CtrlPCInc=0                                           Premise(F282)
	S119= PC[Out]=addr+4                                        PC-Hold(S104,S117,S118)
	S120= CtrlICache=0                                          Premise(F285)
	S121= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S106,S120)
	S122= CtrlIR=0                                              Premise(F290)
	S123= [IR]={31,rT,rA,rB,1040}                               IR-Hold(S108,S122)
	S124= CtrlALUOut=0                                          Premise(F294)
	S125= [ALUOut]=b-a                                          ALUOut-Hold(S110,S124)
	S126= CtrlCAReg=0                                           Premise(F295)
	S127= [CAReg]=Carry(b-a)                                    CAReg-Hold(S112,S126)
	S128= CtrlOVReg=0                                           Premise(F296)
	S129= [OVReg]=OverFlow(b-a)                                 OVReg-Hold(S114,S128)
	S130= CtrlDR1bit=0                                          Premise(F300)
	S131= [DR1bit]=so|OverFlow(b-a)                             DR1bit-Hold(S116,S130)

DMMU1	S132= CtrlPC=0                                              Premise(F340)
	S133= CtrlPCInc=0                                           Premise(F341)
	S134= PC[Out]=addr+4                                        PC-Hold(S119,S132,S133)
	S135= CtrlICache=0                                          Premise(F344)
	S136= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S121,S135)
	S137= CtrlIR=0                                              Premise(F349)
	S138= [IR]={31,rT,rA,rB,1040}                               IR-Hold(S123,S137)
	S139= CtrlALUOut=0                                          Premise(F353)
	S140= [ALUOut]=b-a                                          ALUOut-Hold(S125,S139)
	S141= CtrlCAReg=0                                           Premise(F354)
	S142= [CAReg]=Carry(b-a)                                    CAReg-Hold(S127,S141)
	S143= CtrlOVReg=0                                           Premise(F355)
	S144= [OVReg]=OverFlow(b-a)                                 OVReg-Hold(S129,S143)
	S145= CtrlDR1bit=0                                          Premise(F359)
	S146= [DR1bit]=so|OverFlow(b-a)                             DR1bit-Hold(S131,S145)

DMMU2	S147= CtrlPC=0                                              Premise(F399)
	S148= CtrlPCInc=0                                           Premise(F400)
	S149= PC[Out]=addr+4                                        PC-Hold(S134,S147,S148)
	S150= CtrlICache=0                                          Premise(F403)
	S151= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S136,S150)
	S152= CtrlIR=0                                              Premise(F408)
	S153= [IR]={31,rT,rA,rB,1040}                               IR-Hold(S138,S152)
	S154= CtrlALUOut=0                                          Premise(F412)
	S155= [ALUOut]=b-a                                          ALUOut-Hold(S140,S154)
	S156= CtrlCAReg=0                                           Premise(F413)
	S157= [CAReg]=Carry(b-a)                                    CAReg-Hold(S142,S156)
	S158= CtrlOVReg=0                                           Premise(F414)
	S159= [OVReg]=OverFlow(b-a)                                 OVReg-Hold(S144,S158)
	S160= CtrlDR1bit=0                                          Premise(F418)
	S161= [DR1bit]=so|OverFlow(b-a)                             DR1bit-Hold(S146,S160)

WB	S162= IR.Out6_10=rT                                         IR-Out(S153)
	S163= ALUOut.Out=b-a                                        ALUOut-Out(S155)
	S164= CAReg.Out=Carry(b-a)                                  CAReg-Out(S157)
	S165= OVReg.Out=OverFlow(b-a)                               OVReg-Out(S159)
	S166= DR1bit.Out=so|OverFlow(b-a)                           DR1bit-Out(S161)
	S167= IR.Out6_10=>GPRegs.WReg                               Premise(F451)
	S168= GPRegs.WReg=rT                                        Path(S162,S167)
	S169= ALUOut.Out=>GPRegs.WData                              Premise(F452)
	S170= GPRegs.WData=b-a                                      Path(S163,S169)
	S171= DR1bit.Out=>XER.SOIn                                  Premise(F453)
	S172= XER.SOIn=so|OverFlow(b-a)                             Path(S166,S171)
	S173= CAReg.Out=>XER.CAIn                                   Premise(F454)
	S174= XER.CAIn=Carry(b-a)                                   Path(S164,S173)
	S175= OVReg.Out=>XER.OVIn                                   Premise(F455)
	S176= XER.OVIn=OverFlow(b-a)                                Path(S165,S175)
	S177= CtrlPC=0                                              Premise(F458)
	S178= CtrlPCInc=0                                           Premise(F459)
	S179= PC[Out]=addr+4                                        PC-Hold(S149,S177,S178)
	S180= CtrlICache=0                                          Premise(F462)
	S181= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S151,S180)
	S182= CtrlGPRegs=1                                          Premise(F468)
	S183= GPRegs[rT]=b-a                                        GPRegs-Write(S168,S170,S182)
	S184= CtrlXERSO=1                                           Premise(F474)
	S185= XER[SO]=so|OverFlow(b-a)                              XER-SO-Write(S172,S184)
	S186= CtrlXEROV=1                                           Premise(F475)
	S187= XER[OV]=OverFlow(b-a)                                 XER-OV-Write(S176,S186)
	S188= CtrlXERCA=1                                           Premise(F476)
	S189= XER[CA]=Carry(b-a)                                    XER-CA-Write(S174,S188)

POST	S179= PC[Out]=addr+4                                        PC-Hold(S149,S177,S178)
	S181= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S151,S180)
	S183= GPRegs[rT]=b-a                                        GPRegs-Write(S168,S170,S182)
	S185= XER[SO]=so|OverFlow(b-a)                              XER-SO-Write(S172,S184)
	S187= XER[OV]=OverFlow(b-a)                                 XER-OV-Write(S176,S186)
	S189= XER[CA]=Carry(b-a)                                    XER-CA-Write(S174,S188)

