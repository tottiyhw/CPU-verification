
------------------------------------- Proof -------------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={7,rT,rA,SIMM}                         Premise(F2)
	S3= ICache[addr]={7,rT,rA,SIMM}                             Premise(F3)
	S4= GPRegs[rA]=a                                            Premise(F4)

IF	S5= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= PIDReg.Out=>IMMU.PID                                    Premise(F5)
	S8= IMMU.PID=pid                                            Path(S5,S7)
	S9= PC.Out=>IMMU.IEA                                        Premise(F6)
	S10= IMMU.IEA=addr                                          Path(S6,S9)
	S11= IMMU.Addr={pid,addr}                                   IMMU-Search(S8,S10)
	S12= IMMU.Addr=>IAddrReg.In                                 Premise(F7)
	S13= IAddrReg.In={pid,addr}                                 Path(S11,S12)
	S14= PC.Out=>ICache.IEA                                     Premise(F9)
	S15= ICache.IEA=addr                                        Path(S6,S14)
	S16= ICache.Out={7,rT,rA,SIMM}                              ICache-Search(S15,S3)
	S17= ICache.Out=>ICacheReg.In                               Premise(F10)
	S18= ICacheReg.In={7,rT,rA,SIMM}                            Path(S16,S17)
	S19= CtrlPC=0                                               Premise(F35)
	S20= CtrlPCInc=0                                            Premise(F36)
	S21= PC[Out]=addr                                           PC-Hold(S1,S19,S20)
	S22= CtrlIAddrReg=1                                         Premise(F37)
	S23= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S13,S22)
	S24= CtrlICacheReg=1                                        Premise(F40)
	S25= [ICacheReg]={7,rT,rA,SIMM}                             ICacheReg-Write(S18,S24)
	S26= CtrlIMem=0                                             Premise(F42)
	S27= IMem[{pid,addr}]={7,rT,rA,SIMM}                        IMem-Hold(S2,S26)
	S28= CtrlGPRegs=0                                           Premise(F45)
	S29= GPRegs[rA]=a                                           GPRegs-Hold(S4,S28)

IMMU	S30= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S23)
	S31= ICacheReg.Out={7,rT,rA,SIMM}                           ICacheReg-Out(S25)
	S32= IAddrReg.Out=>IMem.RAddr                               Premise(F58)
	S33= IMem.RAddr={pid,addr}                                  Path(S30,S32)
	S34= IMem.Out={7,rT,rA,SIMM}                                IMem-Read(S33,S27)
	S35= IMem.Out=>IRMux.MemData                                Premise(F59)
	S36= IRMux.MemData={7,rT,rA,SIMM}                           Path(S34,S35)
	S37= ICacheReg.Out=>IRMux.CacheData                         Premise(F60)
	S38= IRMux.CacheData={7,rT,rA,SIMM}                         Path(S31,S37)
	S39= IRMux.Out={7,rT,rA,SIMM}                               IRMux-Select(S36,S38)
	S40= IRMux.Out=>IR.In                                       Premise(F63)
	S41= IR.In={7,rT,rA,SIMM}                                   Path(S39,S40)
	S42= CtrlPC=0                                               Premise(F79)
	S43= CtrlPCInc=1                                            Premise(F80)
	S44= PC[Out]=addr+4                                         PC-Inc(S21,S42,S43)
	S45= CtrlIR=1                                               Premise(F88)
	S46= [IR]={7,rT,rA,SIMM}                                    IR-Write(S41,S45)
	S47= CtrlGPRegs=0                                           Premise(F89)
	S48= GPRegs[rA]=a                                           GPRegs-Hold(S29,S47)

ID	S49= IR.Out11_15=rA                                         IR-Out(S46)
	S50= IR.Out16_31=SIMM                                       IR-Out(S46)
	S51= IR.Out11_15=>GPRegs.RReg1                              Premise(F111)
	S52= GPRegs.RReg1=rA                                        Path(S49,S51)
	S53= GPRegs.Rdata1=a                                        GPRegs-Read(S52,S48)
	S54= IR.Out16_31=>IMMEXT.In                                 Premise(F112)
	S55= IMMEXT.In=SIMM                                         Path(S50,S54)
	S56= IMMEXT.Out={16{SIMM[0]},SIMM}                          IMMEXT(S55)
	S57= GPRegs.Rdata1=>A.In                                    Premise(F113)
	S58= A.In=a                                                 Path(S53,S57)
	S59= IMMEXT.Out=>B.In                                       Premise(F114)
	S60= B.In={16{SIMM[0]},SIMM}                                Path(S56,S59)
	S61= CtrlPC=0                                               Premise(F123)
	S62= CtrlPCInc=0                                            Premise(F124)
	S63= PC[Out]=addr+4                                         PC-Hold(S44,S61,S62)
	S64= CtrlIR=0                                               Premise(F132)
	S65= [IR]={7,rT,rA,SIMM}                                    IR-Hold(S46,S64)
	S66= CtrlA=1                                                Premise(F134)
	S67= [A]=a                                                  A-Write(S58,S66)
	S68= CtrlB=1                                                Premise(F135)
	S69= [B]={16{SIMM[0]},SIMM}                                 B-Write(S60,S68)

EX	S70= A.Out=a                                                A-Out(S67)
	S71= B.Out={16{SIMM[0]},SIMM}                               B-Out(S69)
	S72= A.Out=>MDU.A                                           Premise(F159)
	S73= MDU.A=a                                                Path(S70,S72)
	S74= B.Out=>MDU.B                                           Premise(F160)
	S75= MDU.B={16{SIMM[0]},SIMM}                               Path(S71,S74)
	S76= MDU.Out16_47=(a¡Á{16{SIMM[0]},SIMM})[16:47]             MDU(S73,S75)
	S77= MDU.Out16_47=>MDUOut.In                                Premise(F162)
	S78= MDUOut.In=(a¡Á{16{SIMM[0]},SIMM})[16:47]                Path(S76,S77)
	S79= CtrlPC=0                                               Premise(F167)
	S80= CtrlPCInc=0                                            Premise(F168)
	S81= PC[Out]=addr+4                                         PC-Hold(S63,S79,S80)
	S82= CtrlIR=0                                               Premise(F176)
	S83= [IR]={7,rT,rA,SIMM}                                    IR-Hold(S65,S82)
	S84= CtrlMDUOut=1                                           Premise(F180)
	S85= [MDUOut]=(a¡Á{16{SIMM[0]},SIMM})[16:47]                 MDUOut-Write(S78,S84)

MEM	S86= CtrlPC=0                                               Premise(F211)
	S87= CtrlPCInc=0                                            Premise(F212)
	S88= PC[Out]=addr+4                                         PC-Hold(S81,S86,S87)
	S89= CtrlIR=0                                               Premise(F220)
	S90= [IR]={7,rT,rA,SIMM}                                    IR-Hold(S83,S89)
	S91= CtrlMDUOut=0                                           Premise(F224)
	S92= [MDUOut]=(a¡Á{16{SIMM[0]},SIMM})[16:47]                 MDUOut-Hold(S85,S91)

DMMU1	S93= CtrlPC=0                                               Premise(F255)
	S94= CtrlPCInc=0                                            Premise(F256)
	S95= PC[Out]=addr+4                                         PC-Hold(S88,S93,S94)
	S96= CtrlIR=0                                               Premise(F264)
	S97= [IR]={7,rT,rA,SIMM}                                    IR-Hold(S90,S96)
	S98= CtrlMDUOut=0                                           Premise(F268)
	S99= [MDUOut]=(a¡Á{16{SIMM[0]},SIMM})[16:47]                 MDUOut-Hold(S92,S98)

DMMU2	S100= CtrlPC=0                                              Premise(F299)
	S101= CtrlPCInc=0                                           Premise(F300)
	S102= PC[Out]=addr+4                                        PC-Hold(S95,S100,S101)
	S103= CtrlIR=0                                              Premise(F308)
	S104= [IR]={7,rT,rA,SIMM}                                   IR-Hold(S97,S103)
	S105= CtrlMDUOut=0                                          Premise(F312)
	S106= [MDUOut]=(a¡Á{16{SIMM[0]},SIMM})[16:47]                MDUOut-Hold(S99,S105)

WB	S107= IR.Out6_10=rT                                         IR-Out(S104)
	S108= MDUOut.Out=(a¡Á{16{SIMM[0]},SIMM})[16:47]              MDUOut-Out(S106)
	S109= IR.Out6_10=>GPRegs.WReg                               Premise(F339)
	S110= GPRegs.WReg=rT                                        Path(S107,S109)
	S111= MDUOut.Out=>GPRegs.WData                              Premise(F340)
	S112= GPRegs.WData=(a¡Á{16{SIMM[0]},SIMM})[16:47]            Path(S108,S111)
	S113= CtrlPC=0                                              Premise(F343)
	S114= CtrlPCInc=0                                           Premise(F344)
	S115= PC[Out]=addr+4                                        PC-Hold(S102,S113,S114)
	S116= CtrlGPRegs=1                                          Premise(F353)
	S117= GPRegs[rT]=(a¡Á{16{SIMM[0]},SIMM})[16:47]              GPRegs-Write(S110,S112,S116)

POST	S115= PC[Out]=addr+4                                        PC-Hold(S102,S113,S114)
	S117= GPRegs[rT]=(a¡Á{16{SIMM[0]},SIMM})[16:47]              GPRegs-Write(S110,S112,S116)

