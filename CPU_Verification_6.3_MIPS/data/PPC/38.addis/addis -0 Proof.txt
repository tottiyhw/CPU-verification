
------------------------------------- Proof -------------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={15,rT,rA,SIMM}                        Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)

IF	S4= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S5= PC.NIA=addr                                             PC-Out(S1)
	S6= PIDReg.Out=>IMem.PID                                    Premise(F4)
	S7= IMem.PID=pid                                            Path(S4,S6)
	S8= PC.NIA=>IMem.Addr                                       Premise(F5)
	S9= IMem.Addr=addr                                          Path(S5,S8)
	S10= IMem.RData={15,rT,rA,SIMM}                             IMem-Read(S7,S9,S2)
	S11= IMem.RData=>IR.In                                      Premise(F6)
	S12= IR.In={15,rT,rA,SIMM}                                  Path(S10,S11)
	S13= CtrlPC=0                                               Premise(F22)
	S14= CtrlPCInc=1                                            Premise(F23)
	S15= PC[Out]=addr+4                                         PC-Inc(S1,S13,S14)
	S16= CtrlIR=1                                               Premise(F24)
	S17= [IR]={15,rT,rA,SIMM}                                   IR-Write(S12,S16)
	S18= CtrlGPRegs=0                                           Premise(F25)
	S19= GPRegs[rA]=a                                           GPRegs-Hold(S3,S18)

ID	S20= IR.Out11_15=rA                                         IR-Out(S17)
	S21= IR.Out16_31=SIMM                                       IR-Out(S17)
	S22= IR.Out11_15=>GPRegs.RReg1                              Premise(F33)
	S23= GPRegs.RReg1=rA                                        Path(S20,S22)
	S24= GPRegs.RData1=a                                        GPRegs-Read(S23,S19)
	S25= IR.Out11_15=>AddrSelMux.Sel                            Premise(F34)
	S26= AddrSelMux.Sel=rA                                      Path(S20,S25)
	S27= GPRegs.RData1=>AddrSelMux.Data                         Premise(F35)
	S28= AddrSelMux.Data=a                                      Path(S24,S27)
	S29= AddrSelMux.Out=AddrSel(rA,a)                           AddrSelMux(S26,S28)
	S30= AddrSelMux.Out=>A.In                                   Premise(F36)
	S31= A.In=AddrSel(rA,a)                                     Path(S29,S30)
	S32= IR.Out16_31=>IMMSEXT.In                                Premise(F37)
	S33= IMMSEXT.In=SIMM                                        Path(S21,S32)
	S34= IMMSEXT.Out={SIMM,0}                                   IMMSEXT(S33)
	S35= IMMSEXT.Out=>B.In                                      Premise(F38)
	S36= B.In={SIMM,0}                                          Path(S34,S35)
	S37= CtrlPC=0                                               Premise(F47)
	S38= CtrlPCInc=0                                            Premise(F48)
	S39= PC[Out]=addr+4                                         PC-Hold(S15,S37,S38)
	S40= CtrlIR=0                                               Premise(F49)
	S41= [IR]={15,rT,rA,SIMM}                                   IR-Hold(S17,S40)
	S42= CtrlA=1                                                Premise(F51)
	S43= [A]=AddrSel(rA,a)                                      A-Write(S31,S42)
	S44= CtrlB=1                                                Premise(F52)
	S45= [B]={SIMM,0}                                           B-Write(S36,S44)

EX	S46= A.Out=AddrSel(rA,a)                                    A-Out(S43)
	S47= B.Out={SIMM,0}                                         B-Out(S45)
	S48= A.Out=>ALU.A                                           Premise(F64)
	S49= ALU.A=AddrSel(rA,a)                                    Path(S46,S48)
	S50= B.Out=>ALU.B                                           Premise(F65)
	S51= ALU.B={SIMM,0}                                         Path(S47,S50)
	S52= ALU.Out=AddrSel(rA,a)+{SIMM,0}                         ALU(S49,S51)
	S53= ALU.Out=>ALUOut.In                                     Premise(F67)
	S54= ALUOut.In=AddrSel(rA,a)+{SIMM,0}                       Path(S52,S53)
	S55= CtrlPC=0                                               Premise(F72)
	S56= CtrlPCInc=0                                            Premise(F73)
	S57= PC[Out]=addr+4                                         PC-Hold(S39,S55,S56)
	S58= CtrlIR=0                                               Premise(F74)
	S59= [IR]={15,rT,rA,SIMM}                                   IR-Hold(S41,S58)
	S60= CtrlALUOut=1                                           Premise(F78)
	S61= [ALUOut]=AddrSel(rA,a)+{SIMM,0}                        ALUOut-Write(S54,S60)

MEM	S62= CtrlPC=0                                               Premise(F97)
	S63= CtrlPCInc=0                                            Premise(F98)
	S64= PC[Out]=addr+4                                         PC-Hold(S57,S62,S63)
	S65= CtrlIR=0                                               Premise(F99)
	S66= [IR]={15,rT,rA,SIMM}                                   IR-Hold(S59,S65)
	S67= CtrlALUOut=0                                           Premise(F103)
	S68= [ALUOut]=AddrSel(rA,a)+{SIMM,0}                        ALUOut-Hold(S61,S67)

WB	S69= IR.Out6_10=rT                                          IR-Out(S66)
	S70= ALUOut.Out=AddrSel(rA,a)+{SIMM,0}                      ALUOut-Out(S68)
	S71= IR.Out6_10=>GPRegs.WReg                                Premise(F118)
	S72= GPRegs.WReg=rT                                         Path(S69,S71)
	S73= ALUOut.Out=>GPRegs.WData                               Premise(F119)
	S74= GPRegs.WData=AddrSel(rA,a)+{SIMM,0}                    Path(S70,S73)
	S75= CtrlPC=0                                               Premise(F122)
	S76= CtrlPCInc=0                                            Premise(F123)
	S77= PC[Out]=addr+4                                         PC-Hold(S64,S75,S76)
	S78= CtrlGPRegs=1                                           Premise(F125)
	S79= GPRegs[rT]=AddrSel(rA,a)+{SIMM,0}                      GPRegs-Write(S72,S74,S78)

POST	S77= PC[Out]=addr+4                                         PC-Hold(S64,S75,S76)
	S79= GPRegs[rT]=AddrSel(rA,a)+{SIMM,0}                      GPRegs-Write(S72,S74,S78)

