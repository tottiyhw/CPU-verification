
------------------------------------- Proof -------------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={18,LI,1,0}                            Premise(F2)

IF	S3= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S4= PC.NIA=addr                                             PC-Out(S1)
	S5= PIDReg.Out=>IMem.PID                                    Premise(F3)
	S6= IMem.PID=pid                                            Path(S3,S5)
	S7= PC.NIA=>IMem.Addr                                       Premise(F4)
	S8= IMem.Addr=addr                                          Path(S4,S7)
	S9= IMem.RData={18,LI,1,0}                                  IMem-Read(S6,S8,S2)
	S10= IMem.RData=>IR.In                                      Premise(F5)
	S11= IR.In={18,LI,1,0}                                      Path(S9,S10)
	S12= CtrlIR=1                                               Premise(F15)
	S13= [IR]={18,LI,1,0}                                       IR-Write(S11,S12)

ID	S14= IR.Out6_29=LI                                          IR-Out(S13)
	S15= IR.Out6_29=>Addr24Ext.In                               Premise(F20)
	S16= Addr24Ext.In=LI                                        Path(S14,S15)
	S17= Addr24Ext.Out={8{LI[23]},LI}                           Addr24Ext-EXT(S16)
	S18= Addr24Ext.Out=>PC.In                                   Premise(F23)
	S19= PC.In={8{LI[23]},LI}                                   Path(S17,S18)
	S20= CtrlPC=1                                               Premise(F26)
	S21= CtrlPCInc=0                                            Premise(F27)
	S22= PC[Out]={8{LI[23]},LI}                                 PC-Write(S19,S20,S21)

EX	S23= CtrlPC=0                                               Premise(F39)
	S24= CtrlPCInc=0                                            Premise(F40)
	S25= PC[Out]={8{LI[23]},LI}                                 PC-Hold(S22,S23,S24)

MEM	S26= CtrlPC=0                                               Premise(F52)
	S27= CtrlPCInc=0                                            Premise(F53)
	S28= PC[Out]={8{LI[23]},LI}                                 PC-Hold(S25,S26,S27)

WB	S29= CtrlPC=0                                               Premise(F65)
	S30= CtrlPCInc=0                                            Premise(F66)
	S31= PC[Out]={8{LI[23]},LI}                                 PC-Hold(S28,S29,S30)

POST	S31= PC[Out]={8{LI[23]},LI}                                 PC-Hold(S28,S29,S30)

