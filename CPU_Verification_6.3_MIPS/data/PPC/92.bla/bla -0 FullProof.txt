
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S0= PC[Out]=addr                                            Premise(F1)
	S0= IMem[{pid,addr}]={18,LI,1,1}                            Premise(F2)

IF	S0= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S0= PIDReg.Out1_0={pid}[1:0]                                PIDReg-Out(S0)
	S0= PIDReg.Out4_0={pid}[4:0]                                PIDReg-Out(S0)
	S0= PC.NIA=addr                                             PC-Out(S0)
	S0= PIDReg.Out=>IMem.PID                                    Premise(F3)
	S0= IMem.PID=pid                                            Path(S0,S0)
	S0= PC.NIA=>IMem.Addr                                       Premise(F4)
	S0= IMem.Addr=addr                                          Path(S0,S0)
	S0= IMem.RData={18,LI,1,1}                                  IMem-Read(S0,S0,S0)
	S0= IMem.RData=>IR.In                                       Premise(F5)
	S0= IR.In={18,LI,1,1}                                       Path(S0,S0)
	S0= IR.Out0_5=>CU.Op                                        Premise(F6)
	S0= IR.Out6_29=>Addr24Ext.In                                Premise(F7)
	S0= IR.Out30=>CU.AA                                         Premise(F8)
	S0= IR.Out31=>CU.LK                                         Premise(F9)
	S0= Addr24Ext.Out=>PC.In                                    Premise(F10)
	S0= PC.NIA=>LR.In                                           Premise(F11)
	S0= LR.In=addr                                              Path(S0,S0)
	S0= CtrlPIDReg=0                                            Premise(F12)
	S0= [PIDReg]=pid                                            PIDReg-Hold(S0,S0)
	S0= CtrlIMem=0                                              Premise(F13)
	S0= IMem[{pid,addr}]={18,LI,1,1}                            IMem-Hold(S0,S0)
	S0= CtrlPC=0                                                Premise(F14)
	S0= CtrlPCInc=1                                             Premise(F15)
	S0= PC[Out]=addr+4                                          PC-Inc(S0,S0,S0)
	S0= PC[CIA]=addr                                            PC-Inc(S0,S0,S0)
	S0= CtrlIR=1                                                Premise(F16)
	S0= [IR]={18,LI,1,1}                                        IR-Write(S0,S0)
	S0= CtrlLR=0                                                Premise(F17)

ID	S0= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S0= PIDReg.Out1_0={pid}[1:0]                                PIDReg-Out(S0)
	S0= PIDReg.Out4_0={pid}[4:0]                                PIDReg-Out(S0)
	S0= PC.NIA=addr+4                                           PC-Out(S0)
	S0= PC.CIA=addr                                             PC-Out(S0)
	S0= PC.CIA31_28=addr[31:28]                                 PC-Out(S0)
	S0= IR.Out0_5=18                                            IR-Out(S0)
	S0= IR.Out6_29=LI                                           IR-Out(S0)
	S0= IR.Out30=1                                              IR-Out(S0)
	S0= IR.Out31=1                                              IR-Out(S0)
	S0= PIDReg.Out=>IMem.PID                                    Premise(F18)
	S0= IMem.PID=pid                                            Path(S0,S0)
	S0= PC.NIA=>IMem.Addr                                       Premise(F19)
	S0= IMem.Addr=addr+4                                        Path(S0,S0)
	S0= IMem.RData=>IR.In                                       Premise(F20)
	S0= IR.Out0_5=>CU.Op                                        Premise(F21)
	S0= CU.Op=18                                                Path(S0,S0)
	S0= IR.Out6_29=>Addr24Ext.In                                Premise(F22)
	S0= Addr24Ext.In=LI                                         Path(S0,S0)
	S0= Addr24Ext.Out={8{LI[23]},LI}                            Addr24Ext-EXT(S0)
	S0= IR.Out30=>CU.AA                                         Premise(F23)
	S0= CU.AA=1                                                 Path(S0,S0)
	S0= IR.Out31=>CU.LK                                         Premise(F24)
	S0= CU.LK=1                                                 Path(S0,S0)
	S0= CU.Func=alu_add                                         CU(S0,S0)
	S0= Addr24Ext.Out=>PC.In                                    Premise(F25)
	S0= PC.In={8{LI[23]},LI}                                    Path(S0,S0)
	S0= PC.NIA=>LR.In                                           Premise(F26)
	S0= LR.In=addr+4                                            Path(S0,S0)
	S0= CtrlPIDReg=0                                            Premise(F27)
	S0= [PIDReg]=pid                                            PIDReg-Hold(S0,S0)
	S0= CtrlIMem=0                                              Premise(F28)
	S0= IMem[{pid,addr}]={18,LI,1,1}                            IMem-Hold(S0,S0)
	S0= CtrlPC=1                                                Premise(F29)
	S0= CtrlPCInc=0                                             Premise(F30)
	S0= PC[CIA]=addr                                            PC-Hold(S0,S0)
	S0= PC[Out]={8{LI[23]},LI}                                  PC-Write(S0,S0,S0)
	S0= CtrlIR=0                                                Premise(F31)
	S0= [IR]={18,LI,1,1}                                        IR-Hold(S0,S0)
	S0= CtrlLR=1                                                Premise(F32)
	S0= [LR]=addr+4                                             LR-Write(S0,S0)

EX	S0= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S0= PIDReg.Out1_0={pid}[1:0]                                PIDReg-Out(S0)
	S0= PIDReg.Out4_0={pid}[4:0]                                PIDReg-Out(S0)
	S0= PC.CIA=addr                                             PC-Out(S0)
	S0= PC.CIA31_28=addr[31:28]                                 PC-Out(S0)
	S0= PC.NIA={8{LI[23]},LI}                                   PC-Out(S0)
	S0= IR.Out0_5=18                                            IR-Out(S0)
	S0= IR.Out6_29=LI                                           IR-Out(S0)
	S0= IR.Out30=1                                              IR-Out(S0)
	S0= IR.Out31=1                                              IR-Out(S0)
	S0= LR.Out=addr+4                                           LR-Out(S0)
	S0= LR.Out1_0={addr+4}[1:0]                                 LR-Out(S0)
	S0= LR.Out4_0={addr+4}[4:0]                                 LR-Out(S0)
	S0= PIDReg.Out=>IMem.PID                                    Premise(F33)
	S0= IMem.PID=pid                                            Path(S0,S0)
	S0= PC.NIA=>IMem.Addr                                       Premise(F34)
	S0= IMem.Addr={8{LI[23]},LI}                                Path(S0,S0)
	S0= IMem.RData=>IR.In                                       Premise(F35)
	S0= IR.Out0_5=>CU.Op                                        Premise(F36)
	S0= CU.Op=18                                                Path(S0,S0)
	S0= IR.Out6_29=>Addr24Ext.In                                Premise(F37)
	S0= Addr24Ext.In=LI                                         Path(S0,S0)
	S0= Addr24Ext.Out={8{LI[23]},LI}                            Addr24Ext-EXT(S0)
	S0= IR.Out30=>CU.AA                                         Premise(F38)
	S0= CU.AA=1                                                 Path(S0,S0)
	S0= IR.Out31=>CU.LK                                         Premise(F39)
	S0= CU.LK=1                                                 Path(S0,S0)
	S0= CU.Func=alu_add                                         CU(S0,S0)
	S0= Addr24Ext.Out=>PC.In                                    Premise(F40)
	S0= PC.In={8{LI[23]},LI}                                    Path(S0,S0)
	S0= PC.NIA=>LR.In                                           Premise(F41)
	S0= LR.In={8{LI[23]},LI}                                    Path(S0,S0)
	S0= CtrlPIDReg=0                                            Premise(F42)
	S0= [PIDReg]=pid                                            PIDReg-Hold(S0,S0)
	S0= CtrlIMem=0                                              Premise(F43)
	S0= IMem[{pid,addr}]={18,LI,1,1}                            IMem-Hold(S0,S0)
	S0= CtrlPC=0                                                Premise(F44)
	S0= CtrlPCInc=0                                             Premise(F45)
	S0= PC[CIA]=addr                                            PC-Hold(S0,S0)
	S0= PC[Out]={8{LI[23]},LI}                                  PC-Hold(S0,S0,S0)
	S0= CtrlIR=0                                                Premise(F46)
	S0= [IR]={18,LI,1,1}                                        IR-Hold(S0,S0)
	S0= CtrlLR=0                                                Premise(F47)
	S0= [LR]=addr+4                                             LR-Hold(S0,S0)

MEM	S0= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S0= PIDReg.Out1_0={pid}[1:0]                                PIDReg-Out(S0)
	S0= PIDReg.Out4_0={pid}[4:0]                                PIDReg-Out(S0)
	S0= PC.CIA=addr                                             PC-Out(S0)
	S0= PC.CIA31_28=addr[31:28]                                 PC-Out(S0)
	S0= PC.NIA={8{LI[23]},LI}                                   PC-Out(S0)
	S0= IR.Out0_5=18                                            IR-Out(S0)
	S0= IR.Out6_29=LI                                           IR-Out(S0)
	S0= IR.Out30=1                                              IR-Out(S0)
	S0= IR.Out31=1                                              IR-Out(S0)
	S0= LR.Out=addr+4                                           LR-Out(S0)
	S0= LR.Out1_0={addr+4}[1:0]                                 LR-Out(S0)
	S0= LR.Out4_0={addr+4}[4:0]                                 LR-Out(S0)
	S0= PIDReg.Out=>IMem.PID                                    Premise(F48)
	S0= IMem.PID=pid                                            Path(S0,S0)
	S0= PC.NIA=>IMem.Addr                                       Premise(F49)
	S0= IMem.Addr={8{LI[23]},LI}                                Path(S0,S0)
	S0= IMem.RData=>IR.In                                       Premise(F50)
	S0= IR.Out0_5=>CU.Op                                        Premise(F51)
	S0= CU.Op=18                                                Path(S0,S0)
	S0= IR.Out6_29=>Addr24Ext.In                                Premise(F52)
	S0= Addr24Ext.In=LI                                         Path(S0,S0)
	S0= Addr24Ext.Out={8{LI[23]},LI}                            Addr24Ext-EXT(S0)
	S0= IR.Out30=>CU.AA                                         Premise(F53)
	S0= CU.AA=1                                                 Path(S0,S0)
	S0= IR.Out31=>CU.LK                                         Premise(F54)
	S0= CU.LK=1                                                 Path(S0,S0)
	S0= CU.Func=alu_add                                         CU(S0,S0)
	S0= Addr24Ext.Out=>PC.In                                    Premise(F55)
	S0= PC.In={8{LI[23]},LI}                                    Path(S0,S0)
	S0= PC.NIA=>LR.In                                           Premise(F56)
	S0= LR.In={8{LI[23]},LI}                                    Path(S0,S0)
	S0= CtrlPIDReg=0                                            Premise(F57)
	S0= [PIDReg]=pid                                            PIDReg-Hold(S0,S0)
	S0= CtrlIMem=0                                              Premise(F58)
	S0= IMem[{pid,addr}]={18,LI,1,1}                            IMem-Hold(S0,S0)
	S0= CtrlPC=0                                                Premise(F59)
	S0= CtrlPCInc=0                                             Premise(F60)
	S0= PC[CIA]=addr                                            PC-Hold(S0,S0)
	S0= PC[Out]={8{LI[23]},LI}                                  PC-Hold(S0,S0,S0)
	S0= CtrlIR=0                                                Premise(F61)
	S0= [IR]={18,LI,1,1}                                        IR-Hold(S0,S0)
	S0= CtrlLR=0                                                Premise(F62)
	S0= [LR]=addr+4                                             LR-Hold(S0,S0)

WB	S0= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S0= PIDReg.Out1_0={pid}[1:0]                                PIDReg-Out(S0)
	S0= PIDReg.Out4_0={pid}[4:0]                                PIDReg-Out(S0)
	S0= PC.CIA=addr                                             PC-Out(S0)
	S0= PC.CIA31_28=addr[31:28]                                 PC-Out(S0)
	S0= PC.NIA={8{LI[23]},LI}                                   PC-Out(S0)
	S0= IR.Out0_5=18                                            IR-Out(S0)
	S0= IR.Out6_29=LI                                           IR-Out(S0)
	S0= IR.Out30=1                                              IR-Out(S0)
	S0= IR.Out31=1                                              IR-Out(S0)
	S0= LR.Out=addr+4                                           LR-Out(S0)
	S0= LR.Out1_0={addr+4}[1:0]                                 LR-Out(S0)
	S0= LR.Out4_0={addr+4}[4:0]                                 LR-Out(S0)
	S0= PIDReg.Out=>IMem.PID                                    Premise(F63)
	S0= IMem.PID=pid                                            Path(S0,S0)
	S0= PC.NIA=>IMem.Addr                                       Premise(F64)
	S0= IMem.Addr={8{LI[23]},LI}                                Path(S0,S0)
	S0= IMem.RData=>IR.In                                       Premise(F65)
	S0= IR.Out0_5=>CU.Op                                        Premise(F66)
	S0= CU.Op=18                                                Path(S0,S0)
	S0= IR.Out6_29=>Addr24Ext.In                                Premise(F67)
	S0= Addr24Ext.In=LI                                         Path(S0,S0)
	S0= Addr24Ext.Out={8{LI[23]},LI}                            Addr24Ext-EXT(S0)
	S0= IR.Out30=>CU.AA                                         Premise(F68)
	S0= CU.AA=1                                                 Path(S0,S0)
	S0= IR.Out31=>CU.LK                                         Premise(F69)
	S0= CU.LK=1                                                 Path(S0,S0)
	S0= CU.Func=alu_add                                         CU(S0,S0)
	S0= Addr24Ext.Out=>PC.In                                    Premise(F70)
	S0= PC.In={8{LI[23]},LI}                                    Path(S0,S0)
	S0= PC.NIA=>LR.In                                           Premise(F71)
	S0= LR.In={8{LI[23]},LI}                                    Path(S0,S0)
	S0= CtrlPIDReg=0                                            Premise(F72)
	S0= [PIDReg]=pid                                            PIDReg-Hold(S0,S0)
	S0= CtrlIMem=0                                              Premise(F73)
	S0= IMem[{pid,addr}]={18,LI,1,1}                            IMem-Hold(S0,S0)
	S0= CtrlPC=0                                                Premise(F74)
	S0= CtrlPCInc=0                                             Premise(F75)
	S0= PC[CIA]=addr                                            PC-Hold(S0,S0)
	S0= PC[Out]={8{LI[23]},LI}                                  PC-Hold(S0,S0,S0)
	S0= CtrlIR=0                                                Premise(F76)
	S0= [IR]={18,LI,1,1}                                        IR-Hold(S0,S0)
	S0= CtrlLR=0                                                Premise(F77)
	S0= [LR]=addr+4                                             LR-Hold(S0,S0)

POST	S0= [PIDReg]=pid                                            PIDReg-Hold(S0,S0)
	S0= IMem[{pid,addr}]={18,LI,1,1}                            IMem-Hold(S0,S0)
	S0= PC[CIA]=addr                                            PC-Hold(S0,S0)
	S0= PC[Out]={8{LI[23]},LI}                                  PC-Hold(S0,S0,S0)
	S0= [IR]={18,LI,1,1}                                        IR-Hold(S0,S0)
	S0= [LR]=addr+4                                             LR-Hold(S0,S0)

