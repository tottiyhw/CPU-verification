
------------------------------------- Proof -------------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={18,LI,1,1}                            Premise(F2)

IF	S3= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S4= PC.NIA=addr                                             PC-Out(S1)
	S5= PIDReg.Out=>IMem.PID                                    Premise(F3)
	S6= IMem.PID=pid                                            Path(S3,S5)
	S7= PC.NIA=>IMem.Addr                                       Premise(F4)
	S8= IMem.Addr=addr                                          Path(S4,S7)
	S9= IMem.RData={18,LI,1,1}                                  IMem-Read(S6,S8,S2)
	S10= IMem.RData=>IR.In                                      Premise(F5)
	S11= IR.In={18,LI,1,1}                                      Path(S9,S10)
	S12= CtrlPC=0                                               Premise(F14)
	S13= CtrlPCInc=1                                            Premise(F15)
	S14= PC[Out]=addr+4                                         PC-Inc(S1,S12,S13)
	S15= CtrlIR=1                                               Premise(F16)
	S16= [IR]={18,LI,1,1}                                       IR-Write(S11,S15)

ID	S17= PC.NIA=addr+4                                          PC-Out(S14)
	S18= IR.Out6_29=LI                                          IR-Out(S16)
	S19= IR.Out6_29=>Addr24Ext.In                               Premise(F22)
	S20= Addr24Ext.In=LI                                        Path(S18,S19)
	S21= Addr24Ext.Out={8{LI[23]},LI}                           Addr24Ext-EXT(S20)
	S22= Addr24Ext.Out=>PC.In                                   Premise(F25)
	S23= PC.In={8{LI[23]},LI}                                   Path(S21,S22)
	S24= PC.NIA=>LR.In                                          Premise(F26)
	S25= LR.In=addr+4                                           Path(S17,S24)
	S26= CtrlPC=1                                               Premise(F29)
	S27= CtrlPCInc=0                                            Premise(F30)
	S28= PC[Out]={8{LI[23]},LI}                                 PC-Write(S23,S26,S27)
	S29= CtrlLR=1                                               Premise(F32)
	S30= [LR]=addr+4                                            LR-Write(S25,S29)

EX	S31= CtrlPC=0                                               Premise(F44)
	S32= CtrlPCInc=0                                            Premise(F45)
	S33= PC[Out]={8{LI[23]},LI}                                 PC-Hold(S28,S31,S32)
	S34= CtrlLR=0                                               Premise(F47)
	S35= [LR]=addr+4                                            LR-Hold(S30,S34)

MEM	S36= CtrlPC=0                                               Premise(F59)
	S37= CtrlPCInc=0                                            Premise(F60)
	S38= PC[Out]={8{LI[23]},LI}                                 PC-Hold(S33,S36,S37)
	S39= CtrlLR=0                                               Premise(F62)
	S40= [LR]=addr+4                                            LR-Hold(S35,S39)

WB	S41= CtrlPC=0                                               Premise(F74)
	S42= CtrlPCInc=0                                            Premise(F75)
	S43= PC[Out]={8{LI[23]},LI}                                 PC-Hold(S38,S41,S42)
	S44= CtrlLR=0                                               Premise(F77)
	S45= [LR]=addr+4                                            LR-Hold(S40,S44)

POST	S43= PC[Out]={8{LI[23]},LI}                                 PC-Hold(S38,S41,S42)
	S45= [LR]=addr+4                                            LR-Hold(S40,S44)

