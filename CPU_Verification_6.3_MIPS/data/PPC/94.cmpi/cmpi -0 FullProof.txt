
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S0= PC[Out]=addr                                            Premise(F1)
	S0= IMem[{pid,addr}]={11,crfD,0,rA,SIMM}                    Premise(F2)
	S0= GPRegs[rA]=a                                            Premise(F3)
	S0= XER[SO]=so                                              Premise(F4)

IF	S0= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S0= PIDReg.Out1_0={pid}[1:0]                                PIDReg-Out(S0)
	S0= PIDReg.Out4_0={pid}[4:0]                                PIDReg-Out(S0)
	S0= PC.NIA=addr                                             PC-Out(S0)
	S0= XER.SOOut=so                                            XER-SO-Out(S0)
	S0= PIDReg.Out=>IMem.PID                                    Premise(F5)
	S0= IMem.PID=pid                                            Path(S0,S0)
	S0= PC.NIA=>IMem.Addr                                       Premise(F6)
	S0= IMem.Addr=addr                                          Path(S0,S0)
	S0= IMem.RData={11,crfD,0,rA,SIMM}                          IMem-Read(S0,S0,S0)
	S0= IMem.RData=>IR.In                                       Premise(F7)
	S0= IR.In={11,crfD,0,rA,SIMM}                               Path(S0,S0)
	S0= IR.Out0_5=>CU.Op                                        Premise(F8)
	S0= IR.Out11_15=>GPRegs.RReg1                               Premise(F9)
	S0= IR.Out16_31=>IMMEXT.In                                  Premise(F10)
	S0= GPRegs.RData1=>A.In                                     Premise(F11)
	S0= IMMEXT.Out=>B.In                                        Premise(F12)
	S0= A.Out=>CMPU.A                                           Premise(F13)
	S0= B.Out=>CMPU.B                                           Premise(F14)
	S0= CU.Func=>CMPU.Func                                      Premise(F15)
	S0= CMPU.Out=>DataCmb.A                                     Premise(F16)
	S0= XER.SOOut=>DataCmb.B                                    Premise(F17)
	S0= DataCmb.B=so                                            Path(S0,S0)
	S0= DataCmb.Out=>DR4bit.In                                  Premise(F18)
	S0= IR.Out6_8=>CRRegs.WReg                                  Premise(F19)
	S0= DR4bit.Out=>CRRegs.WData                                Premise(F20)
	S0= CtrlPIDReg=0                                            Premise(F21)
	S0= [PIDReg]=pid                                            PIDReg-Hold(S0,S0)
	S0= CtrlIMem=0                                              Premise(F22)
	S0= IMem[{pid,addr}]={11,crfD,0,rA,SIMM}                    IMem-Hold(S0,S0)
	S0= CtrlPC=0                                                Premise(F23)
	S0= CtrlPCInc=1                                             Premise(F24)
	S0= PC[Out]=addr+4                                          PC-Inc(S0,S0,S0)
	S0= PC[CIA]=addr                                            PC-Inc(S0,S0,S0)
	S0= CtrlIR=1                                                Premise(F25)
	S0= [IR]={11,crfD,0,rA,SIMM}                                IR-Write(S0,S0)
	S0= CtrlGPRegs=0                                            Premise(F26)
	S0= GPRegs[rA]=a                                            GPRegs-Hold(S0,S0)
	S0= CtrlA=0                                                 Premise(F27)
	S0= CtrlB=0                                                 Premise(F28)
	S0= CtrlXERSO=0                                             Premise(F29)
	S0= XER[SO]=so                                              XER-SO-Hold(S0,S0)
	S0= CtrlXEROV=0                                             Premise(F30)
	S0= CtrlXERCA=0                                             Premise(F31)
	S0= CtrlDR4bit=0                                            Premise(F32)
	S0= CtrlCRRegs=0                                            Premise(F33)
	S0= CtrlCRRegsCR0=0                                         Premise(F34)
	S0= CtrlCRRegsW4bitRegs=0                                   Premise(F35)
	S0= CtrlCRRegsW1bitRegs=0                                   Premise(F36)

ID	S0= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S0= PIDReg.Out1_0={pid}[1:0]                                PIDReg-Out(S0)
	S0= PIDReg.Out4_0={pid}[4:0]                                PIDReg-Out(S0)
	S0= PC.NIA=addr+4                                           PC-Out(S0)
	S0= PC.CIA=addr                                             PC-Out(S0)
	S0= PC.CIA31_28=addr[31:28]                                 PC-Out(S0)
	S0= IR.Out0_5=11                                            IR-Out(S0)
	S0= IR.Out6_8=crfD                                          IR-Out(S0)
	S0= IR.Out11_15=rA                                          IR-Out(S0)
	S0= IR.Out16_31=SIMM                                        IR-Out(S0)
	S0= XER.SOOut=so                                            XER-SO-Out(S0)
	S0= PIDReg.Out=>IMem.PID                                    Premise(F37)
	S0= IMem.PID=pid                                            Path(S0,S0)
	S0= PC.NIA=>IMem.Addr                                       Premise(F38)
	S0= IMem.Addr=addr+4                                        Path(S0,S0)
	S0= IMem.RData=>IR.In                                       Premise(F39)
	S0= IR.Out0_5=>CU.Op                                        Premise(F40)
	S0= CU.Op=11                                                Path(S0,S0)
	S0= CU.Func=cmpu_cmps                                       CU(S0)
	S0= IR.Out11_15=>GPRegs.RReg1                               Premise(F41)
	S0= GPRegs.RReg1=rA                                         Path(S0,S0)
	S0= GPRegs.RData1=a                                         GPRegs-Read(S0,S0)
	S0= IR.Out16_31=>IMMEXT.In                                  Premise(F42)
	S0= IMMEXT.In=SIMM                                          Path(S0,S0)
	S0= IMMEXT.Out={16{SIMM[15]},SIMM}                          IMMEXT(S0)
	S0= GPRegs.RData1=>A.In                                     Premise(F43)
	S0= A.In=a                                                  Path(S0,S0)
	S0= IMMEXT.Out=>B.In                                        Premise(F44)
	S0= B.In={16{SIMM[15]},SIMM}                                Path(S0,S0)
	S0= A.Out=>CMPU.A                                           Premise(F45)
	S0= B.Out=>CMPU.B                                           Premise(F46)
	S0= CU.Func=>CMPU.Func                                      Premise(F47)
	S0= CMPU.Func=cmpu_cmps                                     Path(S0,S0)
	S0= CMPU.Out=>DataCmb.A                                     Premise(F48)
	S0= XER.SOOut=>DataCmb.B                                    Premise(F49)
	S0= DataCmb.B=so                                            Path(S0,S0)
	S0= DataCmb.Out=>DR4bit.In                                  Premise(F50)
	S0= IR.Out6_8=>CRRegs.WReg                                  Premise(F51)
	S0= CRRegs.WReg=crfD                                        Path(S0,S0)
	S0= DR4bit.Out=>CRRegs.WData                                Premise(F52)
	S0= CtrlPIDReg=0                                            Premise(F53)
	S0= [PIDReg]=pid                                            PIDReg-Hold(S0,S0)
	S0= CtrlIMem=0                                              Premise(F54)
	S0= IMem[{pid,addr}]={11,crfD,0,rA,SIMM}                    IMem-Hold(S0,S0)
	S0= CtrlPC=0                                                Premise(F55)
	S0= CtrlPCInc=0                                             Premise(F56)
	S0= PC[CIA]=addr                                            PC-Hold(S0,S0)
	S0= PC[Out]=addr+4                                          PC-Hold(S0,S0,S0)
	S0= CtrlIR=0                                                Premise(F57)
	S0= [IR]={11,crfD,0,rA,SIMM}                                IR-Hold(S0,S0)
	S0= CtrlGPRegs=0                                            Premise(F58)
	S0= GPRegs[rA]=a                                            GPRegs-Hold(S0,S0)
	S0= CtrlA=1                                                 Premise(F59)
	S0= [A]=a                                                   A-Write(S0,S0)
	S0= CtrlB=1                                                 Premise(F60)
	S0= [B]={16{SIMM[15]},SIMM}                                 B-Write(S0,S0)
	S0= CtrlXERSO=0                                             Premise(F61)
	S0= XER[SO]=so                                              XER-SO-Hold(S0,S0)
	S0= CtrlXEROV=0                                             Premise(F62)
	S0= CtrlXERCA=0                                             Premise(F63)
	S0= CtrlDR4bit=0                                            Premise(F64)
	S0= CtrlCRRegs=0                                            Premise(F65)
	S0= CtrlCRRegsCR0=0                                         Premise(F66)
	S0= CtrlCRRegsW4bitRegs=0                                   Premise(F67)
	S0= CtrlCRRegsW1bitRegs=0                                   Premise(F68)

EX	S0= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S0= PIDReg.Out1_0={pid}[1:0]                                PIDReg-Out(S0)
	S0= PIDReg.Out4_0={pid}[4:0]                                PIDReg-Out(S0)
	S0= PC.CIA=addr                                             PC-Out(S0)
	S0= PC.CIA31_28=addr[31:28]                                 PC-Out(S0)
	S0= PC.NIA=addr+4                                           PC-Out(S0)
	S0= IR.Out0_5=11                                            IR-Out(S0)
	S0= IR.Out6_8=crfD                                          IR-Out(S0)
	S0= IR.Out11_15=rA                                          IR-Out(S0)
	S0= IR.Out16_31=SIMM                                        IR-Out(S0)
	S0= A.Out=a                                                 A-Out(S0)
	S0= A.Out1_0={a}[1:0]                                       A-Out(S0)
	S0= A.Out4_0={a}[4:0]                                       A-Out(S0)
	S0= B.Out={16{SIMM[15]},SIMM}                               B-Out(S0)
	S0= B.Out1_0={{16{SIMM[15]},SIMM}}[1:0]                     B-Out(S0)
	S0= B.Out4_0={{16{SIMM[15]},SIMM}}[4:0]                     B-Out(S0)
	S0= XER.SOOut=so                                            XER-SO-Out(S0)
	S0= PIDReg.Out=>IMem.PID                                    Premise(F69)
	S0= IMem.PID=pid                                            Path(S0,S0)
	S0= PC.NIA=>IMem.Addr                                       Premise(F70)
	S0= IMem.Addr=addr+4                                        Path(S0,S0)
	S0= IMem.RData=>IR.In                                       Premise(F71)
	S0= IR.Out0_5=>CU.Op                                        Premise(F72)
	S0= CU.Op=11                                                Path(S0,S0)
	S0= CU.Func=cmpu_cmps                                       CU(S0)
	S0= IR.Out11_15=>GPRegs.RReg1                               Premise(F73)
	S0= GPRegs.RReg1=rA                                         Path(S0,S0)
	S0= GPRegs.RData1=a                                         GPRegs-Read(S0,S0)
	S0= IR.Out16_31=>IMMEXT.In                                  Premise(F74)
	S0= IMMEXT.In=SIMM                                          Path(S0,S0)
	S0= IMMEXT.Out={16{SIMM[15]},SIMM}                          IMMEXT(S0)
	S0= GPRegs.RData1=>A.In                                     Premise(F75)
	S0= A.In=a                                                  Path(S0,S0)
	S0= IMMEXT.Out=>B.In                                        Premise(F76)
	S0= B.In={16{SIMM[15]},SIMM}                                Path(S0,S0)
	S0= A.Out=>CMPU.A                                           Premise(F77)
	S0= CMPU.A=a                                                Path(S0,S0)
	S0= B.Out=>CMPU.B                                           Premise(F78)
	S0= CMPU.B={16{SIMM[15]},SIMM}                              Path(S0,S0)
	S0= CU.Func=>CMPU.Func                                      Premise(F79)
	S0= CMPU.Func=cmpu_cmps                                     Path(S0,S0)
	S0= CMPU.Out=CompareS(a,{16{SIMM[15]},SIMM})                CMPU-CMPS(S0,S0)
	S0= CMPU.Out=>DataCmb.A                                     Premise(F80)
	S0= DataCmb.A=CompareS(a,{16{SIMM[15]},SIMM})               Path(S0,S0)
	S0= XER.SOOut=>DataCmb.B                                    Premise(F81)
	S0= DataCmb.B=so                                            Path(S0,S0)
	S0= DataCmb.Out={CompareS(a,{16{SIMM[15]},SIMM}),so}        DataCmb(S0,S0)
	S0= DataCmb.Out=>DR4bit.In                                  Premise(F82)
	S0= DR4bit.In={CompareS(a,{16{SIMM[15]},SIMM}),so}          Path(S0,S0)
	S0= IR.Out6_8=>CRRegs.WReg                                  Premise(F83)
	S0= CRRegs.WReg=crfD                                        Path(S0,S0)
	S0= DR4bit.Out=>CRRegs.WData                                Premise(F84)
	S0= CtrlPIDReg=0                                            Premise(F85)
	S0= [PIDReg]=pid                                            PIDReg-Hold(S0,S0)
	S0= CtrlIMem=0                                              Premise(F86)
	S0= IMem[{pid,addr}]={11,crfD,0,rA,SIMM}                    IMem-Hold(S0,S0)
	S0= CtrlPC=0                                                Premise(F87)
	S0= CtrlPCInc=0                                             Premise(F88)
	S0= PC[CIA]=addr                                            PC-Hold(S0,S0)
	S0= PC[Out]=addr+4                                          PC-Hold(S0,S0,S0)
	S0= CtrlIR=0                                                Premise(F89)
	S0= [IR]={11,crfD,0,rA,SIMM}                                IR-Hold(S0,S0)
	S0= CtrlGPRegs=0                                            Premise(F90)
	S0= GPRegs[rA]=a                                            GPRegs-Hold(S0,S0)
	S0= CtrlA=0                                                 Premise(F91)
	S0= [A]=a                                                   A-Hold(S0,S0)
	S0= CtrlB=0                                                 Premise(F92)
	S0= [B]={16{SIMM[15]},SIMM}                                 B-Hold(S0,S0)
	S0= CtrlXERSO=0                                             Premise(F93)
	S0= XER[SO]=so                                              XER-SO-Hold(S0,S0)
	S0= CtrlXEROV=0                                             Premise(F94)
	S0= CtrlXERCA=0                                             Premise(F95)
	S0= CtrlDR4bit=1                                            Premise(F96)
	S0= [DR4bit]={CompareS(a,{16{SIMM[15]},SIMM}),so}           DR4bit-Write(S0,S0)
	S0= CtrlCRRegs=0                                            Premise(F97)
	S0= CtrlCRRegsCR0=0                                         Premise(F98)
	S0= CtrlCRRegsW4bitRegs=0                                   Premise(F99)
	S0= CtrlCRRegsW1bitRegs=0                                   Premise(F100)

MEM	S0= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S0= PIDReg.Out1_0={pid}[1:0]                                PIDReg-Out(S0)
	S0= PIDReg.Out4_0={pid}[4:0]                                PIDReg-Out(S0)
	S0= PC.CIA=addr                                             PC-Out(S0)
	S0= PC.CIA31_28=addr[31:28]                                 PC-Out(S0)
	S0= PC.NIA=addr+4                                           PC-Out(S0)
	S0= IR.Out0_5=11                                            IR-Out(S0)
	S0= IR.Out6_8=crfD                                          IR-Out(S0)
	S0= IR.Out11_15=rA                                          IR-Out(S0)
	S0= IR.Out16_31=SIMM                                        IR-Out(S0)
	S0= A.Out=a                                                 A-Out(S0)
	S0= A.Out1_0={a}[1:0]                                       A-Out(S0)
	S0= A.Out4_0={a}[4:0]                                       A-Out(S0)
	S0= B.Out={16{SIMM[15]},SIMM}                               B-Out(S0)
	S0= B.Out1_0={{16{SIMM[15]},SIMM}}[1:0]                     B-Out(S0)
	S0= B.Out4_0={{16{SIMM[15]},SIMM}}[4:0]                     B-Out(S0)
	S0= XER.SOOut=so                                            XER-SO-Out(S0)
	S0= DR4bit.Out={CompareS(a,{16{SIMM[15]},SIMM}),so}         DR4bit-Out(S0)
	S0= DR4bit.Out1_0={{CompareS(a,{16{SIMM[15]},SIMM}),so}}[1:0]DR4bit-Out(S0)
	S0= DR4bit.Out4_0={{CompareS(a,{16{SIMM[15]},SIMM}),so}}[4:0]DR4bit-Out(S0)
	S0= PIDReg.Out=>IMem.PID                                    Premise(F101)
	S0= IMem.PID=pid                                            Path(S0,S0)
	S0= PC.NIA=>IMem.Addr                                       Premise(F102)
	S0= IMem.Addr=addr+4                                        Path(S0,S0)
	S0= IMem.RData=>IR.In                                       Premise(F103)
	S0= IR.Out0_5=>CU.Op                                        Premise(F104)
	S0= CU.Op=11                                                Path(S0,S0)
	S0= CU.Func=cmpu_cmps                                       CU(S0)
	S0= IR.Out11_15=>GPRegs.RReg1                               Premise(F105)
	S0= GPRegs.RReg1=rA                                         Path(S0,S0)
	S0= GPRegs.RData1=a                                         GPRegs-Read(S0,S0)
	S0= IR.Out16_31=>IMMEXT.In                                  Premise(F106)
	S0= IMMEXT.In=SIMM                                          Path(S0,S0)
	S0= IMMEXT.Out={16{SIMM[15]},SIMM}                          IMMEXT(S0)
	S0= GPRegs.RData1=>A.In                                     Premise(F107)
	S0= A.In=a                                                  Path(S0,S0)
	S0= IMMEXT.Out=>B.In                                        Premise(F108)
	S0= B.In={16{SIMM[15]},SIMM}                                Path(S0,S0)
	S0= A.Out=>CMPU.A                                           Premise(F109)
	S0= CMPU.A=a                                                Path(S0,S0)
	S0= B.Out=>CMPU.B                                           Premise(F110)
	S0= CMPU.B={16{SIMM[15]},SIMM}                              Path(S0,S0)
	S0= CU.Func=>CMPU.Func                                      Premise(F111)
	S0= CMPU.Func=cmpu_cmps                                     Path(S0,S0)
	S0= CMPU.Out=CompareS(a,{16{SIMM[15]},SIMM})                CMPU-CMPS(S0,S0)
	S0= CMPU.Out=>DataCmb.A                                     Premise(F112)
	S0= DataCmb.A=CompareS(a,{16{SIMM[15]},SIMM})               Path(S0,S0)
	S0= XER.SOOut=>DataCmb.B                                    Premise(F113)
	S0= DataCmb.B=so                                            Path(S0,S0)
	S0= DataCmb.Out={CompareS(a,{16{SIMM[15]},SIMM}),so}        DataCmb(S0,S0)
	S0= DataCmb.Out=>DR4bit.In                                  Premise(F114)
	S0= DR4bit.In={CompareS(a,{16{SIMM[15]},SIMM}),so}          Path(S0,S0)
	S0= IR.Out6_8=>CRRegs.WReg                                  Premise(F115)
	S0= CRRegs.WReg=crfD                                        Path(S0,S0)
	S0= DR4bit.Out=>CRRegs.WData                                Premise(F116)
	S0= CRRegs.WData={CompareS(a,{16{SIMM[15]},SIMM}),so}       Path(S0,S0)
	S0= CtrlPIDReg=0                                            Premise(F117)
	S0= [PIDReg]=pid                                            PIDReg-Hold(S0,S0)
	S0= CtrlIMem=0                                              Premise(F118)
	S0= IMem[{pid,addr}]={11,crfD,0,rA,SIMM}                    IMem-Hold(S0,S0)
	S0= CtrlPC=0                                                Premise(F119)
	S0= CtrlPCInc=0                                             Premise(F120)
	S0= PC[CIA]=addr                                            PC-Hold(S0,S0)
	S0= PC[Out]=addr+4                                          PC-Hold(S0,S0,S0)
	S0= CtrlIR=0                                                Premise(F121)
	S0= [IR]={11,crfD,0,rA,SIMM}                                IR-Hold(S0,S0)
	S0= CtrlGPRegs=0                                            Premise(F122)
	S0= GPRegs[rA]=a                                            GPRegs-Hold(S0,S0)
	S0= CtrlA=0                                                 Premise(F123)
	S0= [A]=a                                                   A-Hold(S0,S0)
	S0= CtrlB=0                                                 Premise(F124)
	S0= [B]={16{SIMM[15]},SIMM}                                 B-Hold(S0,S0)
	S0= CtrlXERSO=0                                             Premise(F125)
	S0= XER[SO]=so                                              XER-SO-Hold(S0,S0)
	S0= CtrlXEROV=0                                             Premise(F126)
	S0= CtrlXERCA=0                                             Premise(F127)
	S0= CtrlDR4bit=0                                            Premise(F128)
	S0= [DR4bit]={CompareS(a,{16{SIMM[15]},SIMM}),so}           DR4bit-Hold(S0,S0)
	S0= CtrlCRRegs=0                                            Premise(F129)
	S0= CtrlCRRegsCR0=0                                         Premise(F130)
	S0= CtrlCRRegsW4bitRegs=0                                   Premise(F131)
	S0= CtrlCRRegsW1bitRegs=0                                   Premise(F132)

WB	S0= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S0= PIDReg.Out1_0={pid}[1:0]                                PIDReg-Out(S0)
	S0= PIDReg.Out4_0={pid}[4:0]                                PIDReg-Out(S0)
	S0= PC.CIA=addr                                             PC-Out(S0)
	S0= PC.CIA31_28=addr[31:28]                                 PC-Out(S0)
	S0= PC.NIA=addr+4                                           PC-Out(S0)
	S0= IR.Out0_5=11                                            IR-Out(S0)
	S0= IR.Out6_8=crfD                                          IR-Out(S0)
	S0= IR.Out11_15=rA                                          IR-Out(S0)
	S0= IR.Out16_31=SIMM                                        IR-Out(S0)
	S0= A.Out=a                                                 A-Out(S0)
	S0= A.Out1_0={a}[1:0]                                       A-Out(S0)
	S0= A.Out4_0={a}[4:0]                                       A-Out(S0)
	S0= B.Out={16{SIMM[15]},SIMM}                               B-Out(S0)
	S0= B.Out1_0={{16{SIMM[15]},SIMM}}[1:0]                     B-Out(S0)
	S0= B.Out4_0={{16{SIMM[15]},SIMM}}[4:0]                     B-Out(S0)
	S0= XER.SOOut=so                                            XER-SO-Out(S0)
	S0= DR4bit.Out={CompareS(a,{16{SIMM[15]},SIMM}),so}         DR4bit-Out(S0)
	S0= DR4bit.Out1_0={{CompareS(a,{16{SIMM[15]},SIMM}),so}}[1:0]DR4bit-Out(S0)
	S0= DR4bit.Out4_0={{CompareS(a,{16{SIMM[15]},SIMM}),so}}[4:0]DR4bit-Out(S0)
	S0= PIDReg.Out=>IMem.PID                                    Premise(F133)
	S0= IMem.PID=pid                                            Path(S0,S0)
	S0= PC.NIA=>IMem.Addr                                       Premise(F134)
	S0= IMem.Addr=addr+4                                        Path(S0,S0)
	S0= IMem.RData=>IR.In                                       Premise(F135)
	S0= IR.Out0_5=>CU.Op                                        Premise(F136)
	S0= CU.Op=11                                                Path(S0,S0)
	S0= CU.Func=cmpu_cmps                                       CU(S0)
	S0= IR.Out11_15=>GPRegs.RReg1                               Premise(F137)
	S0= GPRegs.RReg1=rA                                         Path(S0,S0)
	S0= GPRegs.RData1=a                                         GPRegs-Read(S0,S0)
	S0= IR.Out16_31=>IMMEXT.In                                  Premise(F138)
	S0= IMMEXT.In=SIMM                                          Path(S0,S0)
	S0= IMMEXT.Out={16{SIMM[15]},SIMM}                          IMMEXT(S0)
	S0= GPRegs.RData1=>A.In                                     Premise(F139)
	S0= A.In=a                                                  Path(S0,S0)
	S0= IMMEXT.Out=>B.In                                        Premise(F140)
	S0= B.In={16{SIMM[15]},SIMM}                                Path(S0,S0)
	S0= A.Out=>CMPU.A                                           Premise(F141)
	S0= CMPU.A=a                                                Path(S0,S0)
	S0= B.Out=>CMPU.B                                           Premise(F142)
	S0= CMPU.B={16{SIMM[15]},SIMM}                              Path(S0,S0)
	S0= CU.Func=>CMPU.Func                                      Premise(F143)
	S0= CMPU.Func=cmpu_cmps                                     Path(S0,S0)
	S0= CMPU.Out=CompareS(a,{16{SIMM[15]},SIMM})                CMPU-CMPS(S0,S0)
	S0= CMPU.Out=>DataCmb.A                                     Premise(F144)
	S0= DataCmb.A=CompareS(a,{16{SIMM[15]},SIMM})               Path(S0,S0)
	S0= XER.SOOut=>DataCmb.B                                    Premise(F145)
	S0= DataCmb.B=so                                            Path(S0,S0)
	S0= DataCmb.Out={CompareS(a,{16{SIMM[15]},SIMM}),so}        DataCmb(S0,S0)
	S0= DataCmb.Out=>DR4bit.In                                  Premise(F146)
	S0= DR4bit.In={CompareS(a,{16{SIMM[15]},SIMM}),so}          Path(S0,S0)
	S0= IR.Out6_8=>CRRegs.WReg                                  Premise(F147)
	S0= CRRegs.WReg=crfD                                        Path(S0,S0)
	S0= DR4bit.Out=>CRRegs.WData                                Premise(F148)
	S0= CRRegs.WData={CompareS(a,{16{SIMM[15]},SIMM}),so}       Path(S0,S0)
	S0= CtrlPIDReg=0                                            Premise(F149)
	S0= [PIDReg]=pid                                            PIDReg-Hold(S0,S0)
	S0= CtrlIMem=0                                              Premise(F150)
	S0= IMem[{pid,addr}]={11,crfD,0,rA,SIMM}                    IMem-Hold(S0,S0)
	S0= CtrlPC=0                                                Premise(F151)
	S0= CtrlPCInc=0                                             Premise(F152)
	S0= PC[CIA]=addr                                            PC-Hold(S0,S0)
	S0= PC[Out]=addr+4                                          PC-Hold(S0,S0,S0)
	S0= CtrlIR=0                                                Premise(F153)
	S0= [IR]={11,crfD,0,rA,SIMM}                                IR-Hold(S0,S0)
	S0= CtrlGPRegs=0                                            Premise(F154)
	S0= GPRegs[rA]=a                                            GPRegs-Hold(S0,S0)
	S0= CtrlA=0                                                 Premise(F155)
	S0= [A]=a                                                   A-Hold(S0,S0)
	S0= CtrlB=0                                                 Premise(F156)
	S0= [B]={16{SIMM[15]},SIMM}                                 B-Hold(S0,S0)
	S0= CtrlXERSO=0                                             Premise(F157)
	S0= XER[SO]=so                                              XER-SO-Hold(S0,S0)
	S0= CtrlXEROV=0                                             Premise(F158)
	S0= CtrlXERCA=0                                             Premise(F159)
	S0= CtrlDR4bit=0                                            Premise(F160)
	S0= [DR4bit]={CompareS(a,{16{SIMM[15]},SIMM}),so}           DR4bit-Hold(S0,S0)
	S0= CtrlCRRegs=1                                            Premise(F161)
	S0= CRRegs[crfD]={CompareS(a,{16{SIMM[15]},SIMM}),so}       CRRegs-Write(S0,S0,S0)
	S0= CtrlCRRegsCR0=0                                         Premise(F162)
	S0= CtrlCRRegsW4bitRegs=0                                   Premise(F163)
	S0= CtrlCRRegsW1bitRegs=0                                   Premise(F164)

POST	S0= [PIDReg]=pid                                            PIDReg-Hold(S0,S0)
	S0= IMem[{pid,addr}]={11,crfD,0,rA,SIMM}                    IMem-Hold(S0,S0)
	S0= PC[CIA]=addr                                            PC-Hold(S0,S0)
	S0= PC[Out]=addr+4                                          PC-Hold(S0,S0,S0)
	S0= [IR]={11,crfD,0,rA,SIMM}                                IR-Hold(S0,S0)
	S0= GPRegs[rA]=a                                            GPRegs-Hold(S0,S0)
	S0= [A]=a                                                   A-Hold(S0,S0)
	S0= [B]={16{SIMM[15]},SIMM}                                 B-Hold(S0,S0)
	S0= XER[SO]=so                                              XER-SO-Hold(S0,S0)
	S0= [DR4bit]={CompareS(a,{16{SIMM[15]},SIMM}),so}           DR4bit-Hold(S0,S0)
	S0= CRRegs[crfD]={CompareS(a,{16{SIMM[15]},SIMM}),so}       CRRegs-Write(S0,S0,S0)

