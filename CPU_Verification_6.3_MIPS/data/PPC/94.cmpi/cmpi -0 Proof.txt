
------------------------------------- Proof -------------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={11,crfD,0,rA,SIMM}                    Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= XER[SO]=so                                              Premise(F4)

IF	S5= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S6= PC.NIA=addr                                             PC-Out(S1)
	S7= PIDReg.Out=>IMem.PID                                    Premise(F5)
	S8= IMem.PID=pid                                            Path(S5,S7)
	S9= PC.NIA=>IMem.Addr                                       Premise(F6)
	S10= IMem.Addr=addr                                         Path(S6,S9)
	S11= IMem.RData={11,crfD,0,rA,SIMM}                         IMem-Read(S8,S10,S2)
	S12= IMem.RData=>IR.In                                      Premise(F7)
	S13= IR.In={11,crfD,0,rA,SIMM}                              Path(S11,S12)
	S14= CtrlPC=0                                               Premise(F23)
	S15= CtrlPCInc=1                                            Premise(F24)
	S16= PC[Out]=addr+4                                         PC-Inc(S1,S14,S15)
	S17= CtrlIR=1                                               Premise(F25)
	S18= [IR]={11,crfD,0,rA,SIMM}                               IR-Write(S13,S17)
	S19= CtrlGPRegs=0                                           Premise(F26)
	S20= GPRegs[rA]=a                                           GPRegs-Hold(S3,S19)
	S21= CtrlXERSO=0                                            Premise(F29)
	S22= XER[SO]=so                                             XER-SO-Hold(S4,S21)

ID	S23= IR.Out11_15=rA                                         IR-Out(S18)
	S24= IR.Out16_31=SIMM                                       IR-Out(S18)
	S25= IR.Out11_15=>GPRegs.RReg1                              Premise(F41)
	S26= GPRegs.RReg1=rA                                        Path(S23,S25)
	S27= GPRegs.RData1=a                                        GPRegs-Read(S26,S20)
	S28= IR.Out16_31=>IMMEXT.In                                 Premise(F42)
	S29= IMMEXT.In=SIMM                                         Path(S24,S28)
	S30= IMMEXT.Out={16{SIMM[15]},SIMM}                         IMMEXT(S29)
	S31= GPRegs.RData1=>A.In                                    Premise(F43)
	S32= A.In=a                                                 Path(S27,S31)
	S33= IMMEXT.Out=>B.In                                       Premise(F44)
	S34= B.In={16{SIMM[15]},SIMM}                               Path(S30,S33)
	S35= CtrlPC=0                                               Premise(F55)
	S36= CtrlPCInc=0                                            Premise(F56)
	S37= PC[Out]=addr+4                                         PC-Hold(S16,S35,S36)
	S38= CtrlIR=0                                               Premise(F57)
	S39= [IR]={11,crfD,0,rA,SIMM}                               IR-Hold(S18,S38)
	S40= CtrlA=1                                                Premise(F59)
	S41= [A]=a                                                  A-Write(S32,S40)
	S42= CtrlB=1                                                Premise(F60)
	S43= [B]={16{SIMM[15]},SIMM}                                B-Write(S34,S42)
	S44= CtrlXERSO=0                                            Premise(F61)
	S45= XER[SO]=so                                             XER-SO-Hold(S22,S44)

EX	S46= A.Out=a                                                A-Out(S41)
	S47= B.Out={16{SIMM[15]},SIMM}                              B-Out(S43)
	S48= XER.SOOut=so                                           XER-SO-Out(S45)
	S49= A.Out=>CMPU.A                                          Premise(F77)
	S50= CMPU.A=a                                               Path(S46,S49)
	S51= B.Out=>CMPU.B                                          Premise(F78)
	S52= CMPU.B={16{SIMM[15]},SIMM}                             Path(S47,S51)
	S53= CMPU.Out=CompareS(a,{16{SIMM[15]},SIMM})               CMPU-CMPS(S50,S52)
	S54= CMPU.Out=>DataCmb.A                                    Premise(F80)
	S55= DataCmb.A=CompareS(a,{16{SIMM[15]},SIMM})              Path(S53,S54)
	S56= XER.SOOut=>DataCmb.B                                   Premise(F81)
	S57= DataCmb.B=so                                           Path(S48,S56)
	S58= DataCmb.Out={CompareS(a,{16{SIMM[15]},SIMM}),so}       DataCmb(S55,S57)
	S59= DataCmb.Out=>DR4bit.In                                 Premise(F82)
	S60= DR4bit.In={CompareS(a,{16{SIMM[15]},SIMM}),so}         Path(S58,S59)
	S61= CtrlPC=0                                               Premise(F87)
	S62= CtrlPCInc=0                                            Premise(F88)
	S63= PC[Out]=addr+4                                         PC-Hold(S37,S61,S62)
	S64= CtrlIR=0                                               Premise(F89)
	S65= [IR]={11,crfD,0,rA,SIMM}                               IR-Hold(S39,S64)
	S66= CtrlDR4bit=1                                           Premise(F96)
	S67= [DR4bit]={CompareS(a,{16{SIMM[15]},SIMM}),so}          DR4bit-Write(S60,S66)

MEM	S68= CtrlPC=0                                               Premise(F119)
	S69= CtrlPCInc=0                                            Premise(F120)
	S70= PC[Out]=addr+4                                         PC-Hold(S63,S68,S69)
	S71= CtrlIR=0                                               Premise(F121)
	S72= [IR]={11,crfD,0,rA,SIMM}                               IR-Hold(S65,S71)
	S73= CtrlDR4bit=0                                           Premise(F128)
	S74= [DR4bit]={CompareS(a,{16{SIMM[15]},SIMM}),so}          DR4bit-Hold(S67,S73)

WB	S75= IR.Out6_8=crfD                                         IR-Out(S72)
	S76= DR4bit.Out={CompareS(a,{16{SIMM[15]},SIMM}),so}        DR4bit-Out(S74)
	S77= IR.Out6_8=>CRRegs.WReg                                 Premise(F147)
	S78= CRRegs.WReg=crfD                                       Path(S75,S77)
	S79= DR4bit.Out=>CRRegs.WData                               Premise(F148)
	S80= CRRegs.WData={CompareS(a,{16{SIMM[15]},SIMM}),so}      Path(S76,S79)
	S81= CtrlPC=0                                               Premise(F151)
	S82= CtrlPCInc=0                                            Premise(F152)
	S83= PC[Out]=addr+4                                         PC-Hold(S70,S81,S82)
	S84= CtrlCRRegs=1                                           Premise(F161)
	S85= CRRegs[crfD]={CompareS(a,{16{SIMM[15]},SIMM}),so}      CRRegs-Write(S78,S80,S84)

POST	S83= PC[Out]=addr+4                                         PC-Hold(S70,S81,S82)
	S85= CRRegs[crfD]={CompareS(a,{16{SIMM[15]},SIMM}),so}      CRRegs-Write(S78,S80,S84)

