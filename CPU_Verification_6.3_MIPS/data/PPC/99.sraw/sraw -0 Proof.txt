
------------------------------------- Proof -------------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rS,rA,rB,1584}                     Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= GPRegs[rB]=b                                            Premise(F4)

IF	S5= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S6= PC.NIA=addr                                             PC-Out(S1)
	S7= PIDReg.Out=>IMem.PID                                    Premise(F5)
	S8= IMem.PID=pid                                            Path(S5,S7)
	S9= PC.NIA=>IMem.Addr                                       Premise(F6)
	S10= IMem.Addr=addr                                         Path(S6,S9)
	S11= IMem.RData={31,rS,rA,rB,1584}                          IMem-Read(S8,S10,S2)
	S12= IMem.RData=>IR.In                                      Premise(F7)
	S13= IR.In={31,rS,rA,rB,1584}                               Path(S11,S12)
	S14= CtrlPC=0                                               Premise(F24)
	S15= CtrlPCInc=1                                            Premise(F25)
	S16= PC[Out]=addr+4                                         PC-Inc(S1,S14,S15)
	S17= CtrlIR=1                                               Premise(F26)
	S18= [IR]={31,rS,rA,rB,1584}                                IR-Write(S13,S17)
	S19= CtrlGPRegs=0                                           Premise(F27)
	S20= GPRegs[rA]=a                                           GPRegs-Hold(S3,S19)
	S21= GPRegs[rB]=b                                           GPRegs-Hold(S4,S19)

ID	S22= IR.Out11_15=rA                                         IR-Out(S18)
	S23= IR.Out16_20=rB                                         IR-Out(S18)
	S24= IR.Out11_15=>GPRegs.RReg1                              Premise(F39)
	S25= GPRegs.RReg1=rA                                        Path(S22,S24)
	S26= GPRegs.RData1=a                                        GPRegs-Read(S25,S20)
	S27= IR.Out16_20=>GPRegs.RReg2                              Premise(F40)
	S28= GPRegs.RReg2=rB                                        Path(S23,S27)
	S29= GPRegs.RData2=b                                        GPRegs-Read(S28,S21)
	S30= GPRegs.RData1=>A.In                                    Premise(F42)
	S31= A.In=a                                                 Path(S26,S30)
	S32= GPRegs.RData2=>ShamtReg.In32bit                        Premise(F43)
	S33= ShamtReg.In32bit=b                                     Path(S29,S32)
	S34= CtrlPC=0                                               Premise(F54)
	S35= CtrlPCInc=0                                            Premise(F55)
	S36= PC[Out]=addr+4                                         PC-Hold(S16,S34,S35)
	S37= CtrlIR=0                                               Premise(F56)
	S38= [IR]={31,rS,rA,rB,1584}                                IR-Hold(S18,S37)
	S39= CtrlA=1                                                Premise(F58)
	S40= [A]=a                                                  A-Write(S31,S39)
	S41= CtrlShamtReg=1                                         Premise(F59)
	S42= [ShamtReg]=b[26:31]                                    ShamtReg-Write(S33,S41)

EX	S43= A.Out=a                                                A-Out(S40)
	S44= ShamtReg.Out=b[26:31]                                  ShamtReg-Out(S42)
	S45= A.Out=>SU.Data                                         Premise(F74)
	S46= SU.Data=a                                              Path(S43,S45)
	S47= ShamtReg.Out=>SU.Shamt                                 Premise(F75)
	S48= SU.Shamt=b[26:31]                                      Path(S44,S47)
	S49= SU.Out=a>>b[26:31]                                     SU(S46,S48)
	S50= SU.CA=Carry(a>>b[26:31])                               SU(S46,S48)
	S51= SU.Out=>ALUOut.In                                      Premise(F77)
	S52= ALUOut.In=a>>b[26:31]                                  Path(S49,S51)
	S53= SU.CA=>CAReg.In                                        Premise(F78)
	S54= CAReg.In=Carry(a>>b[26:31])                            Path(S50,S53)
	S55= CtrlPC=0                                               Premise(F84)
	S56= CtrlPCInc=0                                            Premise(F85)
	S57= PC[Out]=addr+4                                         PC-Hold(S36,S55,S56)
	S58= CtrlIR=0                                               Premise(F86)
	S59= [IR]={31,rS,rA,rB,1584}                                IR-Hold(S38,S58)
	S60= CtrlALUOut=1                                           Premise(F90)
	S61= [ALUOut]=a>>b[26:31]                                   ALUOut-Write(S52,S60)
	S62= CtrlCAReg=1                                            Premise(F91)
	S63= [CAReg]=Carry(a>>b[26:31])                             CAReg-Write(S54,S62)

MEM	S64= CtrlPC=0                                               Premise(F114)
	S65= CtrlPCInc=0                                            Premise(F115)
	S66= PC[Out]=addr+4                                         PC-Hold(S57,S64,S65)
	S67= CtrlIR=0                                               Premise(F116)
	S68= [IR]={31,rS,rA,rB,1584}                                IR-Hold(S59,S67)
	S69= CtrlALUOut=0                                           Premise(F120)
	S70= [ALUOut]=a>>b[26:31]                                   ALUOut-Hold(S61,S69)
	S71= CtrlCAReg=0                                            Premise(F121)
	S72= [CAReg]=Carry(a>>b[26:31])                             CAReg-Hold(S63,S71)

WB	S73= IR.Out6_10=rS                                          IR-Out(S68)
	S74= ALUOut.Out=a>>b[26:31]                                 ALUOut-Out(S70)
	S75= CAReg.Out=Carry(a>>b[26:31])                           CAReg-Out(S72)
	S76= IR.Out6_10=>GPRegs.WReg                                Premise(F139)
	S77= GPRegs.WReg=rS                                         Path(S73,S76)
	S78= ALUOut.Out=>GPRegs.WData                               Premise(F140)
	S79= GPRegs.WData=a>>b[26:31]                               Path(S74,S78)
	S80= CAReg.Out=>XER.CAIn                                    Premise(F141)
	S81= XER.CAIn=Carry(a>>b[26:31])                            Path(S75,S80)
	S82= CtrlPC=0                                               Premise(F144)
	S83= CtrlPCInc=0                                            Premise(F145)
	S84= PC[Out]=addr+4                                         PC-Hold(S66,S82,S83)
	S85= CtrlGPRegs=1                                           Premise(F147)
	S86= GPRegs[rS]=a>>b[26:31]                                 GPRegs-Write(S77,S79,S85)
	S87= CtrlXERCA=1                                            Premise(F154)
	S88= XER[CA]=Carry(a>>b[26:31])                             XER-CA-Write(S81,S87)

POST	S84= PC[Out]=addr+4                                         PC-Hold(S66,S82,S83)
	S86= GPRegs[rS]=a>>b[26:31]                                 GPRegs-Write(S77,S79,S85)
	S88= XER[CA]=Carry(a>>b[26:31])                             XER-CA-Write(S81,S87)

